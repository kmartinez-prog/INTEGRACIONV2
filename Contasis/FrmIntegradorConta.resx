<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="txtguardarcompras.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION func_guardar_fin_compras(
    OUT resultado text,
    IN pjson text)
  RETURNS text AS
$BODY$
declare 
	a_json json;
begin


    -- 0. Truncar tabla
    truncate table fin_compras;
    a_json = pjson::json;
    -- 1. Importar datos
    INSERT INTO fin_compras(
		    idcompras, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodori_p, 
		    ccodsu_p, ccodcue_ps, ccodcue_pd, ccodflu, flgctares, flgctaimp, 
		    flgctaact, flggencomp, ccodtipent, ffechadoc, fechaven, ccoddoc, 
		    ccoddas, cyeardas, cserie, cnumero, ccodenti, cdesenti, ctipdoc, 
		    ccodruc, crazsoc, ccodclas, nbase1, nigv1, nbase2, nigv2, nbase3, 
		    nigv3, nina, nisc, nicbper, nexo, ntots, cdocnodom, cnumdere, 
		    ffecre, ntc, freffec, crefdoc, crefser, crefnum, cmreg, ndolar, 
		    ffechaven2, ccond, cctabase, cctaicbper, cctaotrib, cctatot, 
		    ccodcos, ccodcos2, nresp, nporre, nimpres, cserre, cnumre, ffecre2, 
		    ccodpresu, nigv, cglosa, nperdenre, nbaseres, cigvxacre, 
		    estado, en_ambiente_de, es_con_migracion, ccodcos3,ccodrucanula
    )
    select
        idcompras, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodori_p, 
        ccodsu_p, ccodcue_ps, ccodcue_pd, ccodflu, flgctares, flgctaimp, 
        flgctaact, flggencomp, ccodtipent,
        
        case when trim(coalesce(ffechadoc, ''))='' then null else ffechadoc::date end,
        case when trim(coalesce(fechaven, ''))='' then null else fechaven::date end,     
        coalesce(replace(ccoddoc, chr(141), ''),'') as ccoddoc, 
        coalesce(replace(ccoddas, chr(141), ''),'') as ccoddas,
        coalesce(replace(cyeardas, chr(141), ''),'')as cyeardas,
        lpad(coalesce(replace(cserie, chr(141), ''),''),20,'0') as cserie,
        lpad(coalesce(replace(cnumero, chr(141), ''),''),20,'0') as cnumero,
        coalesce(replace(ccodenti, chr(141), ''),'') as ccodenti, 
        coalesce(replace(cdesenti, chr(141), ''),'') as cdesenti,
        coalesce(replace(ctipdoc, chr(141), ''),'') as ctipdoc, 
        coalesce(replace(ccodruc, chr(141), ''),'') as ccodruc,
        coalesce(replace(crazsoc, chr(141), ''),'') as crazsoc,
        coalesce(replace(ccodclas, chr(141), ''),'')as ccodclas,
        coalesce(nbase1, 0.00),
        coalesce(nigv1, 0.00) as nigv1,
        coalesce(nbase2, 0.00) as nbase2,
        coalesce(nigv2, 0.00) as nigv2,
        coalesce(nbase3, 0.00) as nbase3, 
        coalesce(nigv3, 0.00) as nigv3,
        coalesce(nina,0.00) as nina,
        coalesce(nisc,0.00) as niac,
        coalesce(nicbper,0.00) as nicbper,
        coalesce(nexo,0.00) as nexo,
        coalesce(ntots,0.00) as ntots,
        coalesce(replace(cdocnodom, chr(141), ''),'') as cdocnodom,
        coalesce(replace(cnumdere, chr(141), ''),'') as cnumdere, 
        case when trim(coalesce(ffecre, ''))='' then null else ffecre::date end,
        ntc,
        case when trim(coalesce(freffec, ''))='' then null else freffec::date end,
        coalesce(replace(crefdoc, chr(141), ''),'') as crefdoc,
        coalesce(replace(crefser, chr(141), ''),'') as crefser,
        coalesce(replace(crefnum, chr(141), ''),'') as crefnum,
        coalesce(replace(cmreg, chr(141), ''),'') as cmreg,
        coalesce(ndolar,0.00) as ndolar, 
        case when trim(coalesce(ffechaven2, ''))='' then null else ffechaven2::date end,
        coalesce(replace(ccond, chr(141), ''),'') as ccod,
        coalesce(replace(cctabase, chr(141), ''),'') as cctabase,
        coalesce(replace(cctaicbper, chr(141), ''),'') as cctaicbper,
        coalesce(replace(cctaotrib, chr(141), ''),'') as cctaotrib,
        coalesce(replace(cctatot, chr(141), ''),'') as cctatot, 
        coalesce(replace(ccodcos, chr(141), ''),'') as ccodcos,
        coalesce(replace(ccodcos2, chr(141), ''),'') as ccodcos2, 
        coalesce(nresp,0.0) as nresp,
        coalesce(nporre,0.00) as nporre,
        coalesce(nimpres,0.00) as nimpres,
        coalesce(replace(cserre, chr(141), ''),'') as cserre,
        coalesce(replace(cnumre, chr(141), ''),'') as cnumre,
        case when trim(coalesce(ffecre2, ''))='' then null else ffecre2::date end, 
        coalesce(replace(ccodpresu, chr(141), ''),'') as ccodpresu,
        nigv,
        coalesce(replace(cglosa, chr(141), ''),'') ::varchar(80) as cglosa,
        coalesce(nperdenre,0.00) as nperdenre,
        coalesce(nbaseres,0.00) as nbaseres,
        coalesce(replace(cigvxacre, chr(141), ''),'') as cigvxacre, 
        estado,
        en_ambiente_de,
        es_con_migracion,
        ccodcos3,
        coalesce(ccodrucanula,'') as ccodrucanula
    from json_to_recordset(a_json)
    as t(
        idcompras numeric(20,0),
        ccod_empresa character(3),
        cper character(4),
        cmes character(2),
        ccodori character(3),
        ccodsu character(2),
        ccodori_p character(3),
        ccodsu_p character(2),
        ccodcue_ps character(20),
        ccodcue_pd character(20),
        ccodflu character(4),
        flgctares numeric(1,0),
        flgctaimp numeric(1,0),
        flgctaact numeric(1,0),
        flggencomp numeric(1,0),
        ccodtipent character(3),
        ffechadoc text, -- date,
        fechaven text,  -- date,
        ccoddoc character(2),
        ccoddas character(3),
        cyeardas character(4),
        cserie character(20),
        cnumero character(20),
        ccodenti character(11),
        cdesenti character(100),
        ctipdoc character(1),
        ccodruc character(15),
        crazsoc character(100),
        ccodclas character(1),
        nbase1 numeric(15,2),
        nigv1 numeric(15,2),
        nbase2 numeric(15,2),
        nigv2 numeric(15,2),
        nbase3 numeric(15,2),
        nigv3 numeric(15,2),
        nina numeric(15,2),
        nisc numeric(15,2),
        nicbper numeric(15,2),
        nexo numeric(15,2),
        ntots numeric(15,2),
        cdocnodom character(20),
        cnumdere character(15),
        ffecre text, -- date,
        ntc numeric(10,6),
        freffec text, -- date,
        crefdoc character(2),
        crefser character(6),
        crefnum character(13),
        cmreg character(1),
        ndolar numeric(15,2),
        ffechaven2 text, --date,
        ccond character(3),
        cctabase character(10),
        cctaicbper character(10),
        cctaotrib character(10),
        cctatot character(10),
        ccodcos character(9),
        ccodcos2 character(9),
        nresp numeric(1,0),
        nporre numeric(5,2),
        nimpres numeric(15,2),
        cserre character(6),
        cnumre character(13),
        ffecre2 text, --date,
        ccodpresu character(10),
        nigv numeric(5,2),
        cglosa Text,
        nperdenre numeric(15,2),
        nbaseres numeric(15,2),
        cigvxacre character(1),
        estado character varying(255),
        en_ambiente_de character varying(255),
        es_con_migracion numeric(1,0),
        ccodcos3 character(15),
        ccodrucanula character(15)
    );
	--

    --2. Validar/generar asientos
    perform fin_compras_integracion_principal();
    

    --3. Informe de importacion    
    select json_agg(json_build_object(
        'idcompras', fc.idcompras, 'obserror', fc.obserror, 'es_con_migracion', fc.es_con_migracion, 'resultado_migracion', fc.resultado_migracion
    ))::text
    from fin_compras fc
    into resultado;


    
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;</value>
  </data>
  <data name="txtguardarventas.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION func_guardar_fin_ventas(
    OUT resultado text,
    IN pjson text)
  RETURNS text AS
$BODY$

declare 
	a_json json;
begin

    /*
    Tipo:   1: Provision
            2: Anulacion
    */

    -- 0. Truncar tabla
    truncate table fin_ventas;
    a_json = pjson::json;
    -- 1. Importar datos
    INSERT INTO fin_ventas(
        idventas, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodori_p, 
        ccodsu_p, ccodcue_ps, ccodcue_pd, ccodflu, flgctares, flgctaimp, 
        flgctaact, flggencomp, ccodtipent, ffechadoc, ffechaven, ccoddoc, 
        cserie, cnumero, ccodenti, cdesenti, ctipdoc, ccodruc, crazsoc, 
        nbase2, nbase1, nexo, nina, nisc, nigv1, nicbpers, nbase3, ntots, 
        ntc, freffec, crefdoc, crefser, crefnum, cmreg, ndolar, ffechaven2, 
        ccond, ccodcos, ccodcos2, cctabase, cctaicbper, cctaotrib, cctatot, 
        nresp, nporre, nimpres, cserre, cnumre, ffecre, ccodpresu, nigv, 
        cglosa, ccodpago, nperdenre, nbaseres, cctaperc, -- created_at,updated_at, 
		estado, en_ambiente_de, es_con_migracion, ccodcos3,ccodrucanula
    )
    
    select
        idventas, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodori_p, 
		ccodsu_p, ccodcue_ps, ccodcue_pd, ccodflu, flgctares, flgctaimp, 
		flgctaact, flggencomp, ccodtipent,

		ffechadoc, ffechaven, ccoddoc, 
		lpad(trim(coalesce(replace(cserie, chr(141), ''),'')),20,'0') as cserie,
		lpad(trim(coalesce(replace(cnumero, chr(141), ''),'')),20,'0') as cnumero,
		trim(replace(ccodenti, chr(141), '')) as ccodenti,
		replace(cdesenti, chr(141), ''),
		replace(ctipdoc, chr(141), ''),
		trim(replace(ccodruc, chr(141), '')) as ccodruc,
		replace(crazsoc, chr(141), ''),
		coalesce(nbase2,0.00) as nbase2,
		coalesce(nbase1,0.00) as nbase1,
		coalesce(nexo,0.00) as nexo,
		coalesce(nina,0.00) as nina,
		coalesce(nisc,0.00) as nisc,
		coalesce(nigv1,0.00) as nigv1,
		coalesce(nicbpers,0.00) as nicbpers,
		coalesce(nbase3,0.00) as nbase3,
		coalesce(ntots,0.00) as ntots, 
		coalesce(ntc,0.00) as ntc,
		case when freffec='' then null else freffec::date end freffec,
		coalesce(replace(crefdoc, chr(141), ''),'') as crefdoc,
		coalesce(replace(crefser, chr(141), ''),'') as crefser,
		coalesce(replace(crefnum, chr(141), ''),''),
		coalesce(replace(cmreg, chr(141), ''),'') cmreg,
		ndolar, 
		case when ffechaven2='' then null else ffechaven2::date end ffechaven2 , 
		coalesce(replace(ccond, chr(141), ''),'') as ccond,
		coalesce(replace(ccodcos, chr(141), ''),'') as ccodcos,
		coalesce(replace(ccodcos2, chr(141), ''),'') as ccodcos2,
		coalesce(replace(cctabase, chr(141), ''),'') as cctabase,
		coalesce(replace(cctaicbper, chr(141), ''),'') as cctaicbper,
		coalesce(replace(cctaotrib, chr(141), ''),'') as cctaotrib,
		coalesce(replace(cctatot, chr(141), ''),'') as cctatot, 
		coalesce(nresp,0) as nresp,
		coalesce(nporre,0.00) as nporre,
		coalesce(nimpres,0.00) as nimpres,
		coalesce(replace(cserre, chr(141), ''),'') as cserre,
		coalesce(replace(cnumre, chr(141), ''),'') as cnumre, 
		case when ffecre='' then null else ffecre::date end ffecre,
		coalesce(replace(ccodpresu, chr(141), ''),'') as ccodpresu,
		coalesce(nigv,0.00) as nigv, 
		coalesce(replace(cglosa, chr(141), ''), '') ::varchar(80) as cglosa,
		coalesce(replace(ccodpago, chr(141), ''),'') as ccodpago,
		coalesce(nperdenre,0) as nperdenre,
		coalesce(nbaseres,0.00) as nbaseres,
		coalesce(replace(cctaperc, chr(141), ''),'') as cctaperc,
		coalesce(estado,'') as estado,
		coalesce(en_ambiente_de,'') as en_ambiente_de,
		es_con_migracion,
		coalesce(ccodcos3,'') as ccodcos3,
		coalesce(ccodrucanula,'') as ccodrucanula
    from json_to_recordset(a_json)
    as t(
        idventas numeric(20,0),
        ccod_empresa character(3),
        cper character(4),
        cmes character(2),
        ccodori character(3),
        ccodsu character(2),
        ccodori_p character(3),
        ccodsu_p character(2),
        ccodcue_ps character(20),
        ccodcue_pd character(20),
        ccodflu character(4),
        flgctares numeric(1,0),
        flgctaimp numeric(1,0),
        flgctaact numeric(1,0),
        flggencomp numeric(1,0),
        ccodtipent character(3),
        ffechadoc date,
        ffechaven date,
        ccoddoc character(2),
        cserie character(20),
        cnumero character(20),
        ccodenti character(11),
        cdesenti character(100),
        ctipdoc character(1),
        ccodruc character(15),
        crazsoc character(100),
        nbase2 numeric(15,2),
        nbase1 numeric(15,2),
        nexo numeric(15,2),
        nina numeric(15,2),
        nisc numeric(15,2),
        nigv1 numeric(15,2),
        nicbpers numeric(15,2),
        nbase3 numeric(15,2),
        ntots numeric(15,2),
        ntc numeric(10,6),
        freffec character(10),
        crefdoc character(2),
        crefser character(6),
        crefnum character(13),
        cmreg character(1),
        ndolar numeric(15,2),
        ffechaven2 character(10),
        ccond character(3),
        ccodcos character(9),
        ccodcos2 character(9),
        cctabase character(20),
        cctaicbper character(20),
        cctaotrib character(20),
        cctatot character(20),
        nresp numeric(1,0),
        nporre numeric(5,2),
        nimpres numeric(15,2),
        cserre character(6),
        cnumre character(13),
        ffecre character(10),
        ccodpresu character(10),
        nigv numeric(5,2),
        cglosa Text,
        ccodpago character(3),
        nperdenre numeric(1,0),
        nbaseres numeric(15,2),
        cctaperc character(20),
        estado character varying(255),
        en_ambiente_de character varying(255),
        es_con_migracion numeric(1,0),
        ccodcos3 character(15),
        ccodrucanula character(15)
    );

	-- 
	perform fin_ventas_integracion_principal();
            

    --3. Informe de importacion    
    select json_agg(json_build_object(
        'idventas', fc.idventas, 'obserror', fc.obserror, 'es_con_migracion', fc.es_con_migracion, 'resultado_migracion', fc.resultado_migracion
    ))::text
    from fin_ventas fc
    into resultado;

    
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;</value>
  </data>
  <data name="txtanulacioncompras.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION func_guardar_integracion_anuladoc(pxml xml)
	RETURNS void AS
$BODY$
declare 
	rw record; 
	nControl integer; 
	/*
		-- Puebas 
		select func_guardar_integracion_anuladoc(varxml::xml) 

	*/
begin 	
nControl = 0; 	
for rw in select * from xml_a_cursor
		   (pXml, '/VFPData/cfinanula/'::varchar, 
			 '{ idcompras, 
				ccod_empresa, 
				cper, 
				ccoddoc, 
				cserie, 
				cnumero, 
				ccodruc, 
				ccodrucanula }'::varchar[], 
			' { "varchar::numeric(20,0)",
				character(3),
				character(4),
				character(2),
				character(20),
				character(20),
				character(15),
				character(15) }'::varchar[] 
			) as (idcompras numeric(20,0),
				ccod_empresa character(3),
				cper character(4),
				ccoddoc character(2),
				cserie character(20),
				cnumero character(20),
				ccodruc character(15),
				ccodrucanula character(15)) loop 	
	
	nControl = 1; 

	INSERT INTO fin_anuladoc(idcompras, ccod_empresa, cper, ccoddoc, cserie, cnumero, ccodruc, ccodrucanula)
	    VALUES (rw.idcompras, rw.ccod_empresa, rw.cper, rw.ccoddoc, rw.cserie, rw.cnumero, rw.ccodruc, rw.ccodrucanula);


	end loop; 			
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE</value>
  </data>
  <data name="txtasientocompas1.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION public.fin_compras_integracion_principal(
	)
    RETURNS void
AS $BODY$

DECLARE 

	    RW RECORD;
	    rwperproceso record; 
	    rwemp record; 
	    rw2 record; 
	    rwnumerado  record;
	    rwctualizasubdiario record;
	    rwanuladoc  record;
	    varigv character(10) ; 
	    varigv2 character(10) ;
	    varccodflu character(10) ;
	    varpresua integer;
	    varpresui integer;
	    varpresur integer;
	    varsolocompra integer;
	    varigv3 character(10) ;
	    varigvspot character(10) ;
	    varlreg character(10);
	    vardifp character(10);
	    vardifpd character(10);
	    vardifph character(10);
	    vardifg character(10);							
	    varlregcont character(10);
	    varmaxcob integer;
	    varctaisc character(10);
	    VCMAXASIENTO text = ''; 
	    VCMAXASIENTO_p text = ''; 
	    varmax integer; 
	    vnumasiento integer;
	    vccoddoc  character(2);
	    vcserie character(20);
	    vcnumero character(20);
	    vctipdoc character(1);
	    vccodruc character(15);
	    vxcctatot character(10);
	    varcentro2 integer;
	    varpresupuestos integer;
            nreturn integer=0;
            vcPerproceso char(4); 
			varccodenti char(4);
			varcdesenti char(100);
	
BEGIN
	varcentro2=0;
	-- Validaciones fin_compras
	-- Insetandoi entidades 
	
/*****************************************validad empresa ****************************************/
Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-','Codigo no corresponde a la empresa Emisor.'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.idcompras in (
select idcompras from FIN_COMPRAS where ccod_empresa not in (select substr(current_database(),10,3))
);
	
/******************************** entidades validaciones *************************************************/	
	
	/***** 05/12/2024 actualizacion de funcion para evitar ruc duplicados con diferente razon social*******************/
	Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-','Ruc duplicado con descripcion o tipo de doc.diferente'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.ccodruc in(
		select ccodruc  from (
		select ccodruc,crazsoc, ctipdoc,CNATJUR,count(*) as cnt  from (
		select DISTINCT ccodruc,crazsoc, ctipdoc,case 
			when ctipdoc='1' and Length(ltrim(ccodruc))=8 then '1'
			when ctipdoc='6' and Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)in('10','15') then '1'
			when ctipdoc='6' and Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)='20' then '2'
			when trim(ctipdoc)='0' and Length(ltrim(ccodruc))&lt;=15  then '3'
			when ctipdoc='7' and Length(ltrim(ccodruc))=12  then '1'
			when ctipdoc='7' then '1'		
			when ctipdoc='4' and Length(ltrim(ccodruc))=12  then '1'
			when ctipdoc='4' and Length(ltrim(ccodruc))&lt;11  then '3' else '0'
			 END ::CHAR(1) AS CNATJUR  FROM FIN_COMPRAS
			 WHERE crazsoc NOT LIKE('%ANULAD%') 
		) as data where data.ccodruc not in (select ccodruc from cg_entitrib) group by ccodruc,crazsoc, ctipdoc,CNATJUR ) 
			as cliente where cnt&gt;1); 
	
	
	

	Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-','Razon social(crazoc) no puede estar vacio'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.crazsoc='';
	
	Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-','Ruc o codigo de Identidad(ccodruc) no puede estar vacio'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.ccodruc='';

	Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-','Tipos de Identidad(ctipdoc) no puede estar vacio'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.ctipdoc='';



	/***** 05/12/2024 actualizacion de funcion para evitar ruc duplicados con diferente razon social*******************/
	Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-','Ruc duplicado con descripcion o tipo de doc.diferente'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.ccodruc in(
		select ccodruc  from (
		select ccodruc,crazsoc, ctipdoc,CNATJUR,count(*) as cnt  from (
		select DISTINCT ccodruc,crazsoc, ctipdoc,case 
			when ctipdoc='1' and Length(ltrim(ccodruc))=8 then '1'
			when ctipdoc='6' and Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)in('10','15') then '1'
			when ctipdoc='6' and Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)='20' then '2'
			when trim(ctipdoc)='0' and Length(ltrim(ccodruc))&lt;=15  then '3'
			when ctipdoc='7' and Length(ltrim(ccodruc))=12  then '1'
			when ctipdoc='7' then '1'		
			when ctipdoc='4' and Length(ltrim(ccodruc))=12  then '1'
			when ctipdoc='4' and Length(ltrim(ccodruc))&lt;11  then '3' else '0'
			 END ::CHAR(1) AS CNATJUR  FROM FIN_COMPRAS
			 WHERE crazsoc NOT LIKE('%ANULAD%') 
		) as data where data.ccodruc not in (select ccodruc from cg_entitrib) group by ccodruc,crazsoc, ctipdoc,CNATJUR ) 
			as cliente where cnt&gt;1); 
	

	for rwperproceso in select distinct cper as cperproceso from fin_compras loop 	
		
		-- propiedades de empresa por periodos 
		---cg_emppro.ccodenti
		for rwemp in select cper, cctaigv, ccueimp2c, ccueimp3c, cctaigvxacre, cctaper, cctagan,cctaisc,ncencosalt,cg_emppro.ccodenti ,cdesenti
			from cg_emppro  inner join cg_entidad on   cg_emppro.ccodenti =cg_entidad.ccodenti where cper = rwperproceso.cperproceso loop
		
		    varigv = rwemp.cctaigv ;
		    varigv2 = rwemp.ccueimp2c ;
		    varigv3 = rwemp.ccueimp3c ;
		    varigvspot = rwemp.cctaigvxacre ;
		    vardifp = rwemp.cctaper ;
		    vardifpd = (select cdesdeb from cf_plan where cper = rwemp.cper and ccodcue = rwemp.cctaper);  
		    vardifph = (select cdeshab from cf_plan where cper = rwemp.cper and ccodcue = rwemp.cctaper);  
		    vardifg = rwemp.cctagan ;								
		    varmaxcob = 0 ;
		    varctaisc =  rwemp.cctaisc;    
		    varcentro2 =  rwemp.ncencosalt;   
		    varpresupuestos  =  0; 
			varccodenti	= rwemp.ccodenti;
			varcdesenti	= rwemp.cdesenti;				
	  	end loop; 
		update fin_compras set ccodenti=varccodenti,cdesenti=varcdesenti;
		
			

		if rwemp.ncencosalt=1  then	
			update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' CTRO DE COSTO2 NO PUEDE ESTA VACIO&lt;REV.PROP.EMPRESA&gt;') ,  resultado_migracion = 2 
		where  ltrim(fin_compras.ccodcos2) ='' ;
		END IF ;


		-- Validar serie no vacia
		Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-',' Serie no puede estar vacia, valor obligatorio'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.cserie='';

		-- Validar Numero no vacia
		Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-',' Numero de serie no puede estar vacia, valor obligatorio'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.cnumero='';

		Update  FIN_COMPRAS set obserror=CONCAT(ltrim(obserror),'-',' Tipo de doc.(ccoddoc) estar vacia, valor obligatorio'), 
		resultado_migracion = 2  
		where  FIN_COMPRAS.cnumero='';


		update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' Tipo de documento(ccoddoc) NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_compras.cper=rwperproceso.cperproceso and   fin_compras.es_con_migracion=0 and  fin_compras.ccoddoc&lt;&gt;' ' AND idcompras not in(
		Select idcompras From fin_compras inner join cg_doc on
		fin_compras.ccoddoc=cg_doc.ccoddoc  WHERE  fin_compras.cper=rwperproceso.cperproceso); 


-------select *  from fin_compras where   ltrim(fin_compras.cctabase) in (select rtrim(ccodcue)  from cf_plan where cf_plan.cper='2024' and cf_plan.nafepre=1 );
---select * from cf_plan where cf_plan.cper='2024' and cf_plan.nafepre=2  
		
		-- Validar cctabase,cctaicbper cctaotrib, cctatot, ccodcos, ccodcos2,	
		Update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' Codigo de Presupuesto esta vacío'), resultado_migracion = 2  
		where  fin_compras.ccodpresu='' and fin_compras.cctabase in (select ccodcue  from cf_plan where cf_plan.cper=rwperproceso.cperproceso and cf_plan.nafepre=2);
		
		update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' CUENTA CONTABLE BASE IMPONIBLE NO EXISTE '), resultado_migracion = 2  
		where fin_compras.cper=rwperproceso.cperproceso and fin_compras.es_con_migracion=0 and  idcompras not in(
		Select idcompras From fin_compras inner join cf_plan on
			fin_compras.cper=cf_plan.cper and 
			fin_compras.cctabase=cf_plan.ccodcue where fin_compras.cper=rwperproceso.cperproceso); 

		update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' CUENTA CONTABLE BASE ICBPER NO EXISTE '),  resultado_migracion = 2 
		where  fin_compras.cper=rwperproceso.cperproceso and fin_compras.es_con_migracion=0  and  fin_compras.cctaicbper&lt;&gt;' '  AND idcompras not in(
		Select idcompras From fin_compras inner join cf_plan on
		fin_compras.cper=cf_plan.cper and 
		fin_compras.cctaicbper=cf_plan.ccodcue  WHERE  fin_compras.cper=rwperproceso.cperproceso and fin_compras.cctaicbper&lt;&gt;' '  );

		update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' CUENTA CONTABLE OTROS TRIBUTOS Y CARGOS NO EXISTE ') ,  resultado_migracion = 2 
		where fin_compras.cper=rwperproceso.cperproceso and  es_con_migracion=0 and fin_compras.cctaotrib&lt;&gt;' ' AND idcompras not in(
		Select idcompras From fin_compras inner join cf_plan on
			fin_compras.cper=cf_plan.cper and 
			fin_compras.cctaotrib=cf_plan.ccodcue  WHERE  fin_compras.cper=rwperproceso.cperproceso  and fin_compras.cctaotrib&lt;&gt;' ');

		update  fin_compras set obserror=CONCAT(ltrim(obserror),'-','CAMPO NEXO ESTA CON IMP. PERO SU  CUENTA OTROS TRIBUTOS Y CARGOS ESTA VACIO ') ,  resultado_migracion = 2 
		where fin_compras.cper=rwperproceso.cperproceso  and  es_con_migracion=0 AND fin_compras.NEXO &gt;0 AND fin_compras.cctaotrib='';


		update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' CUENTA CONTABLE TOTAL NO EXISTE '),  resultado_migracion = 2 
		where fin_compras.cper=rwperproceso.cperproceso and  es_con_migracion=0 and  idcompras not in(
		Select idcompras From fin_compras inner join cf_plan on
			fin_compras.cper=cf_plan.cper and 
			fin_compras.cctatot=cf_plan.ccodcue WHERE  fin_compras.cper=rwperproceso.cperproceso); 

		update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' CENTRO DE COSTO NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_compras.cper=rwperproceso.cperproceso and   fin_compras.es_con_migracion=0 and  fin_compras.ccodcos&lt;&gt;' ' AND idcompras not in(
		Select idcompras From fin_compras inner join CG_COSTOS on
		fin_compras.ccodcos=CG_COSTOS.ccodcos  WHERE  fin_compras.cper=rwperproceso.cperproceso); 

		update  fin_compras set obserror=CONCAT(ltrim(obserror),'-',' CENTROS DE COSTO 2 NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_compras.cper=rwperproceso.cperproceso and   fin_compras.es_con_migracion=0 and  fin_compras.ccodcos2&lt;&gt;' ' and idcompras not in(
		Select idcompras From fin_compras inner join CG_COSTOS2 on
		fin_compras.ccodcos2=CG_COSTOS2.ccodcos2  WHERE  fin_compras.cper=rwperproceso.cperproceso); 

		
		

		

		-- Cursor vucara documentos existentes drop table documentoexistentes 
		
		DROP TABLE IF EXISTS documentoexistentes;
		create temp table documentoexistentes as 
		select cper, cmes, ccodori, nasiento, ncomp,ccoddoc, cserie, cnumero, ccodruc 
		--from cf_diariol where cper = '2024' and ncomp = 1;
		from cf_diariol where cper = rwperproceso.cperproceso and ncomp = 1; 
		

		---- para evitar duplicados	
		update fin_compras set obserror=CONCAT(ltrim(obserror),'-','ya registrado'),  resultado_migracion = 1  
		where cper=rwperproceso.cperproceso and concat(ccoddoc,cserie,cnumero,ccodruc)  
			in( select concat(ccoddoc,cserie,cnumero,ccodruc) from documentoexistentes 
				where concat(ccoddoc,cserie,cnumero,ccodruc) in(select concat(ccoddoc,cserie,cnumero,ccodruc) from fin_compras where cper=rwperproceso.cperproceso and  es_con_migracion=0 ) );

		---- para evitar duplicados	 
		/*update fin_compras set  nflgexisteanular  =  1 
		where cper=rwperproceso.cperproceso and concat(ccoddoc,cserie,cnumero,ccodruc)  
			in( select concat(ccoddoc,cserie,cnumero,ccodruc) from documentoexistentes 
				where concat(ccoddoc,cserie,cnumero,ccodruc) in(select concat(ccoddoc,cserie,cnumero,ccodruc) from fin_compras where cper=rwperproceso.cperproceso and  es_con_migracion=3 ) );
		*/
		
		update fin_compras 
		set nflgexisteanular  =  1 
		from (select a.ccoddoc, a.cserie, a.cnumero, a.ccodruc from documentoexistentes a
				inner join fin_compras b on a.ccoddoc = b.ccoddoc  and a.cserie = b.cserie and a.cnumero = b.cnumero and a.ccodruc = b.ccodruc and  es_con_migracion=3 
		) anu 
		where fin_compras.ccoddoc = anu.ccoddoc  and fin_compras.cserie = anu.cserie and fin_compras.cnumero = anu.cnumero and fin_compras.ccodruc = anu.ccodruc; 

		/*
		--- para evitar anulados
		update fin_compras set obserror=CONCAT(ltrim(obserror),'-','ya anulado') ,  resultado_migracion = 4 
		where cper=rwperproceso.cperproceso and concat(ccoddoc,cserie,cnumero,ccodruc)  in(
		 select concat(ccoddoc,cserie,cnumero,ccodruc) from cf_diariol 
			where cper=rwperproceso.cperproceso and ccodruc IN(select ccodruc from cg_entitrib where nutianu=1) and concat(ccoddoc,cserie,cnumero,ccodruc) 
		  in(select concat(ccoddoc,cserie,cnumero,ccodruc) from fin_compras where cper=rwperproceso.cperproceso and  es_con_migracion in(0,4) ));
		  */


	

		
		
		
		for rw in select distinct cper, cmes, ccodori, ccodori_p, ccodsu, ccodsu_p,ccodflu,flgctares,flgctaimp ,flgctaact,flggencomp  
						FROM fin_compras  where cper =  rwperproceso.cperproceso and  trim(coalesce(obserror,'')) = ''  loop -- esten OK 

						
			varlreg = rw.ccodsu; --ccodsu,
			varlregcont = rw.ccodsu_p; --ccoddu_p,
			varccodflu  = rw.ccodflu;
			varpresua  = rw.flgctares;
			varpresui  = rw.flgctaimp;
			varpresur  = rw.flgctaact;
			varsolocompra = rw.flggencomp;

			VCMAXASIENTO = 'SELECT NORIMES' || cast(rw.cmes as integer)::char(2) || ' AS NORIGEN FROM CF_ORIGENL WHERE CPER = ''' || rw.cper || ''' AND CCODORI = ''' || rw.ccodori ||'''' ;
			for rw2 in EXECUTE VCMAXASIENTO	loop
				varmax  = coalesce(RW2.NORIGEN,0); ---+ 1; -- RW2.NORIGEN + 1;
			end loop;

			VCMAXASIENTO_p = 'SELECT NORIMES' || cast(rw.cmes as integer)::char(2) || ' AS NORIGEN FROM CF_ORIGENL WHERE CPER = ''' || rw.cper || ''' AND CCODORI = ''' || rw.ccodori_p ||'''' ;
			for rw2 in EXECUTE VCMAXASIENTO_p loop
				varmaxcob  = coalesce(RW2.NORIGEN,0);---- + 1; -- RW2.NORIGEN + 1;
			end loop;

			
			
			-- Truncar tabla Cada vez carga data por cada subdiario 		
			truncate table cf_regcom_integra; 

			insert into cf_regcom_integra (idcompras,cper, cmes, ccodori, ccodsu, ccodori_p, ccodsu_p, ccodcue_ps, 
			       ccodcue_pd, ccodflu, flgctares, flgctaimp, flgctaact, flggencomp, 
			       ccodtipent, nasiento, ffechadoc, ffechaven, ccoddoc, ccoddas, 
			       cyeardas, cserie, cnumero, 
				   ccodenti, cdesenti, 
				   ctipdoc, ccodruc, 
			       crazsoc, ccodclas, nbase1, nigv1, nbase2, nigv2, nbase3, nigv3, 
			       nina, nisc, nexo, ntots, cdocnodom, cnumdere, ffecre, ntc, freffec, 
			       crefdoc, crefser, crefnum, cmreg, ndolar, ffechaven2, ccond, 
			       cctabase, cctaotrib, cctatot, ccodcos, ccodcos2, nresp, nporre, 
			       nimpres, cserre, cnumre, ffecre2, ccodpresu, nigv, cglosa, nperdenre, 
			       nbaseres, incomp, 
			       flaganalb, flaganalo, flaganalt, 
			       flagccosb, flagccoso, flagccost, 
			       flagpresub, flagpresuo, flagpresut, 
			       nicbper, cctaicbper, cigvxacre,cctacobra)   ---79 campos

			SELECT a.idcompras,a.cper, a.cmes, ccodori, ccodsu, ccodori_p, ccodsu_p, ccodcue_ps, 
			       ccodcue_pd, ccodflu, flgctares, flgctaimp, flgctaact, flggencomp, 
			       ccodtipent, 0 as nasiento, 
			       ffechadoc, ffechadoc AS ffechaven, ccoddoc, ccoddas, 
			       cyeardas, cserie, cnumero, 
				   ccodenti, cdesenti, 
				   ctipdoc, ccodruc, 
			       crazsoc, ccodclas, nbase1, nigv1, nbase2, nigv2, nbase3, nigv3, 
			       nina, nisc, nexo, ntots, cdocnodom, cnumdere, ffecre, ntc, freffec, 
			       crefdoc, crefser, crefnum, cmreg, ndolar, ffechaven2,upper(ccond) as ccond, 
			       cctabase, cctaotrib, cctatot, ccodcos, ccodcos2, nresp, nporre, 
			       nimpres, cserre, cnumre, ffecre2, ccodpresu, nigv, cglosa, nperdenre, 
			       nbaseres, 1 as incomp,		       
			       b.NANACUE as flaganalb, 0 as flaganalo, d.NANACUE as flaganalt, 
			       b.NAFECOS as flagccosb, 0 as flagccoso, d.NAFECOS as flagccost, 
			       b.NAFEPRE  as flagpresub, 0  as flagpresuo, d.NAFEPRE  as flagpresut, 
			       nicbper, cctaicbper, cigvxacre, 
			       case when cmreg = 'S' then ccodcue_ps else  ccodcue_pd end as cctacobra
			  FROM fin_compras a 
			  inner join cf_plan b on b.cper = a.cper and a.cctabase = b.ccodcue    --ctabase
			  left join cf_plan c on c.cper = a.cper and a.cctaotrib = c.ccodcue    --ctaotrib
			  inner join cf_plan d on d.cper = a.cper and a.cctatot = d.ccodcue     --ctatotal
			  where a.cper=rw.cper and a.ccodori = rw.ccodori and  
			  trim(coalesce(a.obserror,'')) = ''
				and es_con_migracion in(0,3) 
				and nflgexisteanular = 0 
			  order by a.ccoddoc,a.cserie,a.cnumero,a.ccodruc asc; 		   


			-- generar asiento 
			vnumasiento=0;
			vccoddoc='';
			vcserie='';
			vcnumero ='';
			vctipdoc ='';
			vccodruc ='';
			vxcctatot ='';

			for rwnumerado in Select distinct ccoddoc,cserie,cnumero,ctipdoc,  ccodruc,cctatot from cf_regcom_integra 
				group by ccoddoc,cserie,cnumero,ctipdoc,  ccodruc,cctatot  
				order by ccoddoc,cserie,cnumero,ccodruc loop
				
				if rwnumerado.ccoddoc = vccoddoc  AND rwnumerado.cserie  = vcserie AND rwnumerado.cnumero = vcnumero AND 
					rwnumerado.ctipdoc = vctipdoc  AND rwnumerado.ccodruc = vccodruc AND rwnumerado.cctatot = vxcctatot THEN 			

					vnumasiento=vnumasiento;
				ELSE
					vnumasiento=vnumasiento +1;

					vccoddoc=rwnumerado.ccoddoc;
					vcserie=rwnumerado.cserie;
					vcnumero =rwnumerado.cnumero;
					vctipdoc =rwnumerado.ctipdoc;
					vccodruc =rwnumerado.ccodruc;
					vxcctatot =rwnumerado.cctatot;
					
					update cf_regcom_integra set nasiento=vnumasiento where ccoddoc=vccoddoc and 
					       cserie=vcserie and cnumero=vcnumero and ctipdoc=vctipdoc and ccodruc=vccodruc and
					       cctatot=vxcctatot;
					
				END IF ;

			end loop;
			nreturn = ( select  * from fin_registro_compras_integracion_estandar( rw.cper,
												    rw.cmes,
												    rw.ccodori,
												    varccodflu,
												    varpresua,
												    varpresui,
												    varpresur,
												    varsolocompra,
												    varmax, -- nro Asiento Ultimo 
												    varigv,
												    varigv2,
												    varigv3,
												    varigvspot,
												    varlreg,
												    vardifp ,
												    vardifpd,
												    vardifph,
												    vardifg,								
												    varlregcont,
												    rw.ccodori_p,
												    varmaxcob,
												    varctaisc))   ; 

			end loop; 

			

			-- Actualiza registro procesado correctamente 
			update fin_compras set resultado_migracion = 1 where es_con_migracion = 0 and idcompras in (select idcompras from cf_regcom_integra); 
			
			-- Actualizar los anulados a 4 
			update fin_compras set resultado_migracion = 4 where es_con_migracion = 3 and trim(coalesce(obserror,'')) = '' ;  

			-- anular Los registros 
			--for rwanuladoc in select cper, ccoddoc, cserie, cnumero, ccodruc, ccodrucanula from fin_compras where es_con_migracion = 3 loop 
			DROP TABLE IF EXISTS documentosAnula;
			create temp table documentosAnula as 
			select a.cper, a.cmes, a.ccodori, a.nasiento, a.ncomp,a.ccoddoc, a.cserie, a.cnumero, a.ccodruc, b.ccodrucanula 
			from cf_diariol a
			inner join fin_compras b  on a.ccoddoc = b.ccoddoc  and a.cserie = b.cserie and a.cnumero = b.cnumero and a.ccodruc = b.ccodruc 
							and trim(coalesce(obserror,'')) = ''
							and es_con_migracion = 3 
			where a.cper = rwperproceso.cperproceso ; --and a.ncomp = 1; 
				
			
			for rwanuladoc in select cper, cmes, ccodori, nasiento, ncomp,ccoddoc, cserie, cnumero, ccodruc, ccodrucanula from documentosAnula  loop 
				
			---	update cf_diariol
			---	set ccodruc = rwanuladoc.ccodrucanula,
			---	       ndebe=0.00, nhaber=0.00, ndebes=0.00, nhabers=0.00, ndebed=0.00, 
			---	       nhaberd=0.00, nbase1=0.00, nigv1=0.00, nbase2=0.00, nigv2=0.00, 
			---	       nbase3=0.00, nigv3=0.00, nina=0.00, nexo=0.00, nisc=0.00, nivabase=0.00, nivaimp=0.00, 
			---	       ntot=0.00, nbase1s=0.00, nigv1s=0.00, nbase2s=0.00, nigv2s=0.00, nbase3s=0.00, 
			---	       nigv3s=0.00, ninas=0.00, nexos=0.00, niscs=0.00, nivabases=0.00, nivaimps=0.00, 
			---	       ntots=0.00, nbase1d=0.00, nigv1d=0.00, nbase2d=0.00, nigv2d=0.00, nbase3d=0.00, 
			---	       nigv3d=0.00, ninad=0.00, nexod=0.00, niscd=0.00, nivabased=0.00, nivaimpd=0.00, 
			---	       ntotd=0.00
				DELETE FROM cf_diariol
				where cper = rwanuladoc.cper and cmes = rwanuladoc.cmes and  ccodori = rwanuladoc.ccodori and nasiento = rwanuladoc.nasiento  ; 

				
			end loop; 

			--raise exception 'ccod sub %', rw.cper; 

			-- Actualiza subdiartio y Flujos 
			for rwctualizasubdiario  in select distinct cper,cmes  from cf_regcom_integra loop

				nreturn = (select * from func_regenerar_correlativo_subdiario(rwctualizasubdiario.cper, rwctualizasubdiario.cmes) as infograba1); 
				
				nreturn = (select * from func_regenerar_saldos_plan_flujo(rwctualizasubdiario.cper, rwctualizasubdiario.cmes) as infograba2); 
                
			end loop;
		
	end loop; -- Periodo 


END; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION public.fin_compras_integracion_principal()
    OWNER TO postgres;</value>
  </data>
  <data name="txtasientocompas2.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION fin_registro_compras_integracion_estandar(
    varper character,
    varmes character,
    varori character,
    varccodflu character,
    varpresua integer,
    varpresui integer,
    varpresur integer,
    varsolocompra integer,
    varmax integer,
    varigv character,
    varigv2 character,
    varigv3 character,
    varigvspot character,
    varlreg character,
    vardifp character,
    vardifpd character,
    vardifph character,
    vardifg character,
    varlregcont character,
    varoricob character,
    varmaxcob integer,
    varctaisc character)
  RETURNS integer AS
$BODY$
DECLARE  
	RW RECORD;
	OTYC numeric(13,2);
	CONTADOR  numeric(13,2);
	MAXASIENTO   NUMERIC(6,0);
	VPER CHARACTER(4);
	VMES CHARACTER(2);
	VCODORI CHARACTER(3);
	VASIENTO INTEGER;
	VIDLIN INTEGER;
	VNIDLIN INTEGER;
	VMAXIDLIN INTEGER;
	VCODCUE CHARACTER(20);
	VDES CHARACTER(1);
	VDESTINO CHARACTER(3);
	VCODCOS CHARACTER(9);
	NDESTINO INTEGER;

BEGIN

create  temporary table tmpregcv(
  cper character(4)  NOT NULL DEFAULT ''::bpchar,
  cmes character(2) NOT NULL DEFAULT ''::bpchar,
  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
  nasiento numeric(6,0) NOT NULL DEFAULT 0,
  nidlin numeric(6,0) NOT NULL DEFAULT 0,
  ntc numeric(10,6) NOT NULL DEFAULT 0,
  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
  ndebe numeric(15,2) NOT NULL DEFAULT 0,
  nhaber numeric(15,2) NOT NULL DEFAULT 0,
  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
  ndebes numeric(15,2) NOT NULL DEFAULT 0,
  nhabers numeric(15,2) NOT NULL DEFAULT 0,
  ndebed numeric(15,2) NOT NULL DEFAULT 0,
  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
  cdes character(1) NOT NULL DEFAULT ''::bpchar,
  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
  najusauto numeric(1,0) NOT NULL DEFAULT 0,
  cregis character(1) NOT NULL DEFAULT ''::bpchar,
  ncomp numeric(1,0) NOT NULL DEFAULT 0,
  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
  cserie character(20) NOT NULL DEFAULT ''::bpchar,
  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
  ffechadoc date,
  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
  ffechaven date,
  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
  nina numeric(15,2) NOT NULL DEFAULT 0,
  nexo numeric(15,2) NOT NULL DEFAULT 0,
  nisc numeric(15,2) NOT NULL DEFAULT 0,
  nivabase numeric(15,2) NOT NULL DEFAULT 0,
  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
  ntot numeric(15,2) NOT NULL DEFAULT 0,
  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
  ninas numeric(15,2) NOT NULL DEFAULT 0,
  nexos numeric(15,2) NOT NULL DEFAULT 0,
  niscs numeric(15,2) NOT NULL DEFAULT 0,
  nivabases numeric(15,2) NOT NULL DEFAULT 0,
  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
  ntots numeric(15,2) NOT NULL DEFAULT 0,
  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
  ninad numeric(15,2) NOT NULL DEFAULT 0,
  nexod numeric(15,2) NOT NULL DEFAULT 0,
  niscd numeric(15,2) NOT NULL DEFAULT 0,
  nivabased numeric(15,2) NOT NULL DEFAULT 0,
  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
  ntotd numeric(15,2) NOT NULL DEFAULT 0,
  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
  ffechadif date,
  nresp numeric(1,0) NOT NULL DEFAULT 0,
  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
  nporre numeric(5,2) NOT NULL DEFAULT 0,
  ffecre date,
  cserre character(6) NOT NULL DEFAULT ''::bpchar,
  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
  ntcre numeric(10,6) NOT NULL DEFAULT 0,
  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
  nbasered numeric(15,2) NOT NULL DEFAULT 0,
  nimpres numeric(15,2) NOT NULL DEFAULT 0,
  nimpred numeric(15,2) NOT NULL DEFAULT 0,
  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
  freffec date,
  crefser character(10) NOT NULL DEFAULT ''::bpchar,
  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
  ffembdas date,
  ffregdas date,
  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
  nautamo numeric(1,0) NOT NULL DEFAULT 0,
  ffec_dc date,
  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
  nintext numeric(1,0) NOT NULL DEFAULT 0,
  cmoneda character(1) NOT NULL DEFAULT ''::bpchar,    ------SE AGREGO
  ccodsu character(2) NOT NULL DEFAULT ''::bpchar,      ------SE AGREGO
  ffecasi date,
  newidlin numeric(6,0) NOT NULL DEFAULT 0,
  nicbper numeric(15,2) NOT NULL DEFAULT 0,
  nicbpers numeric(15,2) NOT NULL DEFAULT 0,
  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
  nigv numeric(5,2) NOT NULL DEFAULT 0
  )   on commit drop	;

  -- KMM - 
  

create temporary table tmpregcv2(
  cper character(4)  NOT NULL DEFAULT ''::bpchar,
  cmes character(2) NOT NULL DEFAULT ''::bpchar,
  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
  nasiento numeric(6,0) NOT NULL DEFAULT 0,
  nidlin numeric(6,0) NOT NULL DEFAULT 0,
  ntc numeric(10,6) NOT NULL DEFAULT 0,
  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
  ndebe numeric(15,2) NOT NULL DEFAULT 0,
  nhaber numeric(15,2) NOT NULL DEFAULT 0,
  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
  ndebes numeric(15,2) NOT NULL DEFAULT 0,
  nhabers numeric(15,2) NOT NULL DEFAULT 0,
  ndebed numeric(15,2) NOT NULL DEFAULT 0,
  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
  cdes character(1) NOT NULL DEFAULT ''::bpchar,
  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
  najusauto numeric(1,0) NOT NULL DEFAULT 0,
  cregis character(1) NOT NULL DEFAULT ''::bpchar,
  ncomp numeric(1,0) NOT NULL DEFAULT 0,
  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
  cserie character(20) NOT NULL DEFAULT ''::bpchar,
  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
  ffechadoc date,
  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
  ffechaven date,
  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
  nina numeric(15,2) NOT NULL DEFAULT 0,
  nexo numeric(15,2) NOT NULL DEFAULT 0,
  nisc numeric(15,2) NOT NULL DEFAULT 0,
  nivabase numeric(15,2) NOT NULL DEFAULT 0,
  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
  ntot numeric(15,2) NOT NULL DEFAULT 0,
  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
  ninas numeric(15,2) NOT NULL DEFAULT 0,
  nexos numeric(15,2) NOT NULL DEFAULT 0,
  niscs numeric(15,2) NOT NULL DEFAULT 0,
  nivabases numeric(15,2) NOT NULL DEFAULT 0,
  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
  ntots numeric(15,2) NOT NULL DEFAULT 0,
  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
  ninad numeric(15,2) NOT NULL DEFAULT 0,
  nexod numeric(15,2) NOT NULL DEFAULT 0,
  niscd numeric(15,2) NOT NULL DEFAULT 0,
  nivabased numeric(15,2) NOT NULL DEFAULT 0,
  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
  ntotd numeric(15,2) NOT NULL DEFAULT 0,
  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
  ffechadif date,
  nresp numeric(1,0) NOT NULL DEFAULT 0,
  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
  nporre numeric(5,2) NOT NULL DEFAULT 0,
  ffecre date,
  cserre character(6) NOT NULL DEFAULT ''::bpchar,
  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
  ntcre numeric(10,6) NOT NULL DEFAULT 0,
  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
  nbasered numeric(15,2) NOT NULL DEFAULT 0,
  nimpres numeric(15,2) NOT NULL DEFAULT 0,
  nimpred numeric(15,2) NOT NULL DEFAULT 0,
  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
  freffec date,
  crefser character(10) NOT NULL DEFAULT ''::bpchar,
  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
  ffembdas date,
  ffregdas date,
  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
  nautamo numeric(1,0) NOT NULL DEFAULT 0,
  ffec_dc date,
  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
  nintext numeric(1,0) NOT NULL DEFAULT 0,
  cmoneda character(1) NOT NULL DEFAULT ''::bpchar,
  ccodsu character(2) NOT NULL DEFAULT ''::bpchar,
  ffecasi date,
  newidlin numeric(6,0) NOT NULL DEFAULT 0,
  nicbper numeric(15,2) NOT NULL DEFAULT 0,
  nicbpers numeric(15,2) NOT NULL DEFAULT 0,
  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
  nigv numeric(5,2) NOT NULL DEFAULT 0
  ) on commit drop  ;


create temporary table tmpregcv3(
  cper character(4)  NOT NULL DEFAULT ''::bpchar,
  cmes character(2) NOT NULL DEFAULT ''::bpchar,
  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
  nasiento numeric(6,0) NOT NULL DEFAULT 0,
  nidlin numeric(6,0) NOT NULL DEFAULT 0,
  ntc numeric(10,6) NOT NULL DEFAULT 0,
  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
  ndebe numeric(15,2) NOT NULL DEFAULT 0,
  nhaber numeric(15,2) NOT NULL DEFAULT 0,
  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
  ndebes numeric(15,2) NOT NULL DEFAULT 0,
  nhabers numeric(15,2) NOT NULL DEFAULT 0,
  ndebed numeric(15,2) NOT NULL DEFAULT 0,
  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
  cdes character(1) NOT NULL DEFAULT ''::bpchar,
  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
  najusauto numeric(1,0) NOT NULL DEFAULT 0,
  cregis character(1) NOT NULL DEFAULT ''::bpchar,
  ncomp numeric(1,0) NOT NULL DEFAULT 0,
  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
  cserie character(20) NOT NULL DEFAULT ''::bpchar,
  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
  ffechadoc date,
  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
  ffechaven date,
  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
  nina numeric(15,2) NOT NULL DEFAULT 0,
  nexo numeric(15,2) NOT NULL DEFAULT 0,
  nisc numeric(15,2) NOT NULL DEFAULT 0,
  nivabase numeric(15,2) NOT NULL DEFAULT 0,
  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
  ntot numeric(15,2) NOT NULL DEFAULT 0,
  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
  ninas numeric(15,2) NOT NULL DEFAULT 0,
  nexos numeric(15,2) NOT NULL DEFAULT 0,
  niscs numeric(15,2) NOT NULL DEFAULT 0,
  nivabases numeric(15,2) NOT NULL DEFAULT 0,
  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
  ntots numeric(15,2) NOT NULL DEFAULT 0,
  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
  ninad numeric(15,2) NOT NULL DEFAULT 0,
  nexod numeric(15,2) NOT NULL DEFAULT 0,
  niscd numeric(15,2) NOT NULL DEFAULT 0,
  nivabased numeric(15,2) NOT NULL DEFAULT 0,
  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
  ntotd numeric(15,2) NOT NULL DEFAULT 0,
  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
  ffechadif date,
  nresp numeric(1,0) NOT NULL DEFAULT 0,
  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
  nporre numeric(5,2) NOT NULL DEFAULT 0,
  ffecre date,
  cserre character(6) NOT NULL DEFAULT ''::bpchar,
  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
  ntcre numeric(10,6) NOT NULL DEFAULT 0,
  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
  nbasered numeric(15,2) NOT NULL DEFAULT 0,
  nimpres numeric(15,2) NOT NULL DEFAULT 0,
  nimpred numeric(15,2) NOT NULL DEFAULT 0,
  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
  freffec date,
  crefser character(10) NOT NULL DEFAULT ''::bpchar,
  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
  ffembdas date,
  ffregdas date,
  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
  nautamo numeric(1,0) NOT NULL DEFAULT 0,
  ffec_dc date,
  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
  nintext numeric(1,0) NOT NULL DEFAULT 0,
  cmoneda character(1) NOT NULL DEFAULT ''::bpchar,
  ccodsu character(2) NOT NULL DEFAULT ''::bpchar,
  ffecasi date,
  newidlin numeric(6,0) NOT NULL DEFAULT 0,
  nicbper numeric(15,2) NOT NULL DEFAULT 0,
  nicbpers numeric(15,2) NOT NULL DEFAULT 0,
  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
  nigv numeric(5,2) NOT NULL DEFAULT 0
  ) on commit drop;

-- KMM - 09-05- 20023 - cpe-3675 
  create temporary table tmpregcv33(
  cper character(4)  NOT NULL DEFAULT ''::bpchar,
  cmes character(2) NOT NULL DEFAULT ''::bpchar,
  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
  nasiento numeric(6,0) NOT NULL DEFAULT 0,
  nidlin numeric(6,0) NOT NULL DEFAULT 0,
  ntc numeric(10,6) NOT NULL DEFAULT 0,
  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
  ndebe numeric(15,2) NOT NULL DEFAULT 0,
  nhaber numeric(15,2) NOT NULL DEFAULT 0,
  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
  ndebes numeric(15,2) NOT NULL DEFAULT 0,
  nhabers numeric(15,2) NOT NULL DEFAULT 0,
  ndebed numeric(15,2) NOT NULL DEFAULT 0,
  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
  cdes character(1) NOT NULL DEFAULT ''::bpchar,
  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
  najusauto numeric(1,0) NOT NULL DEFAULT 0,
  cregis character(1) NOT NULL DEFAULT ''::bpchar,
  ncomp numeric(1,0) NOT NULL DEFAULT 0,
  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
  cserie character(20) NOT NULL DEFAULT ''::bpchar,
  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
  ffechadoc date,
  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
  ffechaven date,
  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
  nina numeric(15,2) NOT NULL DEFAULT 0,
  nexo numeric(15,2) NOT NULL DEFAULT 0,
  nisc numeric(15,2) NOT NULL DEFAULT 0,
  nivabase numeric(15,2) NOT NULL DEFAULT 0,
  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
  ntot numeric(15,2) NOT NULL DEFAULT 0,
  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
  ninas numeric(15,2) NOT NULL DEFAULT 0,
  nexos numeric(15,2) NOT NULL DEFAULT 0,
  niscs numeric(15,2) NOT NULL DEFAULT 0,
  nivabases numeric(15,2) NOT NULL DEFAULT 0,
  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
  ntots numeric(15,2) NOT NULL DEFAULT 0,
  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
  ninad numeric(15,2) NOT NULL DEFAULT 0,
  nexod numeric(15,2) NOT NULL DEFAULT 0,
  niscd numeric(15,2) NOT NULL DEFAULT 0,
  nivabased numeric(15,2) NOT NULL DEFAULT 0,
  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
  ntotd numeric(15,2) NOT NULL DEFAULT 0,
  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
  ffechadif date,
  nresp numeric(1,0) NOT NULL DEFAULT 0,
  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
  nporre numeric(5,2) NOT NULL DEFAULT 0,
  ffecre date,
  cserre character(6) NOT NULL DEFAULT ''::bpchar,
  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
  ntcre numeric(10,6) NOT NULL DEFAULT 0,
  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
  nbasered numeric(15,2) NOT NULL DEFAULT 0,
  nimpres numeric(15,2) NOT NULL DEFAULT 0,
  nimpred numeric(15,2) NOT NULL DEFAULT 0,
  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
  freffec date,
  crefser character(10) NOT NULL DEFAULT ''::bpchar,
  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
  ffembdas date,
  ffregdas date,
  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
  nautamo numeric(1,0) NOT NULL DEFAULT 0,
  ffec_dc date,
  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
  nintext numeric(1,0) NOT NULL DEFAULT 0,
  cmoneda character(1) NOT NULL DEFAULT ''::bpchar,
  ccodsu character(2) NOT NULL DEFAULT ''::bpchar,
  ffecasi date,
  newidlin numeric(6,0) NOT NULL DEFAULT 0,
  nicbper numeric(15,2) NOT NULL DEFAULT 0,
  nicbpers numeric(15,2) NOT NULL DEFAULT 0,
  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
  nigv numeric(5,2) NOT NULL DEFAULT 0
  ) on commit drop;
-- KMM - 09-05- 20023 - cpe-3675 


-- ************************************
-- ORDEN NIDLIN 1
-- ************************************
insert into  TMPREGCV (
--UNION
SELECT 
VARPER AS CPER, 
VARMES AS CMES, 
VARORI AS CCODORI, 
NASIENTO + varmax  AS NASIENTO, 
1 AS nidlin,  
NTC, 
CCTABASE AS CCODCUE,
(CASE WHEN NBASE1+NBASE2+NBASE3+nina&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE1+NBASE2+NBASE3+nina) ELSE ABS(ROUND((NBASE1+NBASE2+NBASE3+nina)/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN NBASE1+NBASE2+NBASE3+nina&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE1+NBASE2+NBASE3+nina) ELSE ABS(ROUND((NBASE1+NBASE2+NBASE3+nina)/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
CGLOSA, 
(CASE WHEN (NBASE1+NBASE2+NBASE3+nina)&gt;=0 THEN ABS(NBASE1+NBASE2+NBASE3+nina) ELSE 0.00 END)::numeric(13,2) as NDEBES,
(CASE WHEN (NBASE1+NBASE2+NBASE3+nina)&lt; 0 THEN ABS(NBASE1+NBASE2+NBASE3+nina) ELSE 0.00 END)::numeric(13,2) as NHABERS,
(CASE WHEN (NBASE1+NBASE2+NBASE3+nina)&gt;=0 THEN ABS(ROUND((NBASE1+NBASE2+NBASE3+nina)/NTC,2)) ELSE 0.00 END)::numeric(13,2) as NDEBED,
(CASE WHEN (NBASE1+NBASE2+NBASE3+nina)&lt; 0 THEN ABS(ROUND((NBASE1+NBASE2+NBASE3+nina)/NTC,2)) ELSE 0.00 END)::numeric(13,2) as NHABERD,
(' ')::VARCHAR(1) AS CDES,
(' ')::VARCHAR(3) AS CDESTINO,
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO,
(' ')::VARCHAR(1) AS CREGIS, 
(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
CCODDOC, 
CSERIE, 
CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN,
FFECHADOC, 	 
CCODRUC, 
CCODENTI, 
FFECHAVEN, 
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD, 
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD, 
(CASE WHEN FLAGANALB=3 OR FLAGANALB = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
(CASE WHEN FLAGANALB=3 OR FLAGANALB = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
(CASE WHEN VARSOLOCOMPRA=1 THEN ''  ELSE (CASE WHEN FLAGANALB   =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' 'END) END)::VARCHAR(2) AS CMESC,
(CASE WHEN FLAGANALB = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
(' ')::VARCHAR(4) AS CCODOCON, 
(0.00)::NUMERIC(1,0) AS NDIFERIDO,
CAST(NULL AS DATE) AS FFECHADIF, 
(0.00)::NUMERIC(1,0) AS NRESP, 
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds, 
(' ')::VARCHAR(1) AS CREGISRE,
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre, 
CAST(NULL AS DATE) AS FFECRE, 
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE,
(0.00)::NUMERIC(10,6) AS ntcre, 
(0.00)::NUMERIC(15,2) AS nbaseres, 
(0.00)::NUMERIC(15,2) AS nbasered, 
(0.00)::NUMERIC(15,2) AS nimpres, 
(0.00)::NUMERIC(15,2) AS nimpred, 
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
crefdoc, 
freffec, 
crefser, 
crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta,
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc, 
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(5) AS ccodisc, 
00.00 AS nporisc, 
CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd,
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
cmreg as CMONEDA,
VARLREG as ccodsu,
ffechadoc as ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd,
(0.00)::NUMERIC(5,2) AS nigv 
FROM
  (select  Y.nasiento,RC.ntc,RC.cctabase,RC.cctatot,RC.ntots,RC.nigv1,RC.nbase1,RC.nbase2,RC.nigv2,RC.nbase3,RC.nigv3,RC.nina,RC.nexo,RC.nisc,
RC.cmreg,RC.ndolar,rc.cglosa,rc.flaganalt,rc.flaganalb,rc.flaganalo,rc.FLAGCCOSB,flagccoso,rc.FLAGPRESUB,RC.ccoddoc,RC.cserie,RC.cnumero,RC.ffechadoc,RC.ccodruc,
RC.ccodenti,RC.ffechaven,RC.flagccost,RC.ccodcos,RC.ccodcos2,RC.flagpresut,RC.ccodpresu,RC.ccond,RC.nimpres,RC.crefdoc,RC.freffec,RC.crefser,RC.crefnum,RC.ccodclas
from cf_regcom_integra  RC
   inner join
(select  nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc,cctatot,
sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
from cf_regcom_integra 
group by nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc, cctatot) as Y
ON RC.ccoddoc=Y.ccoddoc AND RC.cserie=Y.cserie AND RC.cnumero=Y.cnumero AND RC.ctipdoc=Y.ctipdoc AND RC.ccodruc=Y.ccodruc AND RC.cctatot=Y.cctatot ) AS Z
);

-- ************************************
-- ORDEN NIDLIN 6
-- ************************************
insert into  TMPREGCV (
SELECT  
VARPER AS CPER, 
VARMES AS CMES, 
VARORI AS CCODORI, 
NASIENTO + varmax AS NASIENTO, 
6 AS nidlin , 
NTC, 
CCTATOT AS CCODCUE, 
(CASE WHEN NTOTS&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN NTOTS&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
 CGLOSA,
(CASE WHEN NTOTS&lt; 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBES,
(CASE WHEN NTOTS&gt;=0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
(CASE WHEN NTOTS&lt; 0 THEN ABS(ROUND(NTOTS/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
(CASE WHEN NTOTS&gt;=0 THEN ABS(ROUND(NTOTS/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
(' ')::VARCHAR(1) AS CDES,
('   ')::VARCHAR(3) AS CDESTINO,
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO, 
(' ')::VARCHAR(1) AS CREGIS,
(CASE WHEN FLAGANALT = 2 THEN 1 ELSE 0 END) AS NCOMP ,
CCODDOC, 
CSERIE,
CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN,
FFECHADOC, 			 
CCODRUC, 
CCODENTI, 
FFECHAVEN,
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD,
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD,
(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS  ELSE '         ' END)::VARCHAR(9) AS CCODCOS	,
(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS2 ELSE '         ' END)::VARCHAR(9) AS CCODCOS2,
(CASE WHEN VARPRESUA=1 THEN (CASE WHEN FLAGPRESUT&gt;1 THEN CCODPRESU ELSE '          ' END)  ELSE  '          '  END)::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
(CASE WHEN VARSOLOCOMPRA=1 THEN ' ' ELSE (CASE WHEN FLAGANALT=2 THEN (CASE WHEN CCOND='CON' THEN VARMES ELSE ' ' END) ELSE  ' ' END)  END)::VARCHAR(2)  AS CMESC,
(CASE WHEN FLAGANALT=2 THEN cmreg ELSE '' END)::VARCHAR(1) AS CMREG,  
(' ')::VARCHAR(4) AS CCODOCON,
(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
CAST(NULL AS DATE) AS FFECHADIF,
NRESP,
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds,
('C')::VARCHAR(1) AS CREGISRE, 
--nperdenre, --(0.00)::NUMERIC(1,0) AS nperdenre,  YYYYYY modificación 
case when nperdenre = 2  then 0 else nperdenre end, -- KMM - 08-05-2023 - cpe-3675
nporre, 
(CASE WHEN nresp = 2 
THEN (CASE WHEN NPERDENRE = 1 THEN FFECHADOC ELSE FFECRE END)
ELSE FFECRE END) FFECRE, 
(CASE WHEN NRESP = 2
THEN (CASE WHEN NPERDENRE = 1 THEN RIGHT(CSERIE,6) ELSE CSERRE END)
ELSE CSERRE END)  AS CSERRE, 
(CASE WHEN NRESP = 2
THEN (CASE WHEN NPERDENRE = 1 THEN RIGHT(CNUMERO,13) ELSE CNUMRE END)
ELSE CNUMRE END ) AS CNUMRE, 
CNUMDERE,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntc ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(10,6) AS NTCRE,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN nbaseres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS NBASERES,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ROUND(nbaseres/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nbasered,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN nimpres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpres,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpred,
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
crefdoc, 
freffec,
crefser, 
crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta, 
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta, 
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc, 
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(20) AS ccodisc,
00.00 AS nporisc,  		
CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd, 
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
('1')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
cmreg as CMONEDA,
VARLREG as ccodsu,
ffechadoc as ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd,
(0.00)::NUMERIC(5,2) AS nigv 
FROM 
  (select  distinct on (rc.ccoddoc,rc.cserie,rc.cnumero,rc.ctipdoc,rc.ccodruc,rc.cctatot) 
Y.nasiento,RC.ntc,Y.cctatot,Y.ntots,RC.cmreg,Y.ndolar,rc.cglosa,rc.flaganalt,Y.ccoddoc,Y.cserie,Y.cnumero,RC.ffechadoc,Y.ccodruc,
RC.ccodenti,RC.ffechaven,RC.flagccost,RC.ccodcos,RC.ccodcos2,RC.flagpresut,RC.ccodpresu,RC.ccond,RC.nimpres,RC.crefdoc,RC.freffec,RC.crefser,RC.crefnum,RC.ccodclas,
rc.cnumdere,rc.ffecre,rc.nresp,rc.nporre,rc.nbaseres, rc.nperdenre, rc.cserre, rc.cnumre
from cf_regcom_integra RC
inner join
  (select  nasiento, ccoddoc,cserie,cnumero,ctipdoc,ccodruc,cctatot,
sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
from cf_regcom_integra 
group by nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc, cctatot) as Y
ON RC.ccoddoc=Y.ccoddoc AND RC.cserie=Y.cserie AND RC.cnumero=Y.cnumero AND RC.ctipdoc=Y.ctipdoc AND RC.ccodruc=Y.ccodruc AND RC.cctatot=Y.cctatot) as Z
);
-- ************************************
-- TERMINO ORDEN NIDLIN 6
-- ************************************

insert into  TMPREGCV (

-- UNION all

SELECT  
VARPER AS CPER,  
VARMES AS CMES,  
VARORI AS CCODORI,  
NASIENTO + varmax  AS NASIENTO ,  
3 AS nidlin ,  
NTC,  
(CASE WHEN CIGVXACRE = 'S' THEN VARIGVSPOT ELSE VARIGV END) AS CCODCUE,
(CASE WHEN CIGVXACRE = 'S' THEN
   (CASE WHEN NIGV1+NIGV2+NIGV3&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV1+NIGV2+NIGV3) ELSE ABS(ROUND((NIGV1+NIGV2+NIGV3)/NTC,2)) END) ELSE 0.00 END)
ELSE 
   (CASE WHEN NIGV1&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV1) ELSE ABS(ROUND(NIGV1/NTC,2)) END) ELSE 0.00 END)
END) ::numeric(15,2) AS NDEBE,
(CASE WHEN CIGVXACRE = 'S' THEN
   (CASE WHEN NIGV1+NIGV2+NIGV3&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV1+NIGV2+NIGV3) ELSE ABS(ROUND((NIGV1+NIGV2+NIGV3)/NTC,2)) END) ELSE 0.00 END)
ELSE 
   (CASE WHEN NIGV1&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV1) ELSE ABS(ROUND(NIGV1/NTC,2)) END) ELSE 0.00 END)
END) ::numeric(15,2) AS NHABER,
CGLOSA,
(CASE WHEN CIGVXACRE = 'S' THEN
   (CASE WHEN NIGV1+NIGV2+NIGV3&gt;=0 THEN ABS(NIGV1+NIGV2+NIGV3)  ELSE 0.00 END)
ELSE 
   (CASE WHEN NIGV1&gt;=0 THEN ABS(NIGV1)  ELSE 0.00 END)
END )::numeric(13,2) AS NDEBES,
(CASE WHEN CIGVXACRE = 'S' THEN
   (CASE WHEN NIGV1+NIGV2+NIGV3&lt; 0 THEN ABS(NIGV1+NIGV2+NIGV3)  ELSE 0.00 END)
ELSE
   (CASE WHEN NIGV1&lt; 0 THEN ABS(NIGV1)  ELSE 0.00 END)
END) ::numeric(13,2) AS NHABERS,
(CASE WHEN CIGVXACRE = 'S' THEN
   (CASE WHEN NIGV1+NIGV2+NIGV3&gt;=0 THEN ABS(ROUND((NIGV1+NIGV2+NIGV3)/NTC,2)) ELSE 0.00 END)
ELSE 
   (CASE WHEN NIGV1&gt;=0 THEN ABS(ROUND(NIGV1/NTC,2)) ELSE 0.00 END)
END) ::numeric(15,2) AS NDEBED,
(CASE WHEN CIGVXACRE = 'S' THEN
   (CASE WHEN NIGV1+NIGV2+NIGV3&lt; 0 THEN ABS(ROUND((NIGV1+NIGV2+NIGV3)/NTC,2)) ELSE 0.00 END)
ELSE
   (CASE WHEN NIGV1&lt; 0 THEN ABS(ROUND(NIGV1/NTC,2)) ELSE 0.00 END)
END) ::numeric(15,2) AS NHABERD,
(' ')::VARCHAR(1) AS CDES,  
('   ')::VARCHAR(3) AS CDESTINO, 
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO, 
('C')::VARCHAR(1) AS CREGIS,		
(0)::NUMERIC(1,0) AS NCOMP ,  
CCODDOC,  
CSERIE,  
CNUMERO,  
(' ')::VARCHAR(20) AS CNUMFIN,  
FFECHADOC,  			 
CCODRUC,  
CCODENTI,  
FFECHAVEN,
(CASE WHEN CMREG = 'S' THEN ABS(NBASE1) 	ELSE ABS(ROUND(NBASE1/NTC,2)) END)::numeric(13,2) AS NBASE1,
(CASE WHEN CMREG = 'S' THEN ABS(NIGV1)  	ELSE ABS(ROUND(NIGV1 /NTC,2))   END)::numeric(13,2) AS NIGV1,  
(CASE WHEN CMREG = 'S' THEN ABS(NBASE2) 	ELSE ABS(ROUND(NBASE2/NTC,2)) END)::numeric(13,2) AS NBASE2,  
(CASE WHEN CMREG = 'S' THEN ABS(NIGV2)  	ELSE ABS(ROUND(NIGV2 /NTC,2))   END)::numeric(13,2) AS NIGV2,  
(CASE WHEN CMREG = 'S' THEN ABS(NBASE3) 	ELSE ABS(ROUND(NBASE3/NTC,2)) END)::numeric(13,2) AS NBASE3,  
(CASE WHEN CMREG = 'S' THEN ABS(NIGV3)  	ELSE ABS(ROUND(NIGV3 /NTC,2))   END)::numeric(13,2) AS NIGV3,  
(CASE WHEN CMREG = 'S' THEN ABS(NINA)   		ELSE ABS(ROUND(NINA/NTC,2))      END)::numeric(13,2) AS NINA,  
(CASE WHEN CMREG = 'S' THEN ABS(NEXO)   	ELSE ROUND(NEXO/NTC,2)             END)::numeric(13,2) AS NEXO,  
(CASE WHEN CMREG = 'S' THEN ABS(NISC)  		ELSE ABS(ROUND(NISC/NTC,2))      END)::numeric(13,2) AS NISC,  
(0.00)::NUMERIC(13,2) AS NIVABASE,  
(0.00)::NUMERIC(13,2) AS NIVAIMP,  
(CASE WHEN CMREG = 'S' THEN ABS(NTOTS)   	ELSE ABS(ROUND(NTOTS/NTC,2))    END)::numeric(13,2) AS NTOT,  
ABS(NBASE1) as NBASE1S,
ABS(NIGV1) AS NIGV1S,
ABS(NBASE2) AS NBASE2S,
ABS(NIGV2) AS NIGV2S,
ABS(NBASE3) AS NBASE3S,
ABS(NIGV3) AS NIGV3S,
ABS(NINA) AS NINAS,
NEXO AS NEXOS,
ABS(NISC) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES,  
(0.00)::NUMERIC(13,2) AS NIVAIMPS,  
ABS(NTOTS) AS NTOTS,
ABS(ROUND(NBASE1/NTC,2)) AS NBASE1D,
ABS(ROUND(NIGV1/NTC,2))  AS NIGV1D,
ABS(ROUND(NBASE2/NTC,2)) AS NBASE2D,
ABS(ROUND(NIGV2/NTC,2)) AS NIGV2D,
ABS(ROUND(NBASE3/NTC,2)) AS NBASE3D,
ABS(ROUND(NIGV3/NTC,2)) AS NIGV3D,  
ABS(ROUND(NINA/NTC,2)) AS NINAD,    
ROUND(NEXO/NTC,2) AS NEXOD,
ABS(ROUND(NISC/NTC,2)) AS NISCD,   
(0.00)::NUMERIC(13,2) AS NIVABASED,   
(0.00)::NUMERIC(13,2) AS NIVAIMPD,   
ABS(ROUND(NTOTS/NTC,2))  AS NTOTD,   
('')::VARCHAR(4) AS CCODFLU,  
('')::VARCHAR(3) AS CCODPAGO,  
('')::VARCHAR(9) AS CCODCOS,  
('')::VARCHAR(9) AS CCODCOS2,  
('')::VARCHAR(10) AS CCODPRESU,  
('')::VARCHAR(4) AS CCODCAM,  
('')::VARCHAR(4) AS CCODCAM2,  
('')::VARCHAR(2) AS ccodecpntribcol,  
('')::VARCHAR(2) AS ccodecpnniifcol,  
('')::VARCHAR(80) AS CGLOSA2,  
('')::VARCHAR(2) AS CMESC,  
('')::VARCHAR(1) AS CMREG,  
('')::VARCHAR(4) AS CCODOCON,  
(0.00)::NUMERIC(1,0) AS NDIFERIDO,  
CAST(NULL AS DATE) AS FFECHADIF,  
NRESP,  
(' ')::VARCHAR(2) AS ccodpps,  
(' ')::VARCHAR(5) AS ccodpds, 
('C')::VARCHAR(1) AS CREGISRE,
--nperdenre, --(0.00)::NUMERIC(1,0) AS nperdenre,  YYYYYY modificación 
case when nperdenre = 2  then 0 else nperdenre end, -- KMM - 08-05-2023 - cpe-3675
nporre, 
(CASE WHEN nresp = 2 
THEN (CASE WHEN NPERDENRE = 1 THEN FFECHADOC ELSE FFECRE END)
ELSE FFECRE END) FFECRE, 
(CASE WHEN NRESP = 2
THEN (CASE WHEN NPERDENRE = 1 THEN RIGHT(CSERIE,6) ELSE CSERRE END)
ELSE CSERRE END)  AS CSERRE, 
(CASE WHEN NRESP = 2
THEN (CASE WHEN NPERDENRE = 1 THEN RIGHT(CNUMERO,13) ELSE CNUMRE END)
ELSE CNUMRE END ) AS CNUMRE, 
CNUMDERE, 
(CASE WHEN nimpres&lt;&gt;0 THEN ntc ELSE 0.00 END)::NUMERIC(10,6) AS NTCRE,
(CASE WHEN nimpres&lt;&gt;0 THEN nbaseres ELSE 0.00 END)::NUMERIC(15,2) AS NBASERES,
(CASE WHEN nimpres&lt;&gt;0 THEN ROUND(nbaseres/NTC,2) ELSE 0.00 END)::NUMERIC(15,2) AS nbasered,
(CASE WHEN NIMPRES&lt;&gt;0 THEN nimpres ELSE 0.00 END)::NUMERIC(15,2) AS nimpres,
(CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END)::NUMERIC(15,2) AS nimpred, 
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
crefdoc, 
freffec, 
crefser, 
crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,  
VARMES AS clecvmes,  
VARPER  AS clecvper,  
('1')::VARCHAR(1) AS cledmcesta,   
VARMES as cledmcmes,  
VARPER as cledmcper,  
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc,   
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(20) AS ccodisc,   
00.00 AS nporisc,  
CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd, 
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd,  
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
cmreg as CMONEDA,
VARLREG as ccodsu,
ffechadoc as ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(CASE WHEN CMREG = 'S' THEN ABS(NICBPER) 	ELSE ABS(ROUND(NICBPER/NTC,2)) END)::numeric(13,2) AS NICBPER,
ABS(NICBPER) as NICBPERS,
ABS(ROUND(NICBPER/NTC,2)) AS NICBPERD,
(CASE WHEN CIGVXACRE = 'S' THEN 0.00 ELSE nigv END) as nigv 
FROM 
   (select  distinct on (rc.ccoddoc,rc.cserie,rc.cnumero,rc.ctipdoc,rc.ccodruc,rc.cctatot) 
Y.nasiento,RC.ntc,Y.cctatot,Y.ntots,Y.nigv1,Y.nbase1,Y.nbase2,Y.nigv2,Y.nbase3,Y.nigv3,Y.nina,Y.nexo,Y.nisc,
RC.cmreg,Y.ndolar,rc.cglosa,rc.flaganalt,Y.ccoddoc,Y.cserie,Y.cnumero,RC.ffechadoc,Y.ccodruc,
RC.ccodenti,RC.ffechaven,RC.flagccost,RC.ccodcos,RC.ccodcos2,RC.flagpresut,RC.ccodpresu,RC.ccond,RC.nimpres,RC.crefdoc,RC.freffec,RC.crefser,RC.crefnum,RC.nicbper,RC.ccodclas,
rc.cnumdere,rc.ffecre,rc.nresp,rc.nporre,rc.nbaseres,RC.CIGVXACRE, rc.nperdenre, rc.cserre, rc.cnumre ,rc.nigv
from cf_regcom_integra RC
inner join

   (select  nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc,cctatot,
sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
from cf_regcom_integra 
group by nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc, cctatot) as Y
ON RC.ccoddoc=Y.ccoddoc AND RC.cserie=Y.cserie AND RC.cnumero=Y.cnumero AND RC.ctipdoc=Y.ctipdoc AND RC.ccodruc=Y.ccodruc AND RC.cctatot=Y.cctatot) as Z
);

insert into  TMPREGCV (
-- UNION
SELECT  
VARPER AS CPER,  
VARMES AS CMES,  
VARORI AS CCODORI,  
NASIENTO + varmax  AS NASIENTO ,  
4 AS nidlin ,  
NTC,  
VARIGV2 AS CCODCUE,  
(CASE WHEN NIGV2&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV2) ELSE ABS(ROUND(NIGV2/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN NIGV2&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV2) ELSE ABS(ROUND(NIGV2/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
CGLOSA,
(CASE WHEN NIGV2&gt;=0 THEN ABS(NIGV2) ELSE 0.00 END)::numeric(15,2) AS NDEBES,
(CASE WHEN NIGV2&lt; 0 THEN ABS(NIGV2) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
(CASE WHEN NIGV2&gt;=0 THEN ABS(ROUND(NIGV2/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
(CASE WHEN NIGV2&lt; 0 THEN ABS(ROUND(NIGV2/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
(' ')::VARCHAR(1) AS CDES,  
('   ')::VARCHAR(3) AS CDESTINO, 
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO, 
('C')::VARCHAR(1) AS CREGIS,		
(0)::NUMERIC(1,0) AS NCOMP ,  
CCODDOC,  
CSERIE,  
CNUMERO,  
(' ')::VARCHAR(20) AS CNUMFIN,  
FFECHADOC,  			 
CCODRUC,  
CCODENTI,  
FFECHAVEN,
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD, 
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD, 
('')::VARCHAR(4) AS CCODFLU,  
('')::VARCHAR(3) AS CCODPAGO,  
('')::VARCHAR(9) AS CCODCOS,  
('')::VARCHAR(9) AS CCODCOS2,  
('')::VARCHAR(10) AS CCODPRESU,  
('')::VARCHAR(4) AS CCODCAM,  
('')::VARCHAR(4) AS CCODCAM2,  
('')::VARCHAR(2) AS ccodecpntribcol,  
('')::VARCHAR(2) AS ccodecpnniifcol,  
('')::VARCHAR(80) AS CGLOSA2,  
('')::VARCHAR(2) AS CMESC,  
('')::VARCHAR(1) AS CMREG,  
('')::VARCHAR(4) AS CCODOCON,  
(0.00)::NUMERIC(1,0) AS NDIFERIDO,  
CAST(NULL AS DATE) AS FFECHADIF,  
(0.00)::NUMERIC(1,0) AS NRESP,  
(' ')::VARCHAR(2) AS ccodpps,  
(' ')::VARCHAR(5) AS ccodpds, 
(' ')::VARCHAR(1) AS CREGISRE,
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre,
CAST(NULL AS DATE) AS FFECRE, 	  
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE, 
(0.00)::NUMERIC(10,6) AS ntcre,  
(0.00)::NUMERIC(13,2) AS nbaseres,  
(0.00)::NUMERIC(13,2) AS nbasered,  
(0.00)::NUMERIC(13,2) AS nimpres,  
(0.00)::NUMERIC(13,2) AS nimpred,  
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
crefdoc, 
freffec, 
crefser, 
crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,  
VARMES AS clecvmes,  
VARPER  AS clecvper,  
('1')::VARCHAR(1) AS cledmcesta,   
VARMES as cledmcmes,  
VARPER as cledmcper,  
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc,   
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(20) AS ccodisc,   
00.00 AS nporisc,  
CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd, 
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd,  
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
cmreg as CMONEDA,
VARLREG as ccodsu,
ffechadoc as ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd,
(0.00)::NUMERIC(5,2) AS nigv
FROM
  (select  distinct on (rc.ccoddoc,rc.cserie,rc.cnumero,rc.ctipdoc,rc.ccodruc,rc.cctatot) 
Y.nasiento,RC.ntc,Y.cctatot,Y.ntots,Y.nigv1,Y.nbase1,Y.nbase2,Y.nigv2,Y.nbase3,Y.nigv3,Y.nina,Y.nexo,Y.nisc,
RC.cmreg,Y.ndolar,rc.cglosa,rc.flaganalt,Y.ccoddoc,Y.cserie,Y.cnumero,RC.ffechadoc,Y.ccodruc,
RC.ccodenti,RC.ffechaven,RC.flagccost,RC.ccodcos,RC.ccodcos2,RC.flagpresut,RC.ccodpresu,RC.ccond,RC.nimpres,RC.crefdoc,RC.freffec,RC.crefser,RC.crefnum,RC.ccodclas,RC.CIGVXACRE
from cf_regcom_integra RC
   inner join
(select  nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc,cctatot,
sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
from cf_regcom_integra 
group by nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc, cctatot) as Y
ON RC.ccoddoc=Y.ccoddoc AND RC.cserie=Y.cserie AND RC.cnumero=Y.cnumero AND RC.ctipdoc=Y.ctipdoc AND RC.ccodruc=Y.ccodruc AND RC.cctatot=Y.cctatot
   WHERE Y.NIGV2 &lt;&gt; 0 and coalesce(CIGVXACRE,'') &lt;&gt; 'S') AS Z
);



insert into  TMPREGCV (
-- UNION
SELECT  
VARPER AS CPER,  
VARMES AS CMES,  
VARORI AS CCODORI,  
NASIENTO + varmax  AS NASIENTO ,  
5 AS nidlin ,  
NTC,  
VARIGV3 AS CCODCUE,  
(CASE WHEN NIGV3&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV3) ELSE ABS(ROUND(NIGV3/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN NIGV3&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV3) ELSE ABS(ROUND(NIGV3/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
CGLOSA,
(CASE WHEN NIGV3&gt;=0 THEN ABS(NIGV3) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
(CASE WHEN NIGV3&lt; 0  THEN ABS(NIGV3) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
(CASE WHEN NIGV3&gt;=0 THEN ABS(ROUND(NIGV3/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
(CASE WHEN NIGV3&lt; 0  THEN ABS(ROUND(NIGV3/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NHABERD,		
(' ')::VARCHAR(1) AS CDES,  
('   ')::VARCHAR(3) AS CDESTINO, 
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO, 
('C')::VARCHAR(1) AS CREGIS,		
(0)::NUMERIC(1,0) AS NCOMP ,  
CCODDOC,  
CSERIE,  
CNUMERO,  
(' ')::VARCHAR(20) AS CNUMFIN,  
FFECHADOC,  			 
CCODRUC,  
CCODENTI,  
FFECHAVEN,
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD, 
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD, 
('')::VARCHAR(4) AS CCODFLU,  
('')::VARCHAR(3) AS CCODPAGO,  
('')::VARCHAR(9) AS CCODCOS,  
('')::VARCHAR(9) AS CCODCOS2,  
('')::VARCHAR(10) AS CCODPRESU,  
('')::VARCHAR(4) AS CCODCAM,  
('')::VARCHAR(4) AS CCODCAM2,  
('')::VARCHAR(2) AS ccodecpntribcol,  
('')::VARCHAR(2) AS ccodecpnniifcol,  
('')::VARCHAR(80) AS CGLOSA2,  
('')::VARCHAR(2) AS CMESC,  
('')::VARCHAR(1) AS CMREG,  
('')::VARCHAR(4) AS CCODOCON,  
(0.00)::NUMERIC(1,0) AS NDIFERIDO,  
CAST(NULL AS DATE) AS FFECHADIF,  
(0.00)::NUMERIC(1,0) AS NRESP,  
(' ')::VARCHAR(2) AS ccodpps,  
(' ')::VARCHAR(5) AS ccodpds, 
(' ')::VARCHAR(1) AS CREGISRE,
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre,
CAST(NULL AS DATE) AS FFECRE, 	  
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE, 
(0.00)::NUMERIC(10,6) AS ntcre,  
(0.00)::NUMERIC(13,2) AS nbaseres,  
(0.00)::NUMERIC(13,2) AS nbasered,  
(0.00)::NUMERIC(13,2) AS nimpres,  
(0.00)::NUMERIC(13,2) AS nimpred,  
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
crefdoc, 
freffec, 
crefser, 
crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,  
VARMES AS clecvmes,  
VARPER  AS clecvper,  
('1')::VARCHAR(1) AS cledmcesta,   
VARMES as cledmcmes,  
VARPER as cledmcper,  
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc,   
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(20) AS ccodisc,   
00.00 AS nporisc,  
CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd, 
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd,  
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
cmreg as CMONEDA,
VARLREG as ccodsu,
ffechadoc as ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd ,
(0.00)::NUMERIC(5,2) AS nigv
FROM
  (select  distinct on (rc.ccoddoc,rc.cserie,rc.cnumero,rc.ctipdoc,rc.ccodruc,rc.cctatot) 
Y.nasiento,RC.ntc,Y.cctatot,Y.ntots,Y.nigv1,Y.nbase1,Y.nbase2,Y.nigv2,Y.nbase3,Y.nigv3,Y.nina,Y.nexo,Y.nisc,
RC.cmreg,Y.ndolar,rc.cglosa,rc.flaganalt,Y.ccoddoc,Y.cserie,Y.cnumero,RC.ffechadoc,Y.ccodruc,
RC.ccodenti,RC.ffechaven,RC.flagccost,RC.ccodcos,RC.ccodcos2,RC.flagpresut,RC.ccodpresu,RC.ccond,RC.nimpres,RC.crefdoc,RC.freffec,RC.crefser,RC.crefnum,RC.ccodclas
from cf_regcom_integra RC
  inner join
(select nasiento, ccoddoc,cserie,cnumero,ctipdoc,ccodruc,cctatot,
sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
from cf_regcom_integra 
group by nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc, cctatot) as Y
ON RC.ccoddoc=Y.ccoddoc AND RC.cserie=Y.cserie AND RC.cnumero=Y.cnumero AND RC.ctipdoc=Y.ctipdoc AND RC.ccodruc=Y.ccodruc AND RC.cctatot=Y.cctatot
WHERE Y.NIGV3 &lt;&gt; 0 and coalesce(CIGVXACRE,'') &lt;&gt; 'S') AS Z
);



insert into  TMPREGCV (
--UNION
SELECT  
VARPER AS CPER, 
VARMES AS CMES, 
VARORI AS CCODORI, 
NASIENTO + varmax  AS NASIENTO, 
2 AS nidlin ,   
NTC, 
CCTAOTRIB AS CCODCUE, 
(CASE WHEN NEXO&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NEXO) ELSE ABS(ROUND(NEXO/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN NEXO&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NEXO) ELSE ABS(ROUND(NEXO/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
CGLOSA, 
(CASE WHEN NEXO&gt;=0 THEN ABS(NEXO) ELSE  0.00 END)::numeric(13,2) AS NDEBES,
(CASE WHEN NEXO&lt; 0  THEN ABS(NEXO) ELSE  0.00 END)::numeric(13,2) AS NHABERS,
(CASE WHEN NEXO&gt;=0 THEN ABS(ROUND(NEXO/NTC,2)) ELSE  0.00 END)::numeric(13,2) AS NDEBED,
(CASE WHEN NEXO&lt; 0  THEN ABS(ROUND(NEXO/NTC,2)) ELSE  0.00 END)::numeric(13,2) AS NHABERD,	
(' ')::VARCHAR(1) AS CDES,
(' ')::VARCHAR(3) AS CDESTINO,
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO,
(' ')::VARCHAR(1) AS CREGIS, 
(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
CCODDOC, 
CSERIE, 
CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN, 
FFECHADOC, 
CCODRUC, 
CCODENTI, 
FFECHAVEN, 
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD, 
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD, 
(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUO&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
(CASE WHEN VARSOLOCOMPRA=1 THEN ''  ELSE (CASE WHEN FLAGANALO =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' ' END)  END)::VARCHAR(2) AS CMESC,
(CASE WHEN FLAGANALO = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
(' ')::VARCHAR(4) AS CCODOCON, 
(0.00)::NUMERIC(1,0) AS NDIFERIDO,
CAST(NULL AS DATE) AS FFECHADIF, 
(0.00)::NUMERIC(1,0) AS NRESP, 
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds, 
(' ')::VARCHAR(1) AS CREGISRE,
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre, 
CAST(NULL AS DATE) AS FFECRE, 
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE,
(0.00)::NUMERIC(10,6) AS ntcre, 
(0.00)::NUMERIC(15,2) AS nbaseres, 
(0.00)::NUMERIC(15,2) AS nbasered, 
(0.00)::NUMERIC(15,2) AS nimpres, 
(0.00)::NUMERIC(15,2) AS nimpred, 
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
(' ')::VARCHAR(2) AS crefdoc, 
CAST(NULL AS DATE) AS freffec, 
(' ')::VARCHAR(10) AS crefser, 
(' ')::VARCHAR(13) AS crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta,
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc, 
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(5) AS ccodisc, 
00.00 AS nporisc, 
CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd,
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
cmreg as CMONEDA,
VARLREG as ccodsu,
ffechadoc as ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd,
(0.00)::NUMERIC(5,2) AS nigv 
FROM
  (select  Y.nasiento,RC.ntc,RC.cctabase,RC.cctatot,RC.CCTAOTRIB,RC.ntots,RC.nigv1,RC.nbase1,RC.nbase2,RC.nigv2,RC.nbase3,RC.nigv3,RC.nina,RC.nexo,RC.nisc,
RC.cmreg,RC.ndolar,rc.cglosa,rc.flaganalt,rc.flaganalb,rc.flaganalo,rc.FLAGCCOSB,flagccoso,rc.FLAGPRESUB,RC.FLAGPRESUO,RC.ccoddoc,RC.cserie,RC.cnumero,RC.ffechadoc,RC.ccodruc,
RC.ccodenti,RC.ffechaven,RC.flagccost,RC.ccodcos,RC.ccodcos2,RC.flagpresut,RC.ccodpresu,RC.ccond,RC.nimpres,RC.crefdoc,RC.freffec,RC.crefser,RC.crefnum,RC.ccodclas
from cf_regcom_integra RC
   inner join
(select  nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc,cctatot,
sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
from cf_regcom_integra 
group by nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc, cctatot) as Y
   ON RC.ccoddoc=Y.ccoddoc AND RC.cserie=Y.cserie AND RC.cnumero=Y.cnumero AND RC.ctipdoc=Y.ctipdoc AND RC.ccodruc=Y.ccodruc AND RC.cctatot=Y.cctatot 
   WHERE Y.NEXO &lt;&gt; 0) AS Z
);
insert into  TMPREGCV (
-- UNION
SELECT  
VARPER AS CPER, 
VARMES AS CMES, 
VARORI AS CCODORI, 
NASIENTO + varmax  AS NASIENTO, 
7 AS nidlin ,   
NTC, 
CCTAICBPER AS CCODCUE, 
(CASE WHEN NICBPER&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NICBPER) ELSE ABS(ROUND(NICBPER/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN NICBPER&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NICBPER) ELSE ABS(ROUND(NICBPER/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
CGLOSA, 
(CASE WHEN NICBPER&gt;=0 THEN ABS(NICBPER) ELSE  0.00 END)::numeric(13,2) AS NDEBES,
(CASE WHEN NICBPER&lt; 0  THEN ABS(NICBPER) ELSE  0.00 END)::numeric(13,2) AS NHABERS,
(CASE WHEN NICBPER&gt;=0 THEN ABS(ROUND(NICBPER/NTC,2)) ELSE  0.00 END)::numeric(13,2) AS NDEBED,
(CASE WHEN NICBPER&lt; 0  THEN ABS(ROUND(NICBPER/NTC,2)) ELSE  0.00 END)::numeric(13,2) AS NHABERD,	
(' ')::VARCHAR(1) AS CDES,
(' ')::VARCHAR(3) AS CDESTINO,
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO,
(' ')::VARCHAR(1) AS CREGIS, 
(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
CCODDOC, 
CSERIE, 
CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN, 
FFECHADOC, 
CCODRUC, 
CCODENTI, 
FFECHAVEN, 
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD, 
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD, 
(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUO&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
(CASE WHEN VARSOLOCOMPRA=1 THEN ''  ELSE (CASE WHEN FLAGANALO =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' ' END)  END)::VARCHAR(2) AS CMESC,
(CASE WHEN FLAGANALO = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
(' ')::VARCHAR(4) AS CCODOCON, 
(0.00)::NUMERIC(1,0) AS NDIFERIDO,
CAST(NULL AS DATE) AS FFECHADIF, 
(0.00)::NUMERIC(1,0) AS NRESP, 
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds, 
(' ')::VARCHAR(1) AS CREGISRE,
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre, 
CAST(NULL AS DATE) AS FFECRE, 
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE,
(0.00)::NUMERIC(10,6) AS ntcre, 
(0.00)::NUMERIC(15,2) AS nbaseres, 
(0.00)::NUMERIC(15,2) AS nbasered, 
(0.00)::NUMERIC(15,2) AS nimpres, 
(0.00)::NUMERIC(15,2) AS nimpred, 
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
(' ')::VARCHAR(2) AS crefdoc, 
CAST(NULL AS DATE) AS freffec, 
(' ')::VARCHAR(10) AS crefser, 
(' ')::VARCHAR(13) AS crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta,
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc, 
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(5) AS ccodisc, 
00.00 AS nporisc, 
CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd,
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
cmreg as CMONEDA,
VARLREG as ccodsu,
ffechadoc as ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd ,
(0.00)::NUMERIC(5,2) AS nigv
FROM
  (select  Y.nasiento,RC.ntc,RC.cctabase,RC.cctatot,RC.CCTAOTRIB,RC.ntots,RC.nigv1,RC.nbase1,RC.nbase2,RC.nigv2,RC.nbase3,RC.nigv3,RC.nina,RC.nexo,RC.nisc,
RC.cmreg,RC.ndolar,rc.cglosa,rc.flaganalt,rc.flaganalb,rc.flaganalo,rc.FLAGCCOSB,flagccoso,rc.FLAGPRESUB,RC.FLAGPRESUO,RC.ccoddoc,RC.cserie,RC.cnumero,RC.ffechadoc,RC.ccodruc,
RC.ccodenti,RC.ffechaven,RC.flagccost,RC.ccodcos,RC.ccodcos2,RC.flagpresut,RC.ccodpresu,RC.ccond,RC.nimpres,RC.crefdoc,RC.freffec,RC.crefser,RC.crefnum,RC.nicbper,
RC.cctaicbper,RC.ccodclas
from cf_regcom_integra RC
   inner join
(select  nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc,cctatot,
sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar, sum(nicbper) as nicbper
from cf_regcom_integra 
group by nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc, cctatot) as Y
   ON RC.ccoddoc=Y.ccoddoc AND RC.cserie=Y.cserie AND RC.cnumero=Y.cnumero AND RC.ctipdoc=Y.ctipdoc AND RC.ccodruc=Y.ccodruc AND RC.cctatot=Y.cctatot 
   WHERE Y.NICBPER &lt;&gt; 0) AS Z
--order by cper, cmes, ccodori, nasiento, nidlin
) ; 

-- ************************************
-- ISC -- KMM - 09-05-2023 - cpe-3675 
-- ************************************
insert into  TMPREGCV (
--UNION
SELECT 
VARPER AS CPER, 
VARMES AS CMES, 
VARORI AS CCODORI, 
NASIENTO + varmax  AS NASIENTO, 
8 AS nidlin,  
NTC, 
varctaisc AS CCODCUE,
(CASE WHEN nisc&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(nisc) ELSE ABS(ROUND((nisc)/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN nisc&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(nisc) ELSE ABS(ROUND((nisc)/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
CGLOSA, 
(CASE WHEN (nisc)&gt;=0 THEN ABS(nisc) ELSE 0.00 END)::numeric(13,2) as NDEBES,
(CASE WHEN (nisc)&lt; 0 THEN ABS(nisc) ELSE 0.00 END)::numeric(13,2) as NHABERS,
(CASE WHEN (nisc)&gt;=0 THEN ABS(ROUND((nisc)/NTC,2)) ELSE 0.00 END)::numeric(13,2) as NDEBED,
(CASE WHEN (nisc)&lt; 0 THEN ABS(ROUND((nisc)/NTC,2)) ELSE 0.00 END)::numeric(13,2) as NHABERD,
(' ')::VARCHAR(1) AS CDES,
(' ')::VARCHAR(3) AS CDESTINO,
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO,
(' ')::VARCHAR(1) AS CREGIS, 
(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
CCODDOC, 
CSERIE, 
CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN,
FFECHADOC, 	 
CCODRUC, 
CCODENTI, 
FFECHAVEN, 
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD, 
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD, 
(CASE WHEN FLAGANALB=3 OR FLAGANALB = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
(CASE WHEN FLAGANALB=3 OR FLAGANALB = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
(CASE WHEN VARSOLOCOMPRA=1 THEN ''  ELSE (CASE WHEN FLAGANALB   =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' 'END) END)::VARCHAR(2) AS CMESC,
(CASE WHEN FLAGANALB = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
(' ')::VARCHAR(4) AS CCODOCON, 
(0.00)::NUMERIC(1,0) AS NDIFERIDO,
CAST(NULL AS DATE) AS FFECHADIF, 
(0.00)::NUMERIC(1,0) AS NRESP, 
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds, 
(' ')::VARCHAR(1) AS CREGISRE,
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre, 
CAST(NULL AS DATE) AS FFECRE, 
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE,
(0.00)::NUMERIC(10,6) AS ntcre, 
(0.00)::NUMERIC(15,2) AS nbaseres, 
(0.00)::NUMERIC(15,2) AS nbasered, 
(0.00)::NUMERIC(15,2) AS nimpres, 
(0.00)::NUMERIC(15,2) AS nimpred, 
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
crefdoc, 
freffec, 
crefser, 
crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta,
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc, 
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(5) AS ccodisc, 
00.00 AS nporisc, 
CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd,
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
cmreg as CMONEDA,
VARLREG as ccodsu,
ffechadoc as ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd,
(0.00)::NUMERIC(5,2) AS nigv 
FROM
  (select  Y.nasiento,RC.ntc,RC.cctabase,RC.cctatot,RC.ntots,RC.nigv1,RC.nbase1,RC.nbase2,RC.nigv2,RC.nbase3,RC.nigv3,RC.nina,RC.nexo,RC.nisc,
RC.cmreg,RC.ndolar,rc.cglosa,rc.flaganalt,rc.flaganalb,rc.flaganalo,rc.FLAGCCOSB,flagccoso,rc.FLAGPRESUB,RC.ccoddoc,RC.cserie,RC.cnumero,RC.ffechadoc,RC.ccodruc,
RC.ccodenti,RC.ffechaven,RC.flagccost,RC.ccodcos,RC.ccodcos2,RC.flagpresut,RC.ccodpresu,RC.ccond,RC.nimpres,RC.crefdoc,RC.freffec,RC.crefser,RC.crefnum,RC.ccodclas
from cf_regcom_integra RC
   inner join
(select  nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc,cctatot,
sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
from cf_regcom_integra 
group by nasiento,ccoddoc,cserie,cnumero,ctipdoc,ccodruc, cctatot) as Y
ON RC.ccoddoc=Y.ccoddoc AND RC.cserie=Y.cserie AND RC.cnumero=Y.cnumero AND RC.ctipdoc=Y.ctipdoc AND RC.ccodruc=Y.ccodruc AND RC.cctatot=Y.cctatot 
WHERE Y.NISC &lt;&gt; 0
 ) AS Z

);
-- ************************************
-- ISC -- KMM - 09-05-2023 - cpe-3675 
-- ************************************

----fin del insert
INSERT INTO tmpregcv(
SELECT  
CPER, 
CMES, 
CCODORI, 
NASIENTO, 
nidlin ,   
0 as NTC, 
CASE WHEN DIF1S + DIF1D &lt; 0 THEN vardifp ELSE vardifG END AS CCODCUE, 
0::numeric(13,2) AS NDEBE,
0::numeric(13,2) AS NHABER,
'AJUSTE POR DIFERENCIA DE CAMBIO' AS CGLOSA, 
(CASE WHEN DIF1S&lt;0 THEN ABS(DIF1S) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
(CASE WHEN DIF1S&gt;0 THEN ABS(DIF1S) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
(CASE WHEN DIF1D&lt;0 THEN ABS(DIF1D) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
(CASE WHEN DIF1D&gt;0 THEN ABS(DIF1D) ELSE 0.00 END)::numeric(13,2) AS NHABERD,
(' ')::VARCHAR(1) AS CDES,
(' ')::VARCHAR(3) AS CDESTINO,
(1)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO,
(' ')::VARCHAR(1) AS CREGIS, 
0 AS NCOMP,
'' AS CCODDOC, 
'' AS CSERIE, 
'' AS CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN, 
CAST(NULL AS DATE) AS FFECHADOC, 
'' AS CCODRUC, 
'' AS CCODENTI, 
CAST(NULL AS DATE) AS FFECHAVEN, 
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD, 
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD, 
' '::VARCHAR(4) AS CCODFLU,
'' ::VARCHAR(3) AS CCODPAGO,
''::VARCHAR(9) AS CCODCOS,
''::VARCHAR(9) AS CCODCOS2,
''::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
''::VARCHAR(2) AS CMESC,
''::VARCHAR(2) AS CMREG,
(' ')::VARCHAR(4) AS CCODOCON, 
(0.00)::NUMERIC(1,0) AS NDIFERIDO,
CAST(NULL AS DATE) AS FFECHADIF, 
(0.00)::NUMERIC(1,0) AS NRESP, 
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds, 
(' ')::VARCHAR(1) AS CREGISRE,
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre, 
CAST(NULL AS DATE) AS FFECRE, 
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE,
(0.00)::NUMERIC(10,6) AS ntcre, 
(0.00)::NUMERIC(15,2) AS nbaseres, 
(0.00)::NUMERIC(15,2) AS nbasered, 
(0.00)::NUMERIC(15,2) AS nimpres, 
(0.00)::NUMERIC(15,2) AS nimpred, 
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
(' ')::VARCHAR(2) AS crefdoc, 
CAST(NULL AS DATE) AS freffec, 
(' ')::VARCHAR(10) AS crefser, 
(' ')::VARCHAR(13) AS crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta,
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc, 
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(5) AS ccodisc, 
00.00 AS nporisc, 
(' ')::VARCHAR(1) AS CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd,
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
CMONEDA,
VARLREG as ccodsu,
ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd,
(0.00)::NUMERIC(5,2) AS nigv 
FROM (SELECT 	CPER, CMES, CCODORI,NASIENTO,CMONEDA,ffecasi, MAX(NIDLIN)+1  AS NIDLIN,
SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, SUM(NDEBED-NHABERD) AS DIF1D
FROM tmpregcv 
GROUP BY CPER, CMES, CCODORI,NASIENTO,CMONEDA,ffecasi 
HAVING SUM(NDEBE-NHABER) = 0 and (SUM(NDEBES-NHABERS) &lt;&gt; 0 OR SUM(NDEBED-NHABERD) &lt;&gt; 0)) AS Y
);

/**** AQUI LA NUMERACION *** NIDLIN ***/
insert into tmpregcv2 (
select cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes,cdestino,ndifauto,najusauto,cregis,ncomp,ccoddoc,cserie,
cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,nbase1,nigv1,nbase2,nigv2,nbase3,nigv3,nina,nexo,nisc,nivabase,nivaimp,ntot,nbase1s,nigv1s,nbase2s,nigv2s,nbase3s,
nigv3s,ninas,nexos,niscs,nivabases,nivaimps,ntots,nbase1d,nigv1d,nbase2d,nigv2d,nbase3d,nigv3d,ninad,nexod,niscd,nivabased,nivaimpd,ntotd,ccodflu,ccodpago,ccodcos,
ccodcos2,ccodpresu,ccodcam,ccodcam2,ccodecpntribcol,ccodecpnniifcol,cglosa2,cmesc,cmreg,ccodocon,ndiferido,ffechadif,nresp,ccodpps,ccodpds,cregisre,nperdenre,
nporre,ffecre,cserre,cnumre,cnumdere,ntcre,nbaseres,nbasered,nimpres,nimpred,cpdbdetcod,ccodretran,ccodtopdet,npagdetra,cdocnodom,crefdoc,freffec,crefser,crefnum,
ccoddas,cyeardas,ccorrdas,ffembdas,ffregdas,nfobdas,nfobdad,nlecorre,clecvesta,clecvmes,clecvper,cledmcesta,cledmcmes,cledmcper,nlecorrere,nautamo,ffec_dc,cdoc_dc,
cser_dc,cnum_dc,CCODISC,NPORISC,ccodclas,ccodtipren,cdoc_nd,cser_nd,cnum_nd,nrenbru_nd,nrennet_nd,nimpret_nd,ndedcos_nd,ntasret_nd,ccodmon,ntc_nd,nintext,
cmoneda,ccodsu,ffecasi,
row_number() over (PARTITION BY CPER,CMES,CCODORI,NASIENTO ORDER BY NIDLIN) as newidlin,
nicbper,
nicbpers,
nicbperd ,
nigv
from tmpregcv ORDER BY CPER,CMES,CCODORI,NASIENTO,NIDLIN
);

--	DELETE FROM tmpregcv;


---- ASIGNACION DE VARIABLES PARA GENERAR DESTINOS 
VPER 		:= '';
VMES 		:= '';
VCODORI 	:= '';
VASIENTO 	:= 0;
VIDLIN 		:= 0;
VCODCUE 	:= '';
VDESTINO 	:= '';
VCODCOS 	:= '';
NDESTINO 	:= 0;

FOR RW IN 
(
select dl.cper, dl.cmes, dl.ccodori, dl.nasiento, dl.newidlin as nidlin, dl.ccodcue, dl.cdes, dl.cdestino, dl.ccodcos
from tmpregcv2 dl
inner join
(
select distinct dl.cper, dl.ccodcue, dl.ccodcos, ccl.cdebcos, ccl.chabcos
from tmpregcv2 dl
inner join cf_plan p 	  on dl.cper = p.cper   and dl.ccodcue = p.ccodcue   and p.ntipcue in (4,5) and p.nnivcue = 3 
inner join cg_costosl ccl on dl.cper = ccl.cper and dl.ccodcos = ccl.ccodcos and ccl.cdebcos &lt;&gt; ''  and ccl.chabcos &lt;&gt; ''   
where 	left(dl.ccodcue,1) &lt;&gt; '7' and dl.ccodcos &lt;&gt; '' 
and dl.cmes = VARMES and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb = '' 
and p.cdeshab = ''
union all

select distinct dl.cper, dl.ccodcue, dl.ccodcos, p.cdesdeb, p.cdeshab
from tmpregcv2 dl
inner join cf_plan p on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
where 	left(dl.ccodcue,1) &lt;&gt; '7' 
and dl.cmes = VARMES and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb &lt;&gt; '' 
and p.cdeshab &lt;&gt; ''
order by cper, ccodcue, ccodcos
) as X
ON dl.cper = X.cper and dl.ccodcue = X.ccodcue and dl.ccodcos = X.ccodcos
WHERE dl.cmes = VARMES and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
order by dl.cper, dl.cmes, dl.ccodori, dl.nasiento, dl.newidlin
) 
LOOP 
IF VPER = RW.CPER AND VMES = RW.CMES AND VCODORI = RW.CCODORI AND VASIENTO = RW.NASIENTO THEN 
NDESTINO := NDESTINO + 1;
ELSE
NDESTINO := 1;
END IF ;
RW.CDESTINO := lpad (cast(NDESTINO as text), 3, '0');
VPER := RW.CPER;
VMES := RW.CMES;
VCODORI := RW.CCODORI;
VASIENTO := RW.NASIENTO;
UPDATE tmpregcv2 SET cdestino = RW.CDESTINO 
where tmpregcv2.CPER = RW.CPER AND 
      tmpregcv2.CMES = RW.CMES AND 
      tmpregcv2.CCODORI = RW.CCODORI AND 
      tmpregcv2.NASIENTO = RW.NASIENTO AND 
      tmpregcv2.NEWIDLIN = RW.NIDLIN;
END LOOP;

--*****    DESTINOS     *****
VPER := '';
VMES := '';
VCODORI := '';
VASIENTO := 0;
VIDLIN := 0;
VNIDLIN := 0;
VMAXIDLIN := 0;
FOR RW IN 
(
select  dl.cper, dl.cmes, dl.ccodori, dl.nasiento, 0 AS nidlin, dl.ntc, dl.cglosa,  
x.cdebcos as ccodcue,
dl.ndebe, dl.nhaber, dl.ndebes, dl.nhabers, dl.ndebed, dl.nhaberd, 
'S' AS CDES, dl.cdestino, dl.ccodcos, dl.ccodcos2, dl.cglosa2, 0 as nlecorre, -- nlecorre es igual a NIDLIN
dl.cledmcesta, dl.cledmcmes, dl.cledmcper, 'D' AS ctipodh, DL.CMONEDA, dl.ccodsu, dl.ffecasi
from tmpregcv2 dl 
inner join 
-- aqui se tiene la cuenta y destino al debe y haber FINAL. LISTO LOS SELECT CON UNION correcto para los destinos
(
select distinct dl.cper, dl.ccodcue, dl.ccodcos, ccl.cdebcos, ccl.chabcos
  from tmpregcv2 dl 
inner join cf_plan p 		on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
inner join cg_costosl ccl	on dl.cper = ccl.cper and dl.ccodcos = ccl.ccodcos and ccl.cdebcos &lt;&gt; '' and ccl.chabcos &lt;&gt; ''   
  where left(dl.ccodcue,1) &lt;&gt; '7' and dl.ccodcos &lt;&gt; '' 
and dl.cmes   = VARMES 
and dl.cper   = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb = '' 
and p.cdeshab = ''

union all

select distinct dl.cper, dl.ccodcue, dl.ccodcos, p.cdesdeb, p.cdeshab
  from tmpregcv2 dl inner join cf_plan p on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
  where left(dl.ccodcue,1) &lt;&gt; '7' 
       and dl.cmes = VARMES 
       and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
       and p.cdesdeb &lt;&gt; '' 
       and p.cdeshab &lt;&gt; ''
order by cper, ccodcue, ccodcos
) as X
on dl.cper = x.cper and dl.ccodcue = x.ccodcue and dl.ccodcos = x.ccodcos
where dl.cdestino &lt;&gt;'' and 
      dl.cdes = ''     and 
      dl.cmes = VARMES and 
      dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)

UNION

select  dl.cper, dl.cmes, dl.ccodori, dl.nasiento, 0 AS nidlin, dl.ntc, dl.cglosa,  -- idlin se reasignara en la función
x.chabcos as ccodcue,
CASE WHEN dl.ndebe &lt;&gt; 0.00 THEN 0.00 ELSE dl.nhaber END,
CAse WHEN dl.nhaber &lt;&gt; 0.00 THEN 0.00 ELSE dl.ndebe END,
CASE WHEN dl.ndebes &lt;&gt; 0.00 THEN 0.00 ELSE dl.nhabers END,
CASE WHEN dl.nhabers &lt;&gt; 0.00 THEN 0.00 ELSE dl.ndebes END,
CASE WHEN dl.ndebed &lt;&gt; 0.00 THEN 0.00 ELSE dl.nhaberd END,
CASE WHEN dl.nhaberd &lt;&gt; 0.00 THEN 0.00 ELSE dl.ndebed END, 
'S' AS CDES, dl.cdestino, dl.ccodcos, dl.ccodcos2, dl.cglosa2, 0 as nlecorre, -- 
dl.cledmcesta, dl.cledmcmes, dl.cledmcper, 'H' AS ctipodh, DL.CMONEDA, dl.ccodsu, dl.ffecasi
from tmpregcv2 dl 
inner join 
(
  select distinct dl.cper, dl.ccodcue, dl.ccodcos, ccl.cdebcos, ccl.chabcos
     from tmpregcv2 dl	
        inner join cf_plan p      on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
inner join cg_costosl ccl on dl.cper = ccl.cper and dl.ccodcos = ccl.ccodcos and ccl.cdebcos &lt;&gt; '' and ccl.chabcos &lt;&gt; ''   
     where left(dl.ccodcue,1) &lt;&gt; '7' 
and dl.ccodcos &lt;&gt; '' 
and dl.cmes = VARMES 
and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb = '' 
and p.cdeshab = ''
   union all

   select distinct dl.cper, dl.ccodcue, dl.ccodcos, p.cdesdeb, p.cdeshab
      from tmpregcv2 dl
inner join cf_plan p on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
      where left(dl.ccodcue,1) &lt;&gt; '7' 
and dl.cmes = VARMES 
and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb &lt;&gt; '' 
and p.cdeshab &lt;&gt; ''
    order by cper, ccodcue, ccodcos
   ) as X
  on dl.cper = x.cper and dl.ccodcue = x.ccodcue and dl.ccodcos = x.ccodcos 
  where dl.cdestino &lt;&gt;'' and dl.cdes = '' and dl.cmes = VARMES and dl.cper = VARPER  --
  order by cper, cmes, ccodori, nasiento, cdestino, ctipodh 

) 

LOOP 
IF VPER = RW.CPER AND VMES = RW.CMES AND VCODORI = RW.CCODORI AND VASIENTO = RW.NASIENTO THEN
VIDLIN := VIDLIN + 1;
RW.NIDLIN := VMAXIDLIN + VIDLIN;
ELSE
VMAXIDLIN := (SELECT MAX(CDL.NEWIDLIN) FROM tmpregcv2 CDL WHERE CDL.CPER = RW.CPER AND CDL.CMES = RW.CMES AND CDL.CCODORI = RW.CCODORI AND CDL.NASIENTO = RW.NASIENTO);
VIDLIN := 1;
RW.NIDLIN := VMAXIDLIN + VIDLIN;
END IF;
VPER := RW.CPER;
VMES := RW.CMES;
VCODORI := RW.CCODORI;
VASIENTO := RW.NASIENTO;

--inserta los registros 
insert into tmpregcv2 (cper, cmes, ccodori, nasiento, nidlin, ntc, cglosa, ccodcue, 
ndebe, nhaber, ndebes, nhabers, ndebed, nhaberd, 
cdes, cdestino, ccodcos, ccodcos2, cglosa2, nlecorre, cledmcesta, cledmcmes, cledmcper, CMONEDA, ccodsu, ffecasi, newidlin) 
values (RW.CPER, RW.CMES, RW.CCODORI, RW.NASIENTO, RW.NIDLIN, RW.NTC, RW.CGLOSA, RW.CCODCUE,
RW.NDEBE, RW.NHABER, RW.NDEBES, RW.NHABERS, RW.NDEBED, RW.NHABERD, 
RW.CDES, RW.CDESTINO, RW.CCODCOS, RW.CCODCOS2, RW.CGLOSA2, RW.NLECORRE, RW.CLEDMCESTA, RW.CLEDMCMES, RW.CLEDMCPER, RW.CMONEDA, rw.ccodsu, rw.ffecasi, rw.nidlin);
-- AQUI EMPIEZA LA ASIGNACION A LA TABLA 

END LOOP;

IF VARSOLOCOMPRA = 0 THEN
BEGIN
INSERT INTO tmpregcv3(
SELECT  VARPER AS CPER, 
VARMES AS CMES, 
VARORICOB AS CCODORI,
NASIENTOCOB + varmaxCOB AS NASIENTO , 
1 AS nidlin , 
NTC, 
CCTACOBRA AS CCODCUE, 
----------------SE REALIZA CAMBIO CPE-7110 JDAB 16/05/2024
case when NRESP = 2  then 
(CASE WHEN NTOTS&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS)+ ABS(case when NRESP = 2 then nimpres else 0.00 end) ELSE ABS(ROUND(abs(NTOTS)+ABS(case when NRESP = 2 then nimpres else 0.00 end)/NTC,2)) END) ELSE 0.00 END)
else
 (CASE WHEN NTOTS&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) end ::numeric(15,2) AS NDEBE,
case when NRESP = 2  then 
 (CASE WHEN NTOTS&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS)+ABS(case when NRESP = 2 then nimpres else 0.00 end) ELSE ABS(ROUND(abs(NTOTS)+ABS(case when NRESP = 2 then nimpres else 0.00 end)/NTC,2)) END) ELSE 0.00 END)
else
(CASE WHEN NTOTS&gt;=0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) end ::numeric(15,2)as NHABER,
-------(CASE WHEN NTOTS&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS)+ ABS(case when NRESP = 2 then nimpres else 0.00 end) ELSE ABS(ROUND(abs(NTOTS)+ABS(case when NRESP = 2 then nimpres else 0.00 end)/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
--------(CASE WHEN NTOTS&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS)+ABS(case when NRESP = 2 then nimpres else 0.00 end) ELSE ABS(ROUND(abs(NTOTS)+ABS(case when NRESP = 2 then nimpres else 0.00 end)/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
 CGLOSA,
(CASE WHEN NTOTS&lt; 0 THEN ABS(NTOTS)+ABS(case when NRESP = 2 then nimpres else 0.00 end) ELSE 0.00 END)::numeric(15,2) AS NDEBES,
(CASE WHEN NTOTS&gt;=0 THEN ABS(NTOTS)+ABS(case when NRESP = 2 then nimpres else 0.00 end)  ELSE 0.00 END)::numeric(15,2) AS NHABERS,
(CASE WHEN NTOTS&lt; 0 THEN ABS(ROUND((abs(NTOTS) + ABS(case when NRESP = 2 then nimpres else 0.00 end)) / NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
(CASE WHEN NTOTS&gt;=0 THEN ABS(ROUND((ABS(NTOTS)+ ABS(case when NRESP = 2 then nimpres else 0.00 end))  / NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
--(CASE WHEN NTOTS&lt;  0  THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBE, 
--(CASE WHEN NTOTS&gt;= 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABER,
--CGLOSA,
--(CASE WHEN NTOTS&lt;  0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS*NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
--(CASE WHEN NTOTS&gt;= 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS*NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
--(CASE WHEN NTOTS&lt;  0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00  END)::numeric(15,2) AS NDEBED,
--(CASE WHEN NTOTS&gt;= 0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00  END)::numeric(15,2) AS NHABERD,
(' ')::VARCHAR(1) AS CDES,
('   ')::VARCHAR(3) AS CDESTINO,
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO, 
(' ')::VARCHAR(1) AS CREGIS,
(0)::NUMERIC(1,0) AS NCOMP ,
CCODDOC, 
CSERIE,
CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN,
FFECHADOC, 			 
CCODRUC, 
CCODENTI, 
FFECHAVEN,
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD,
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD,
(CASE WHEN FLAGANALCOB=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
(CASE WHEN FLAGANALCOB=3 OR FLAGANALT = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
(CASE WHEN FLAGCCOSCOB&gt;1 THEN CCODCOS  ELSE '         ' END)::VARCHAR(9) AS CCODCOS	,
(CASE WHEN FLAGCCOSCOB&gt;1 THEN CCODCOS2 ELSE '         ' END)::VARCHAR(9) AS CCODCOS2,
(CASE WHEN VARPRESUA=1 THEN (CASE WHEN FLAGPRESUCOB&gt;1 THEN CCODPRESU ELSE '          ' END)  ELSE  '          '  END)::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
(' ')::VARCHAR(2)  AS CMESC,
(' ')::VARCHAR(1) AS CMREG,  
(' ')::VARCHAR(4) AS CCODOCON,	
(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
CAST(NULL AS DATE) AS FFECHADIF,
(0.00)::NUMERIC(1,0) AS NRESP,
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds,
(' ')::VARCHAR(1) AS CREGISRE, 
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre, 
CAST(NULL AS DATE) AS FFECRE, 				
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE,
(0.00)::NUMERIC(10,6) AS NTCRE,
(0.00)::NUMERIC(15,2) AS NBASERES,
(0.00)::NUMERIC(15,2) AS nbasered,
(0.00)::NUMERIC(15,2) AS nimpres,
(0.00) AS nimpred,
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
(' ')::VARCHAR(2) AS crefdoc, 
CAST(NULL AS DATE) AS freffec,
(' ')::VARCHAR(10) AS crefser, 
(' ')::VARCHAR(13) AS crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta, 
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta, 
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc, 
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(20) AS ccodisc,
00.00 AS nporisc,  		
(' ')::VARCHAR(1) AS CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd, 
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
('1')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
CMREG AS CMONEDA,
VARLREGCONT as ccodsu,
ffechadoc as ffecasi,
1 AS newidlin,
(0.00)::NUMERIC(5,2) AS nigv
FROM 
(SELECT R.*, P.NANACUE AS FLAGANALCOB, P.Nafecos AS FLAGCCOSCOB, P.Nafepre AS FLAGPRESUCOB, 
ROW_NUMBER () OVER (ORDER BY CCODRUC, CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB 
FROM cf_regcom_integra R   
INNER JOIN CF_PLAN  P 
ON R.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER 
WHERE ccond = 'CON' AND NTOTS&lt;&gt;0) C

union all 

-- KMM - 08-09-2023 - cpe-3675
SELECT  VARPER AS CPER, 
VARMES AS CMES, 
VARORICOB AS CCODORI,
NASIENTOCOB + varmaxCOB AS NASIENTO , 
2 AS nidlin , 
NTC, 
cregperc AS CCODCUE, 

(CASE WHEN NTOTS &gt;=0  THEN (CASE WHEN CMREG = 'S' THEN ABS(nimpres) ELSE ABS(ROUND(nimpres/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN NTOTS &lt; 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(nimpres) ELSE ABS(ROUND(nimpres/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
 CGLOSA,
(CASE WHEN NTOTS &gt;= 0 THEN ABS(nimpres) ELSE 0.00 END)::numeric(15,2) AS NDEBES,
(CASE WHEN NTOTS &lt;  0 THEN ABS(nimpres) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
(CASE WHEN NTOTS &gt;= 0 THEN ABS(ROUND(nimpres/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
(CASE WHEN NTOTS &lt;  0 THEN ABS(ROUND(nimpres/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
--(CASE WHEN NTOTS &gt;=0  THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBE, 
--(CASE WHEN NTOTS &lt; 0   THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABER,
--CGLOSA,
--(CASE WHEN NTOTS &gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS*NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
--(CASE WHEN NTOTS &lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS*NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
--(CASE WHEN NTOTS &gt;=0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00  END)::numeric(15,2) AS NDEBED,
--(CASE WHEN NTOTS &lt; 0  THEN (CASE WHEN CMREG = 'D' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00  END)::numeric(15,2) AS NHABERD,
(' ')::VARCHAR(1) AS CDES,
('   ')::VARCHAR(3) AS CDESTINO,
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO, 
(' ')::VARCHAR(1) AS CREGIS,
(0)::NUMERIC(1,0) AS NCOMP ,
CCODDOC, 
CSERIE,
CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN,
FFECHADOC, 			 
CCODRUC, 
CCODENTI, 
FFECHAVEN,
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD,
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD,
(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS  ELSE '         ' END)::VARCHAR(9) AS CCODCOS	,
(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS2 ELSE '         ' END)::VARCHAR(9) AS CCODCOS2,
(CASE WHEN VARPRESUA=1 THEN (CASE WHEN FLAGPRESUT&gt;1 THEN CCODPRESU ELSE '          ' END)  ELSE  '          '  END)::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
(CASE WHEN VARSOLOCOMPRA=1 THEN ' ' ELSE (CASE WHEN FLAGANALT=2 THEN (CASE WHEN CCOND='CON' THEN VARMES ELSE ' ' END) ELSE  ' ' END)  END)::VARCHAR(2)  AS CMESC,
(CASE WHEN FLAGANALT=2 THEN cmreg ELSE '' END)::VARCHAR(1) AS CMREG,  
(' ')::VARCHAR(4) AS CCODOCON,
(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
CAST(NULL AS DATE) AS FFECHADIF,
NRESP,
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds,
('C')::VARCHAR(1) AS CREGISRE, 
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(1,0) as nporre, 
FFECRE, 				
(' ')::VARCHAR(6)  AS CSERRE, 			
(' ')::VARCHAR(13) AS CNUMRE, 			
CNUMDERE,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntc ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(10,6) AS NTCRE,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN nbaseres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS NBASERES,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ROUND(nbaseres/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nbasered,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN nimpres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpres,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpred,
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
(' ')::VARCHAR(2) AS crefdoc, 
CAST(NULL AS DATE) AS freffec,
(' ')::VARCHAR(10) AS crefser, 
(' ')::VARCHAR(13) AS crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta, 
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta, 
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
FFECHADOC as ffec_dc, 
CCODDOC::VARCHAR(2) AS cdoc_dc, 
CSERIE::VARCHAR(20) AS cser_dc, 
CNUMERO::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(20) AS ccodisc,
00.00 AS nporisc,  		
(' ')::VARCHAR(1) AS CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd, 
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
('1')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
CMREG AS CMONEDA,
VARLREGCONT as ccodsu,
ffechadoc as ffecasi,
2 AS newidlin ,
(0.00)::NUMERIC(5,2) AS nigv
FROM 
(SELECT R.*, P.NANACUE AS FLAGANALCOB, P.nafecos AS FLAGCCOSCOB, P.nafepre AS FLAGPRESUCOB, 
ROW_NUMBER () OVER (ORDER BY CCODRUC, CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB, prop.cregperc 
  FROM cf_regcom_integra R 
   
  INNER JOIN CF_PLAN  P ON R.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER 
  INNER JOIN cg_emppro prop ON P.CPER = prop.CPER 			  
  WHERE ccond = 'CON' and NRESP = 2 AND NTOTS&lt;&gt;0) C
-- KMM - 08-09-2023 - cpe-3675

UNION all

SELECT  VARPER AS CPER, 
VARMES AS CMES, 
VARORICOB AS CCODORI,
NASIENTOCOB + varmaxCOB AS NASIENTO , 
3 AS nidlin , 
NTC, 
CCTATOT AS CCODCUE, 

(CASE WHEN NTOTS &gt;=0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBE,
(CASE WHEN NTOTS &lt; 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABER,
 CGLOSA,
(CASE WHEN NTOTS &gt;= 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBES,
(CASE WHEN NTOTS &lt;  0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
(CASE WHEN NTOTS &gt;= 0 THEN ABS(ROUND(NTOTS/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
(CASE WHEN NTOTS &lt;  0 THEN ABS(ROUND(NTOTS/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
--(CASE WHEN NTOTS &gt;=0  THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBE, 
--(CASE WHEN NTOTS &lt; 0   THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABER,
--CGLOSA,
--(CASE WHEN NTOTS &gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS*NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
--(CASE WHEN NTOTS &lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS*NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
--(CASE WHEN NTOTS &gt;=0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00  END)::numeric(15,2) AS NDEBED,
--(CASE WHEN NTOTS &lt; 0  THEN (CASE WHEN CMREG = 'D' THEN ABS(NTOTS) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00  END)::numeric(15,2) AS NHABERD,
(' ')::VARCHAR(1) AS CDES,
('   ')::VARCHAR(3) AS CDESTINO,
(0)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO, 
(' ')::VARCHAR(1) AS CREGIS,
(0)::NUMERIC(1,0) AS NCOMP ,
CCODDOC, 
CSERIE,
CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN,
FFECHADOC, 			 
CCODRUC, 
CCODENTI, 
FFECHAVEN,
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD,
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD,
(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS  ELSE '         ' END)::VARCHAR(9) AS CCODCOS	,
(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS2 ELSE '         ' END)::VARCHAR(9) AS CCODCOS2,
(CASE WHEN VARPRESUA=1 THEN (CASE WHEN FLAGPRESUT&gt;1 THEN CCODPRESU ELSE '          ' END)  ELSE  '          '  END)::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
(CASE WHEN VARSOLOCOMPRA=1 THEN ' ' ELSE (CASE WHEN FLAGANALT=2 THEN (CASE WHEN CCOND='CON' THEN VARMES ELSE ' ' END) ELSE  ' ' END)  END)::VARCHAR(2)  AS CMESC,
(CASE WHEN FLAGANALT=2 THEN cmreg ELSE '' END)::VARCHAR(1) AS CMREG,  
(' ')::VARCHAR(4) AS CCODOCON,
(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
CAST(NULL AS DATE) AS FFECHADIF,
NRESP,
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds,
('C')::VARCHAR(1) AS CREGISRE, 
--(0.00)::NUMERIC(1,0) AS nperdenre, 
case when nperdenre = 2  then 0 else nperdenre end, -- KMM - 08-05-2023 - cpe-3675
nporre, 
--FFECRE, 	

---- KMM - 08-05-2023 - cpe-3675			
(CASE WHEN nresp = 2 
THEN (CASE WHEN NPERDENRE = 1 THEN FFECHADOC ELSE FFECRE END)
ELSE FFECRE END) FFECRE, 

--(' ')::VARCHAR(6)  AS CSERRE, 
(CASE WHEN NRESP = 2
THEN (CASE WHEN NPERDENRE = 1 THEN RIGHT(CSERIE,6) ELSE CSERRE END)
ELSE CSERRE END)  AS CSERRE, 

--(' ')::VARCHAR(13) AS CNUMRE, 
(CASE WHEN NRESP = 2
THEN (CASE WHEN NPERDENRE = 1 THEN RIGHT(CNUMERO,13) ELSE CNUMRE END)
ELSE CNUMRE END ) AS CNUMRE,
---- KMM - 08-05-2023 - cpe-3675	

CNUMDERE,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntc ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(10,6) AS NTCRE,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN nbaseres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS NBASERES,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ROUND(nbaseres/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nbasered,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN nimpres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpres,
(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpred,
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
(' ')::VARCHAR(2) AS crefdoc, 
CAST(NULL AS DATE) AS freffec,
(' ')::VARCHAR(10) AS crefser, 
(' ')::VARCHAR(13) AS crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta, 
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta, 
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
FFECHADOC as ffec_dc, 
CCODDOC::VARCHAR(2) AS cdoc_dc, 
CSERIE::VARCHAR(20) AS cser_dc, 
CNUMERO::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(20) AS ccodisc,
00.00 AS nporisc,  		
(' ')::VARCHAR(1) AS CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd, 
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
('1')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
CMREG AS CMONEDA,
VARLREGCONT as ccodsu,
ffechadoc as ffecasi,
3 AS newidlin ,
(0.00)::NUMERIC(5,2) AS nigv
FROM 
(SELECT R.*, P.NANACUE AS FLAGANALCOB, P.nafecos AS FLAGCCOSCOB, P.nafepre AS FLAGPRESUCOB, 
ROW_NUMBER () OVER (ORDER BY CCODRUC, CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB 
  FROM cf_regcom_integra R INNER JOIN CF_PLAN  P ON R.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER 
  WHERE ccond = 'CON' AND NTOTS&lt;&gt;0) C
  
);
END;

-- *************************************************************************************************
--- KMM - 09-05-2023 - cpe-3675 - AJUSTE DIFERENCIA DE CAMBIO Y DESTINO DE FDIFERENCIA DE CAMBIO 
-- *************************************************************************************************
INSERT INTO tmpregcv3(
SELECT  CPER, 
CMES, 
CCODORI, 
NASIENTO, 
nidlin ,   
0 as NTC, 
CASE WHEN DIF1S + DIF1D &lt; 0 THEN vardifp ELSE vardifG END AS CCODCUE, 
0::numeric(13,2) AS NDEBE,
0::numeric(13,2) AS NHABER,
'AJUSTE POR DIFERENCIA DE CAMBIO' AS CGLOSA, 
(CASE WHEN DIF1S&lt;0 THEN ABS(DIF1S) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
(CASE WHEN DIF1S&gt;0 THEN ABS(DIF1S) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
(CASE WHEN DIF1D&lt;0 THEN ABS(DIF1D) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
(CASE WHEN DIF1D&gt;0 THEN ABS(DIF1D) ELSE 0.00 END)::numeric(13,2) AS NHABERD,
(' ')::VARCHAR(1) AS CDES,
(' ')::VARCHAR(3) AS CDESTINO,
(1)::NUMERIC(1,0) AS NDIFAUTO, 
(0)::NUMERIC(1,0) AS NAJUSAUTO,
(' ')::VARCHAR(1) AS CREGIS, 
0 AS NCOMP,
'' AS CCODDOC, 
'' AS CSERIE, 
'' AS CNUMERO, 
(' ')::VARCHAR(20) AS CNUMFIN, 
CAST(NULL AS DATE) AS FFECHADOC, 
'' AS CCODRUC, 
'' AS CCODENTI, 
CAST(NULL AS DATE) AS FFECHAVEN, 
(0.00)::NUMERIC(13,2) AS NBASE1, 
(0.00)::NUMERIC(13,2) AS NIGV1, 
(0.00)::NUMERIC(13,2) AS NBASE2, 
(0.00)::NUMERIC(13,2) AS NIGV2, 
(0.00)::NUMERIC(13,2) AS NBASE3, 
(0.00)::NUMERIC(13,2) AS NIGV3, 
(0.00)::NUMERIC(13,2) AS NINA, 
(0.00)::NUMERIC(13,2) AS NEXO, 
(0.00)::NUMERIC(13,2) AS NISC, 
(0.00)::NUMERIC(13,2) AS NIVABASE, 
(0.00)::NUMERIC(13,2) AS NIVAIMP, 
(0.00)::NUMERIC(13,2) AS NTOT, 
(0.00)::NUMERIC(13,2) AS NBASE1S, 
(0.00)::NUMERIC(13,2) AS NIGV1S, 
(0.00)::NUMERIC(13,2) AS NBASE2S, 
(0.00)::NUMERIC(13,2) AS NIGV2S, 
(0.00)::NUMERIC(13,2) AS NBASE3S, 
(0.00)::NUMERIC(13,2) AS NIGV3S, 
(0.00)::NUMERIC(13,2) AS NINAS, 
(0.00)::NUMERIC(13,2) AS NEXOS, 
(0.00)::NUMERIC(13,2) AS NISCS, 
(0.00)::NUMERIC(13,2) AS NIVABASES, 
(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
(0.00)::NUMERIC(13,2) AS NTOTS, 
(0.00)::NUMERIC(13,2) AS NBASE1D, 
(0.00)::NUMERIC(13,2) AS NIGV1D, 
(0.00)::NUMERIC(13,2) AS NBASE2D, 
(0.00)::NUMERIC(13,2) AS NIGV2D, 
(0.00)::NUMERIC(13,2) AS NBASE3D, 
(0.00)::NUMERIC(13,2) AS NIGV3D, 
(0.00)::NUMERIC(13,2) AS NINAD, 
(0.00)::NUMERIC(13,2) AS NEXOD, 
(0.00)::NUMERIC(13,2) AS NISCD, 
(0.00)::NUMERIC(13,2) AS NIVABASED, 
(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
(0.00)::NUMERIC(13,2) AS NTOTD, 
' '::VARCHAR(4) AS CCODFLU,
'' ::VARCHAR(3) AS CCODPAGO,
''::VARCHAR(9) AS CCODCOS,
''::VARCHAR(9) AS CCODCOS2,
''::VARCHAR(10) AS CCODPRESU,
(' ')::VARCHAR(4) AS CCODCAM, 
(' ')::VARCHAR(4) AS CCODCAM2, 
(' ')::VARCHAR(2) AS ccodecpntribcol, 
(' ')::VARCHAR(2) AS ccodecpnniifcol, 
(' ')::VARCHAR(80) AS CGLOSA2,
''::VARCHAR(2) AS CMESC,
''::VARCHAR(2) AS CMREG,
(' ')::VARCHAR(4) AS CCODOCON, 
(0.00)::NUMERIC(1,0) AS NDIFERIDO,
CAST(NULL AS DATE) AS FFECHADIF, 
(0.00)::NUMERIC(1,0) AS NRESP, 
(' ')::VARCHAR(2) AS ccodpps, 
(' ')::VARCHAR(5) AS ccodpds, 
(' ')::VARCHAR(1) AS CREGISRE,
(0.00)::NUMERIC(1,0) AS nperdenre, 
(0.00)::NUMERIC(5,2) AS nporre, 
CAST(NULL AS DATE) AS FFECRE, 
(' ')::VARCHAR(6)  AS CSERRE, 
(' ')::VARCHAR(13) AS CNUMRE, 
(' ')::VARCHAR(15) AS CNUMDERE,
(0.00)::NUMERIC(10,6) AS ntcre, 
(0.00)::NUMERIC(15,2) AS nbaseres, 
(0.00)::NUMERIC(15,2) AS nbasered, 
(0.00)::NUMERIC(15,2) AS nimpres, 
(0.00)::NUMERIC(15,2) AS nimpred, 
(' ')::VARCHAR(8) AS cpdbdetcod, 
(' ')::VARCHAR(2) AS ccodretran, 
(' ')::VARCHAR(2) AS ccodtopdet, 
(0)::NUMERIC(1,0) AS npagdetra, 
(' ')::VARCHAR(20) AS cdocnodom, 
(' ')::VARCHAR(2) AS crefdoc, 
CAST(NULL AS DATE) AS freffec, 
(' ')::VARCHAR(10) AS crefser, 
(' ')::VARCHAR(13) AS crefnum, 
(' ')::VARCHAR(3) AS ccoddas, 
(' ')::VARCHAR(4) AS cyeardas, 
(' ')::VARCHAR(6) AS ccorrdas, 
CAST(NULL AS DATE) AS ffembdas, 
CAST(NULL AS DATE) AS ffregdas, 
(0.00)::NUMERIC(15,2)  AS nfobdas, 
(0.00)::NUMERIC(15,2)  AS nfobdad, 
(0.00)::NUMERIC(6,0)  AS nlecorre, 
('1')::VARCHAR(1) AS clecvesta,
VARMES AS clecvmes, 
VARPER  AS clecvper, 
('1')::VARCHAR(1) AS cledmcesta,
VARMES as cledmcmes, 
VARPER as cledmcper, 
(0.00)::NUMERIC(6,0) AS nlecorrere, 
(0.00)::NUMERIC(1,0) as nautamo, 
CAST(NULL AS DATE) as ffec_dc, 
(' ')::VARCHAR(2) AS cdoc_dc, 
(' ')::VARCHAR(20) AS cser_dc, 
(' ')::VARCHAR(20) AS cnum_dc, 
(' ')::VARCHAR(5) AS ccodisc, 
00.00 AS nporisc, 
(' ')::VARCHAR(1) AS CCODCLAS, 
(' ')::VARCHAR(2) AS ccodtipren, 
(' ')::VARCHAR(2) AS cdoc_nd, 
(' ')::VARCHAR(20) AS cser_nd, 
(' ')::VARCHAR(20) AS cnum_nd,
(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
(0.00)::NUMERIC(15,2) AS nrennet_nd, 
(0.00)::NUMERIC(15,2) AS nimpret_nd, 
(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
(0.00)::NUMERIC(15,2) AS ntasret_nd, 
(' ')::VARCHAR(3)  AS ccodmon, 
(0.00)::NUMERIC(5,3) AS ntc_nd, 
(0.00)::NUMERIC(1,0) AS nintext,
CMONEDA,
VARLREG as ccodsu,
ffecasi,
(0)::numeric(6,0) AS NEWIDLIN,
(0.00)::NUMERIC(15,2) AS nicbper,
(0.00)::NUMERIC(15,2) AS nicbpers,
(0.00)::NUMERIC(15,2) AS nicbperd,
(0.00)::NUMERIC(5,2) AS nigv 
FROM (SELECT 	CPER, CMES, CCODORI,NASIENTO,CMONEDA,ffecasi, MAX(NIDLIN)+1  AS NIDLIN,
SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, SUM(NDEBED-NHABERD) AS DIF1D
FROM tmpregcv3  
GROUP BY CPER, CMES, CCODORI,NASIENTO,CMONEDA,ffecasi 
HAVING SUM(NDEBE-NHABER) = 0 and (SUM(NDEBES-NHABERS) &lt;&gt; 0 OR SUM(NDEBED-NHABERD) &lt;&gt; 0)) AS Y
);

/**** AQUI LA NUMERACION *** NIDLIN ***/
insert into tmpregcv33 (
select cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes,cdestino,ndifauto,najusauto,cregis,ncomp,ccoddoc,cserie,
cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,nbase1,nigv1,nbase2,nigv2,nbase3,nigv3,nina,nexo,nisc,nivabase,nivaimp,ntot,nbase1s,nigv1s,nbase2s,nigv2s,nbase3s,
nigv3s,ninas,nexos,niscs,nivabases,nivaimps,ntots,nbase1d,nigv1d,nbase2d,nigv2d,nbase3d,nigv3d,ninad,nexod,niscd,nivabased,nivaimpd,ntotd,ccodflu,ccodpago,ccodcos,
ccodcos2,ccodpresu,ccodcam,ccodcam2,ccodecpntribcol,ccodecpnniifcol,cglosa2,cmesc,cmreg,ccodocon,ndiferido,ffechadif,nresp,ccodpps,ccodpds,cregisre,nperdenre,
nporre,ffecre,cserre,cnumre,cnumdere,ntcre,nbaseres,nbasered,nimpres,nimpred,cpdbdetcod,ccodretran,ccodtopdet,npagdetra,cdocnodom,crefdoc,freffec,crefser,crefnum,
ccoddas,cyeardas,ccorrdas,ffembdas,ffregdas,nfobdas,nfobdad,nlecorre,clecvesta,clecvmes,clecvper,cledmcesta,cledmcmes,cledmcper,nlecorrere,nautamo,ffec_dc,cdoc_dc,
cser_dc,cnum_dc,CCODISC,NPORISC,ccodclas,ccodtipren,cdoc_nd,cser_nd,cnum_nd,nrenbru_nd,nrennet_nd,nimpret_nd,ndedcos_nd,ntasret_nd,ccodmon,ntc_nd,nintext,
cmoneda,ccodsu,ffecasi,
row_number() over (PARTITION BY CPER,CMES,CCODORI,NASIENTO ORDER BY NIDLIN) as newidlin,
nicbper,
nicbpers,
nicbperd ,
nigv
from tmpregcv3 ORDER BY CPER,CMES,CCODORI,NASIENTO,NIDLIN
);

---- ASIGNACION DE VARIABLES PARA GENERAR DESTINOS 
VPER 		:= '';
VMES 		:= '';
VCODORI 	:= '';
VASIENTO 	:= 0;
VIDLIN 		:= 0;
VCODCUE 	:= '';
VDESTINO 	:= '';
VCODCOS 	:= '';
NDESTINO 	:= 0;

FOR RW IN ( select dl.cper, dl.cmes, dl.ccodori, dl.nasiento, dl.newidlin as nidlin, dl.ccodcue, dl.cdes, dl.cdestino, dl.ccodcos
from tmpregcv33 dl
inner join (select distinct dl.cper, dl.ccodcue, dl.ccodcos, ccl.cdebcos, ccl.chabcos
from tmpregcv33 dl
inner join cf_plan p 	  on dl.cper = p.cper   and dl.ccodcue = p.ccodcue   and p.ntipcue in (4,5) and p.nnivcue = 3 
inner join cg_costosl ccl on dl.cper = ccl.cper and dl.ccodcos = ccl.ccodcos and ccl.cdebcos &lt;&gt; ''  and ccl.chabcos &lt;&gt; ''   
where 	left(dl.ccodcue,1) &lt;&gt; '7' and dl.ccodcos &lt;&gt; '' 
and dl.cmes = VARMES and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb = '' 
and p.cdeshab = ''
union all
select distinct dl.cper, dl.ccodcue, dl.ccodcos, p.cdesdeb, p.cdeshab
from tmpregcv33 dl
inner join cf_plan p on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
where 	left(dl.ccodcue,1) &lt;&gt; '7' 
and dl.cmes = VARMES and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb &lt;&gt; '' 
and p.cdeshab &lt;&gt; ''
order by cper, ccodcue, ccodcos
) as X
ON dl.cper = X.cper and dl.ccodcue = X.ccodcue and dl.ccodcos = X.ccodcos
WHERE dl.cmes = VARMES and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
order by dl.cper, dl.cmes, dl.ccodori, dl.nasiento, dl.newidlin
) LOOP 
IF VPER = RW.CPER AND VMES = RW.CMES AND VCODORI = RW.CCODORI AND VASIENTO = RW.NASIENTO THEN 
NDESTINO := NDESTINO + 1;
ELSE
NDESTINO := 1;
END IF ;
RW.CDESTINO := lpad (cast(NDESTINO as text), 3, '0');
VPER := RW.CPER;
VMES := RW.CMES;
VCODORI := RW.CCODORI;
VASIENTO := RW.NASIENTO;
UPDATE tmpregcv33 SET cdestino = RW.CDESTINO 
where tmpregcv33.CPER = RW.CPER AND 
      tmpregcv33.CMES = RW.CMES AND 
      tmpregcv33.CCODORI = RW.CCODORI AND 
      tmpregcv33.NASIENTO = RW.NASIENTO AND 
      tmpregcv33.NEWIDLIN = RW.NIDLIN;
END LOOP;

--*****    DESTINOS     *****
VPER := '';
VMES := '';
VCODORI := '';
VASIENTO := 0;
VIDLIN := 0;
VNIDLIN := 0;
VMAXIDLIN := 0;

FOR RW IN 
(
select  dl.cper, dl.cmes, dl.ccodori, dl.nasiento, 0 AS nidlin, dl.ntc, dl.cglosa,  
x.cdebcos as ccodcue,
dl.ndebe, dl.nhaber, dl.ndebes, dl.nhabers, dl.ndebed, dl.nhaberd, 
'S' AS CDES, dl.cdestino, dl.ccodcos, dl.ccodcos2, dl.cglosa2, 0 as nlecorre, -- nlecorre es igual a NIDLIN
dl.cledmcesta, dl.cledmcmes, dl.cledmcper, 'D' AS ctipodh, DL.CMONEDA, dl.ccodsu, dl.ffecasi
from tmpregcv33 dl 
inner join (				-- aqui se tiene la cuenta y destino al debe y haber FINAL. LISTO LOS SELECT CON UNION correcto para los destinos
select distinct dl.cper, dl.ccodcue, dl.ccodcos, ccl.cdebcos, ccl.chabcos
from tmpregcv33 dl 
inner join cf_plan p 		on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
inner join cg_costosl ccl	on dl.cper = ccl.cper and dl.ccodcos = ccl.ccodcos and ccl.cdebcos &lt;&gt; '' and ccl.chabcos &lt;&gt; ''   
  where left(dl.ccodcue,1) &lt;&gt; '7' and dl.ccodcos &lt;&gt; '' 
and dl.cmes   = VARMES 
and dl.cper   = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb = '' 
and p.cdeshab = ''

union all

select distinct dl.cper, dl.ccodcue, dl.ccodcos, p.cdesdeb, p.cdeshab
from tmpregcv33 dl inner join cf_plan p on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
where left(dl.ccodcue,1) &lt;&gt; '7' 
       and dl.cmes = VARMES 
       and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
       and p.cdesdeb &lt;&gt; '' 
       and p.cdeshab &lt;&gt; ''
order by cper, ccodcue, ccodcos
) as X
on dl.cper = x.cper and dl.ccodcue = x.ccodcue and dl.ccodcos = x.ccodcos
where dl.cdestino &lt;&gt;'' and 
      dl.cdes = ''     and 
      dl.cmes = VARMES and 
      dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)

UNION

select  dl.cper, dl.cmes, dl.ccodori, dl.nasiento, 0 AS nidlin, dl.ntc, dl.cglosa,  -- idlin se reasignara en la función
x.chabcos as ccodcue,
CASE WHEN dl.ndebe &lt;&gt; 0.00 THEN 0.00 ELSE dl.nhaber END,
CAse WHEN dl.nhaber &lt;&gt; 0.00 THEN 0.00 ELSE dl.ndebe END,
CASE WHEN dl.ndebes &lt;&gt; 0.00 THEN 0.00 ELSE dl.nhabers END,
CASE WHEN dl.nhabers &lt;&gt; 0.00 THEN 0.00 ELSE dl.ndebes END,
CASE WHEN dl.ndebed &lt;&gt; 0.00 THEN 0.00 ELSE dl.nhaberd END,
CASE WHEN dl.nhaberd &lt;&gt; 0.00 THEN 0.00 ELSE dl.ndebed END, 
'S' AS CDES, dl.cdestino, dl.ccodcos, dl.ccodcos2, dl.cglosa2, 0 as nlecorre, -- 
dl.cledmcesta, dl.cledmcmes, dl.cledmcper, 'H' AS ctipodh, DL.CMONEDA, dl.ccodsu, dl.ffecasi
from tmpregcv33 dl 
inner join (
select distinct dl.cper, dl.ccodcue, dl.ccodcos, ccl.cdebcos, ccl.chabcos
     from tmpregcv33 dl	
inner join cf_plan p      on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
inner join cg_costosl ccl on dl.cper = ccl.cper and dl.ccodcos = ccl.ccodcos and ccl.cdebcos &lt;&gt; '' and ccl.chabcos &lt;&gt; ''   
     where left(dl.ccodcue,1) &lt;&gt; '7' 
and dl.ccodcos &lt;&gt; '' 
and dl.cmes = VARMES 
and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb = '' 
and p.cdeshab = ''
   union all

select distinct dl.cper, dl.ccodcue, dl.ccodcos, p.cdesdeb, p.cdeshab
from tmpregcv33 dl
inner join cf_plan p on dl.cper = p.cper and dl.ccodcue = p.ccodcue and p.ntipcue in (4,5) and p.nnivcue = 3 
      where left(dl.ccodcue,1) &lt;&gt; '7' 
and dl.cmes = VARMES 
and dl.cper = VARPER  -- PMES y PPER (PARAMETROS DE LA FUNCION)
and p.cdesdeb &lt;&gt; '' 
and p.cdeshab &lt;&gt; ''
    order by cper, ccodcue, ccodcos
 ) as X
 on dl.cper = x.cper and dl.ccodcue = x.ccodcue and dl.ccodcos = x.ccodcos 
 where dl.cdestino &lt;&gt;'' and dl.cdes = '' and dl.cmes = VARMES and dl.cper = VARPER  --
 order by cper, cmes, ccodori, nasiento, cdestino, ctipodh 

) LOOP 

IF VPER = RW.CPER AND VMES = RW.CMES AND VCODORI = RW.CCODORI AND VASIENTO = RW.NASIENTO THEN
VIDLIN := VIDLIN + 1;
RW.NIDLIN := VMAXIDLIN + VIDLIN;
ELSE
VMAXIDLIN := (SELECT MAX(CDL.NEWIDLIN) FROM tmpregcv33 CDL WHERE CDL.CPER = RW.CPER AND CDL.CMES = RW.CMES AND CDL.CCODORI = RW.CCODORI AND CDL.NASIENTO = RW.NASIENTO);
VIDLIN := 1;
RW.NIDLIN := VMAXIDLIN + VIDLIN;
END IF;
VPER := RW.CPER;
VMES := RW.CMES;
VCODORI := RW.CCODORI;
VASIENTO := RW.NASIENTO;

--inserta los registros 
insert into tmpregcv33 (cper, cmes, ccodori, nasiento, nidlin, ntc, cglosa, ccodcue, 
ndebe, nhaber, ndebes, nhabers, ndebed, nhaberd, 
cdes, cdestino, ccodcos, ccodcos2, cglosa2, nlecorre, cledmcesta, cledmcmes, cledmcper, CMONEDA, ccodsu, ffecasi, newidlin) 
values (RW.CPER, RW.CMES, RW.CCODORI, RW.NASIENTO, RW.NIDLIN, RW.NTC, RW.CGLOSA, RW.CCODCUE,
RW.NDEBE, RW.NHABER, RW.NDEBES, RW.NHABERS, RW.NDEBED, RW.NHABERD, 
RW.CDES, RW.CDESTINO, RW.CCODCOS, RW.CCODCOS2, RW.CGLOSA2, RW.NLECORRE, RW.CLEDMCESTA, RW.CLEDMCMES, RW.CLEDMCPER, RW.CMONEDA, rw.ccodsu, rw.ffecasi, rw.nidlin);
-- AQUI EMPIEZA LA ASIGNACION A LA TABLA 

END LOOP;
-- ********************************************************************************	
--- KMM - 09-05-2023 - cpe-3675 - FIN de Insertar Asiento Ajuste y destinos 
-- ********************************************************************************

END IF;

-- **********************************************************************
-- -- INSERTANDO AL DIARIO Y AL DIARIOL
-- **********************************************************************

--INSERT INTO TMPREGCV2 (SELECT * FROM TMPREGCV3);

-- KMM - 09-05-2023 - CPE-3675 
INSERT INTO TMPREGCV2 (SELECT * FROM TMPREGCV33);
-- KMM - 09-05-2023 - CPE-3675  

-- INSERTANDO AL DIARIO Y AL DIARIOL

insert into cf_diario(cper,cmes,ccodori,nasiento,ffecasi,cmoneda,ccodusu,tregistro,ccodsu,ntcblo,ccodbas,nidreg,nidlin)
SELECT DISTINCT ON (CPER,CMES,CCODORI,NASIENTO)
CPER,CMES,CCODORI,NASIENTO, 
CASE WHEN FFECASI &lt; TO_DATE(CONCAT(VARPER,VARMES,'01'),'YYYYMMDD') THEN TO_DATE(CONCAT(VARPER,VARMES,'01'),'YYYYMMDD') ELSE ffecasi END AS FFECASI,
CMONEDA,
'ADMIN' AS ccodusu,
current_timestamp as tregistro,
ccodsu,
(0.00)::NUMERIC(1,0)  as ntcblo, 
(' ')::VARCHAR(10) as ccodbas,
(0.00)::NUMERIC(15,0) as nidreg, 
(0.00)::numeric(6,0)  as nidlin 
FROM  TMPREGCV2 ORDER BY CPER,CMES,CCODORI,NASIENTO;

--resultado_prueba
INSERT INTO cf_diariol(cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,
nhaberd,cdes,cdestino,ndifauto,najusauto,cregis,ncomp,ccoddoc,cserie,cnumero,cnumfin,
ffechadoc,ccodruc,ccodenti,ffechaven,nbase1,nigv1,nbase2,nigv2,nbase3,nigv3,nina,nexo,
nisc,nivabase,nivaimp,ntot,nbase1s,nigv1s,nbase2s,nigv2s,nbase3s,nigv3s,ninas,nexos,
niscs,nivabases,nivaimps,ntots,nbase1d,nigv1d,nbase2d,nigv2d,nbase3d,nigv3d,ninad,nexod,
niscd,nivabased,nivaimpd,ntotd,ccodclas,ccodflu,ccodpago,ccodcos,ccodcos2,ccodpresu,ccodcam,
ccodcam2,ccodecpntribcol,ccodecpnniifcol,cglosa2,cmesc,cmreg,ccodocon,ndiferido,ffechadif,
nresp,ccodpps,ccodpds,cregisre,nperdenre,nporre,ffecre,cserre,cnumre,cnumdere,ntcre,nbaseres,
nbasered,nimpres,nimpred,cpdbdetcod,ccodretran,ccodtopdet,npagdetra,cdocnodom,ccodtipren,
crefdoc,freffec,crefser,crefnum,ccoddas,cyeardas,ccorrdas,ffembdas,ffregdas,nfobdas,nfobdad,
nlecorre,clecvesta,clecvmes,clecvper,cledmcesta,cledmcmes,cledmcper,nlecorrere,nautamo,ffec_dc,
cdoc_dc,cser_dc,cnum_dc,cdoc_nd,cser_nd,cnum_nd,nrenbru_nd,nrennet_nd,nimpret_nd,ndedcos_nd,
ntasret_nd,ccodmon,ntc_nd,nintext, nicbper, nicbpers, nicbperd,npigv
  ) 
  
SELECT  cper,cmes,ccodori,nasiento,
newidlin as nidlin,
ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,
nhaberd,cdes,cdestino,ndifauto,najusauto,cregis,ncomp,ccoddoc,cserie,cnumero,cnumfin,
ffechadoc,ccodruc,ccodenti,ffechaven,nbase1,nigv1,nbase2,nigv2,nbase3,nigv3,nina,nexo,
nisc,nivabase,nivaimp,ntot,nbase1s,nigv1s,nbase2s,nigv2s,nbase3s,nigv3s,ninas,nexos,
niscs,nivabases,nivaimps,ntots,nbase1d,nigv1d,nbase2d,nigv2d,nbase3d,nigv3d,ninad,nexod,
niscd,nivabased,nivaimpd,ntotd,ccodclas,ccodflu,ccodpago,ccodcos,ccodcos2,ccodpresu,ccodcam,
ccodcam2,ccodecpntribcol,ccodecpnniifcol,cglosa2,cmesc,cmreg,ccodocon,ndiferido,ffechadif,
nresp,ccodpps,ccodpds,cregisre,nperdenre,nporre,ffecre,cserre,cnumre,cnumdere,ntcre,nbaseres,
nbasered,nimpres,nimpred,cpdbdetcod,ccodretran,ccodtopdet,npagdetra,cdocnodom,ccodtipren,
crefdoc,freffec,crefser,crefnum,ccoddas,cyeardas,ccorrdas,ffembdas,ffregdas,nfobdas,nfobdad,
nlecorre,clecvesta,clecvmes,clecvper,cledmcesta,cledmcmes,cledmcper,nlecorrere,nautamo,ffec_dc,
cdoc_dc,cser_dc,cnum_dc,cdoc_nd,cser_nd,cnum_nd,nrenbru_nd,nrennet_nd,nimpret_nd,ndedcos_nd,
ntasret_nd,ccodmon,ntc_nd,nintext, nicbper, nicbpers, nicbperd,nigv
FROM TMPREGCV2 ORDER BY CPER,CMES,CCODORI,NASIENTO,NewIDLIN;


return 1;
END; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION fin_registro_compras_integracion_estandar(character, character, character, character, integer, integer, integer, integer, integer, character, character, character, character, character, character, character, character, character, character, character, integer, character)
  OWNER TO postgres;</value>
  </data>
  <data name="txtasientoventas2.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION public.fin_registro_ventas_integracion_estandar(
    varper character,
    varmes character,
    varori character,
    varccodflu character,
    varpresua integer,
    varpresui integer,
    varpresur integer,
    varsoloventa integer,
    varigv character,
    varlreg character,
    vardifp character,
    vardifpd character,
    vardifph character,
    vardifg character,
    varmax integer,
    varoricob character,
    varlregcont character,
    varresumir integer,
    varmaxcob integer,
    varisc character)
  RETURNS integer AS
$BODY$
			DECLARE  
			RW RECORD;
			OTYC numeric(13,2);
			CONTADOR  numeric(13,2);
			MAXASIENTO   NUMERIC(6,0);
			VPER CHARACTER(4);
			VMES CHARACTER(2);
			VCODORI CHARACTER(3);
			VASIENTO INTEGER;
			VIDLIN INTEGER;
			VNIDLIN INTEGER;
			VMAXIDLIN INTEGER;
			VCODCUE CHARACTER(20);
			VDES CHARACTER(1);
			VDESTINO CHARACTER(3);
			VCODCOS CHARACTER(9);
			NDESTINO INTEGER;


			BEGIN
			DROP TABLE IF EXISTS RESDIF;
			CREATE TEMPORARY TABLE RESDIF(
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			   nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  CCTADIFD  character(20) NOT NULL DEFAULT ''::bpchar, 
			  CCTADIFS character(20) NOT NULL DEFAULT ''::bpchar,
			  DIF1  numeric(15,2) NOT NULL DEFAULT 0, 
			  DIF1S  numeric(15,2) NOT NULL DEFAULT 0, 
			  DIF1D numeric(15,2) NOT NULL DEFAULT 0, 
			  ffechadoc date,
			  ffechaven date,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  cdesenti character(100) NOT NULL DEFAULT ''::bpchar,
			  ctipdoc character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  crazsoc character(150) NOT NULL DEFAULT ''::bpchar,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  freffec date,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ndolar numeric(15,2) NOT NULL DEFAULT 0,   -- cambiado de 10,6  --&gt; 15,2
			  ffechaven2 date,
			  ccond character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  cctabase character(20) NOT NULL DEFAULT ''::bpchar,
			  cctaotrib character(20) NOT NULL DEFAULT ''::bpchar,
			  cctatot character(20) NOT NULL DEFAULT ''::bpchar,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  ffecre date,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  nigv numeric(5,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  cctaperc character varying(20) NOT NULL DEFAULT ''::character varying,
			  incomp character(5) NOT NULL DEFAULT ''::bpchar,
			  lneg character(5) NOT NULL DEFAULT ''::bpchar,
			  vmespd numeric(15,2) NOT NULL DEFAULT 0,
			  nnetd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpd numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  nntc numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseimp numeric(15,2) NOT NULL DEFAULT 0,
			  nbaseimpd numeric(15,2) NOT NULL DEFAULT 0,
			  nresini character(13) NOT NULL DEFAULT ''::bpchar,
			  nresfin character(13) NOT NULL DEFAULT ''::bpchar,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  errores text NOT NULL DEFAULT ''::text,
			  cctacobra character(20) NOT NULL DEFAULT ''::bpchar,
			  flaganalb numeric(1,0) NOT NULL DEFAULT 0,
			  flaganalo numeric(1,0) NOT NULL DEFAULT 0,
			  flaganalt numeric(1,0) NOT NULL DEFAULT 0,
			  flagccosb numeric(1,0) NOT NULL DEFAULT 0,
			  flagccoso numeric(1,0) NOT NULL DEFAULT 0,
			  flagccost numeric(1,0) NOT NULL DEFAULT 0,
			  flagpresub numeric(1,0) NOT NULL DEFAULT 0,
			  flagpresuo numeric(1,0) NOT NULL DEFAULT 0,
			  flagpresut numeric(1,0) NOT NULL DEFAULT 0,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar		  
			 ) on commit drop;


			DROP TABLE IF EXISTS resultado;	
			create temporary table resultado(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0 ,
			  nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			  cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,		  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0		 
			  ) on commit drop;


			DROP TABLE IF EXISTS tmpregcv;	
			create temporary table tmpregcv(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0 ,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,			  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0		  
			  ) on commit drop;

			DROP TABLE IF EXISTS tmpregcv1;	
			create temporary table tmpregcv1(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,			  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0			
			  ) on commit drop;

			DROP TABLE IF EXISTS tmpregcv2;	
			create temporary table tmpregcv2(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0 ,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,			  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0			  
			  ) on commit drop;

			DROP TABLE IF EXISTS tmpregcv3;	
			create temporary table tmpregcv3(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,			  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0		  
			    ) on commit drop;		  

			  
			-- modificado Anr 19/08/202
			-- modificado GZP  anr 29/12/2020  se regreso a su estado original  

			insert into  TMPREGCV (
			SELECT
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax AS NASIENTO , 
			1 AS nidlin , 
			NTC, 
			CCTATOT AS CCODCUE, --"121202              "
			(CASE WHEN NTOTS&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
			(CASE WHEN NTOTS&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
			 CGLOSA,
			(CASE WHEN NTOTS&gt;=0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBES, 
			(CASE WHEN NTOTS&lt; 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
			(CASE WHEN NTOTS&gt;=0 THEN ABS(ROUND(NTOTS/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED, 
			(CASE WHEN NTOTS&lt; 0 THEN ABS(ROUND(NTOTS/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			('   ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			(' ')::VARCHAR(1) AS CREGIS,
			(CASE WHEN FLAGANALT = 2 THEN 1 ELSE 0 END) AS NCOMP ,
			CCODDOC, 
			CSERIE,
			CNUMERO, 
			CNUMFIN,
			FFECHADOC, 			 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN2,
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD,
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD,
			(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS  ELSE '         ' END)::VARCHAR(9) AS CCODCOS	,
			(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS2 ELSE '         ' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUA=1 THEN (CASE WHEN FLAGPRESUT&gt;1 THEN CCODPRESU ELSE '          ' END)  ELSE  '          '  END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ' ' ELSE (CASE WHEN FLAGANALT=2 THEN (CASE WHEN CCOND='CON' THEN VARMES ELSE ' ' END) ELSE  ' ' END)  END)::VARCHAR(2)  AS CMESC,
			(CASE WHEN FLAGANALT=2 THEN cmreg ELSE '' END)::VARCHAR(1) AS CMREG,  
			(' ')::VARCHAR(4) AS CCODOCON,
			(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
			CAST(NULL AS DATE) AS FFECHADIF,
			(CASE WHEN FLAGANALT = 2 THEN NRESP ELSE 0 END)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds,
			(CASE WHEN NRESP = 3 THEN 'V' ELSE ' ' END)::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(CASE WHEN NRESP = 3 THEN NPORRE ELSE 0 END)::NUMERIC(5,2) AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 				
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntc ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(10,6) AS NTCRE,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntots ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS NBASERES,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN (CASE WHEN cmreg = 'S' THEN ROUND(NTOTS/NTC,2) ELSE NDOLAR END) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nbasered,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN nimpres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpres,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpred,
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			crefdoc, 
			freffec,
			crefser, 
			crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta, 
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta, 
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,
			00.00 AS nporisc,  		
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			('1')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 	
			 FROM 
			(
			select  distinct on (RV.ccoddoc,RV.cserie,RV.cnumero, RV.cnumfin,RV.ctipdoc,RV.ccodruc,RV.cctatot) 
			Y.nasiento,RV.ntc,Y.cctatot,Y.ntots,RV.cmreg,Y.ndolar,RV.cglosa,RV.flaganalt,Y.ccoddoc,Y.cserie,Y.cnumero,Y.cnumfin,RV.ffechadoc,Y.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.ffechaven2,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.NRESP,RV.NPORRE,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento, ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y
			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot
			) as Z

			 
			 UNION 
			 
			SELECT  
			VARPER AS CPER,  
			VARMES AS CMES,  
			VARORI AS CCODORI,  
			nasiEntO + varmax  AS NASIENTO ,  
			2 AS nidlin ,  
			NTC,  
			VARIGV AS CCODCUE,  --'401111'
			(CASE WHEN NIGV1&lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV1) ELSE  ABS(ROUND(NIGV1/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
			(CASE WHEN NIGV1&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV1) ELSE  ABS(ROUND(NIGV1/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
			CGLOSA,
			(CASE WHEN NIGV1&lt;0   THEN ABS(NIGV1) ELSE 0.00 END)::numeric(15,2) AS NDEBES, 
			(CASE WHEN NIGV1&gt;=0 THEN ABS(NIGV1) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
			(CASE WHEN NIGV1&lt;0   THEN ABS(ROUND(NIGV1/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
			(CASE WHEN NIGV1&gt;=0 THEN ABS(ROUND(NIGV1/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,		
			(' ')::VARCHAR(1) AS CDES,  
			('   ')::VARCHAR(3) AS CDESTINO, 
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			('V')::VARCHAR(1) AS CREGIS,		
			(0)::NUMERIC(1,0) AS NCOMP ,  
			CCODDOC,  
			CSERIE,  
			CNUMERO,  
			CNUMFIN,  
			FFECHADOC,  			 
			CCODRUC,  
			CCODENTI,  
			FFECHAVEN,
			(CASE WHEN CMREG = 'S' THEN ABS(NBASE1) ELSE ABS(ROUND(NBASE1/NTC,2)) END)::numeric(13,2) AS NBASE1,
			(CASE WHEN CMREG = 'S' THEN ABS(NIGV1)  ELSE  ABS(ROUND(NIGV1 /NTC,2))   END)::numeric(13,2) AS NIGV1,  
			(CASE WHEN CMREG = 'S' THEN ABS(NBASE2) ELSE ABS(ROUND(NBASE2/NTC,2)) END)::numeric(13,2) AS NBASE2,  
			(0.00)::NUMERIC(13,2) as NIGV2,  
			(CASE WHEN CMREG = 'S' THEN ABS(NBASE3) ELSE ABS(ROUND(NBASE3/NTC,2)) END)::numeric(13,2) AS NBASE3,  
			(0.00)::NUMERIC(13,2) AS NIGV3,  
			(CASE WHEN CMREG = 'S' THEN ABS(NINA)      ELSE ABS(ROUND(NINA/NTC,2))      END)::numeric(13,2) AS NINA,  
			(CASE WHEN CMREG = 'S' THEN ABS(NEXO)     ELSE ABS(ROUND(NEXO/NTC,2))    END)::numeric(13,2) AS NEXO,  
			(CASE WHEN CMREG = 'S' THEN ABS(NISC)      ELSE ABS(ROUND(NISC/NTC,2))      END)::numeric(13,2) AS NISC,  
			(0.00)::NUMERIC(13,2) AS NIVABASE,  
			(0.00)::NUMERIC(13,2) AS NIVAIMP,  
			(CASE WHEN CMREG = 'S' THEN ABS(NTOTS)   ELSE ABS(NDOLAR)   END)::numeric(13,2) AS NTOT,  
			ABS(NBASE1) AS NBASE1S,  
			ABS(NIGV1)  AS NIGV1S,  
			ABS(NBASE2)::numeric(13,2) AS NBASE2S,  
			(0.00)::NUMERIC(13,2) AS NIGV2S,  
			ABS(NBASE3)::numeric(13,2) AS NBASE3S,  
			(0.00)::NUMERIC(13,2) AS NIGV3S,  
			ABS(NINA) AS NINAS,  
			ABS(NEXO) AS NEXOS,  
			ABS(NISC) AS NISCS,  
			(0.00)::NUMERIC(13,2) AS NIVABASES,  
			(0.00)::NUMERIC(13,2) AS NIVAIMPS,  
			ABS(NTOTS) AS NTOTS,  
			ABS(ROUND(NBASE1/NTC,2)) AS NBASE1D,  
			ABS(ROUND(NIGV1/NTC,2))   AS NIGV1D,  
			ABS(ROUND(NBASE2/NTC,2)) AS NBASE2D,  
			(0.00)::NUMERIC(13,2) AS NIGV2D,  
			ABS(ROUND(NBASE3/NTC,2)) AS NBASE3D,  
			(0.00)::NUMERIC(13,2) AS NIGV3D,   
			ABS(ROUND(NINA/NTC,2)) AS NINAD,    
			ABS(ROUND(NEXO/NTC,2)) AS NEXOD,    
			ABS(ROUND(NISC/NTC,2)) AS NISCD,   
			(0.00)::NUMERIC(13,2) AS NIVABASED,   
			(0.00)::NUMERIC(13,2) AS NIVAIMPD,   
			ABS(ROUND(NTOTS/NTC,2)) AS NTOTD,   
			('')::VARCHAR(4) AS CCODFLU,  
			('')::VARCHAR(3) AS CCODPAGO,  
			('')::VARCHAR(9) AS CCODCOS,  
			('')::VARCHAR(9) AS CCODCOS2,  
			('')::VARCHAR(10) AS CCODPRESU,  
			('')::VARCHAR(4) AS CCODCAM,  
			('')::VARCHAR(4) AS CCODCAM2,  
			('')::VARCHAR(2) AS ccodecpntribcol,  
			('')::VARCHAR(2) AS ccodecpnniifcol,  
			('')::VARCHAR(80) AS CGLOSA2,  
			('')::VARCHAR(2) AS CMESC,  
			('')::VARCHAR(1) AS CMREG,  
			('')::VARCHAR(4) AS CCODOCON,  
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,  
			CAST(NULL AS DATE) AS FFECHADIF,  
			NRESP AS NRESP,  
			(' ')::VARCHAR(2) AS ccodpps,  
			(' ')::VARCHAR(5) AS ccodpds, 
			(CASE WHEN NRESP = 3 THEN 'V' ELSE ' ' END)::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(CASE WHEN NRESP = 3 THEN NPORRE ELSE 0 END)::NUMERIC(5,2) AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 	  
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE, 
			NTC::NUMERIC(10,6) AS ntcre,  
			NTOTS::NUMERIC(13,2) AS nbaseres,  
			(CASE WHEN cmreg = 'S' THEN ROUND(NTOTS/NTC,2) ELSE NDOLAR END)::NUMERIC(13,2) AS nbasered,  
			NIMPRES::NUMERIC(13,2) AS nimpres,  
			(CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END)::NUMERIC(13,2) AS nimpred,  
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			crefdoc, 
			freffec, 
			crefser, 
			crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,  
			VARMES AS clecvmes,  
			VARPER  AS clecvper,  
			('1')::VARCHAR(1) AS cledmcesta,   
			VARMES as cledmcmes,  
			VARPER as cledmcper,  
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc,   
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,   
			00.00 AS nporisc,  
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd,  
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			ABS(NICBPERS)::numeric(13,2) AS NICBPERS,	
			('')::VARCHAR(20) AS CCTAICBPER,
			(CASE WHEN CMREG = 'S' THEN ABS(NICBPERS)  ELSE ABS(ROUND(NICBPERS/NTC,2))      END)::numeric(13,2) AS NICBPER,  
			ABS(ROUND(NICBPERS/NTC,2))::numeric(13,2) AS NICBPERD,
			nigv 
			FROM 
			(
			select  distinct on (RV.ccoddoc,RV.cserie,RV.cnumero,RV.cnumfin,RV.ctipdoc,RV.ccodruc,RV.cctatot) 
			Y.nasiento,RV.ntc,Y.cctatot,Y.ntots,Y.nigv1,Y.nbase1,Y.nbase2,Y.nigv2,Y.nbase3,Y.nigv3,Y.nina,Y.nexo,Y.nisc,
			RV.cmreg,Y.ndolar,RV.cglosa,RV.flaganalt,Y.ccoddoc,Y.cserie,Y.cnumero,Y.cnumfin,RV.ffechadoc,Y.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.NRESP,
			RV.NPORRE,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nicbpers,RV.nigv
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
			from cf_regven_integra
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y

			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot
			) as Z


			UNION ALL
			SELECT 
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO , 
			3 AS nidlin ,  
			NTC, 
			CCTABASE AS CCODCUE, --"70111               "
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE1+NBASE2+nina+nexo) ELSE ABS(ROUND((NBASE1+NBASE2+nina+nexo)/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) as NDEBE,
			(CASE WHEN (NBASE1+NBASE2+nina+nexo)&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE1+NBASE2+nina+nexo) ELSE ABS(ROUND((NBASE1+NBASE2+nina+nexo)/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) as NHABER,
			CGLOSA, 
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &lt;0   THEN ABS(NBASE1+NBASE2+nina+nexo) ELSE 0.00 END )::NUMERIC(13,2) AS NDEBES,
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &gt;=0 THEN ABS(NBASE1+NBASE2+nina+nexo) ELSE 0.00 END )::NUMERIC(13,2) AS NHABERS,
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &lt;0   THEN ABS(ROUND((NBASE1+NBASE2+nina+nexo)/NTC,2)) ELSE 0.00 END )::NUMERIC(13,2) AS NDEBED,
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &gt;=0 THEN ABS(ROUND((NBASE1+NBASE2+nina+nexo)/NTC,2)) ELSE 0.00 END )::NUMERIC(13,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(' ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO,
			(' ')::VARCHAR(1) AS CREGIS, 
			--(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
			(CASE WHEN FLAGANALB = 2 THEN 1 ELSE 0 END) AS NCOMP ,  --- KMM - 03-02-2025 - pdi-228
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN,
			FFECHADOC, 	 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN2, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD, 
			(CASE WHEN FLAGANALB=3 OR FLAGANALB = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALB=3 OR FLAGANALB = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ''  ELSE (CASE WHEN FLAGANALB   =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' 'END) END)::VARCHAR(2) AS CMESC,
			(CASE WHEN FLAGANALB = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE,
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre, 
			(0.00)::NUMERIC(15,2) AS nbaseres, 
			(0.00)::NUMERIC(15,2) AS nbasered, 
			(0.00)::NUMERIC(15,2) AS nimpres, 
			(0.00)::NUMERIC(15,2) AS nimpred, 
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			crefdoc, 
			freffec, 
			crefser, 
			crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta,
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(5) AS ccodisc, 
			00.00 AS nporisc, 
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd,
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 
			FROM 
			(
			select  Y.nasiento,RV.ntc,RV.cctabase,RV.cctatot,RV.ntots,RV.nigv1,RV.nbase1,RV.nbase2,RV.nigv2,RV.nbase3,RV.nigv3,RV.nina,RV.nexo,RV.nisc,
			RV.cmreg,RV.ndolar,RV.cglosa,RV.flaganalt,RV.flaganalb,RV.flaganalo,RV.FLAGCCOSB,RV.flagccoso,RV.FLAGPRESUB,RV.ccoddoc,RV.cserie,RV.cnumero,RV.cnumfin,RV.ffechadoc,RV.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.ffechaven2,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y
			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot 
			) AS Z


			UNION ALL

			SELECT   
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			4 AS nidlin ,   
			NTC, 
			CCTAOTRIB AS CCODCUE, --' vacio '
			(CASE WHEN NBASE3&lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE3) ELSE ABS(ROUND(NBASE3/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
			(CASE WHEN NBASE3&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE3) ELSE ABS(ROUND(NBASE3/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN NBASE3&lt;0  THEN ABS(NBASE3) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
			(CASE WHEN NBASE3&gt;=0 THEN ABS(NBASE3) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
			(CASE WHEN NBASE3&lt;0  THEN ABS(ROUND(NBASE3/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
			(CASE WHEN NBASE3&gt;=0 THEN ABS(ROUND(NBASE3/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(' ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO,
			(' ')::VARCHAR(1) AS CREGIS, 
			(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN, 
			FFECHADOC, 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD, 
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUO&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ''  ELSE (CASE WHEN FLAGANALO =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' ' END)  END)::VARCHAR(2) AS CMESC,
			(CASE WHEN FLAGANALO = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE,
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre, 
			(0.00)::NUMERIC(15,2) AS nbaseres, 
			(0.00)::NUMERIC(15,2) AS nbasered, 
			(0.00)::NUMERIC(15,2) AS nimpres, 
			(0.00)::NUMERIC(15,2) AS nimpred, 
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta,
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(5) AS ccodisc, 
			00.00 AS nporisc, 
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd,
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 	
			FROM 
			(
			select  Y.nasiento,RV.ntc,RV.cctabase,RV.cctatot,RV.CCTAOTRIB,RV.ntots,RV.nigv1,RV.nbase1,RV.nbase2,RV.nigv2,RV.nbase3,RV.nigv3,RV.nina,RV.nexo,RV.nisc,
			RV.cmreg,RV.ndolar,RV.cglosa,RV.flaganalt,RV.flaganalb,RV.flaganalo,RV.FLAGCCOSB,RV.flagccoso,RV.FLAGPRESUB,RV.FLAGPRESUO,RV.ccoddoc,RV.cserie,RV.cnumero,RV.cnumfin,RV.ffechadoc,RV.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y

			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot 
			WHERE Y.NBASE3 &lt;&gt; 0
			) AS Z

			/** cf_regven_integra	WHERE NBASE3 &lt;&gt; 0 **/

			UNION ALL

			SELECT   
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			5 AS nidlin ,   
			NTC, 
			cctaicbper AS CCODCUE, --- 'vacio'
			(CASE WHEN nicbpers&lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(nicbpers) ELSE ABS(ROUND(nicbpers/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
			(CASE WHEN nicbpers&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(nicbpers) ELSE ABS(ROUND(nicbpers/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN nicbpers&lt;0  THEN ABS(nicbpers) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
			(CASE WHEN nicbpers&gt;=0 THEN ABS(nicbpers) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
			(CASE WHEN nicbpers&lt;0  THEN ABS(ROUND(nicbpers/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
			(CASE WHEN nicbpers&gt;=0 THEN ABS(ROUND(nicbpers/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(' ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO,
			(' ')::VARCHAR(1) AS CREGIS, 
			(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN, 
			FFECHADOC, 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD, 
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUO&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ''  ELSE (CASE WHEN FLAGANALO =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' ' END)  END)::VARCHAR(2) AS CMESC,
			(CASE WHEN FLAGANALO = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE,
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre, 
			(0.00)::NUMERIC(15,2) AS nbaseres, 
			(0.00)::NUMERIC(15,2) AS nbasered, 
			(0.00)::NUMERIC(15,2) AS nimpres, 
			(0.00)::NUMERIC(15,2) AS nimpred, 
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta,
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(5) AS ccodisc, 
			00.00 AS nporisc, 
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd,
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 		
			FROM 
			(
			select  Y.nasiento,RV.ntc,RV.cctabase,RV.cctatot,RV.CCTAOTRIB,RV.ntots,RV.nigv1,RV.nbase1,RV.nbase2,RV.nigv2,RV.nbase3,RV.nigv3,RV.nina,RV.nexo,RV.nisc,
			RV.cmreg,RV.ndolar,RV.cglosa,RV.flaganalt,RV.flaganalb,RV.flaganalo,RV.FLAGCCOSB,RV.flagccoso,RV.FLAGPRESUB,RV.FLAGPRESUO,RV.ccoddoc,RV.cserie,RV.cnumero,RV.cnumfin,RV.ffechadoc,RV.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nicbpers,RV.cctaicbper,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar, sum(nicbpers) as nicbpers
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y
			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot 
			WHERE Y.NICBPERS &lt;&gt; 0) AS Z

			UNION ALL

			/* INICIO ISC*/
			SELECT   
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			5 AS nidlin ,   
			NTC, 
			varisc AS CCODCUE, --- 'vacio'
			(CASE WHEN nisc&lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(nisc) ELSE ABS(ROUND(nisc/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
			(CASE WHEN nisc&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(nisc) ELSE ABS(ROUND(nisc/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN nisc&lt;0  THEN ABS(nisc) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
			(CASE WHEN nisc&gt;=0 THEN ABS(nisc) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
			(CASE WHEN nisc&lt;0  THEN ABS(ROUND(nisc/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
			(CASE WHEN nisc&gt;=0 THEN ABS(ROUND(nisc/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(' ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO,
			(' ')::VARCHAR(1) AS CREGIS, 
			(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN, 
			FFECHADOC, 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD, 
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUO&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ''  ELSE (CASE WHEN FLAGANALO =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' ' END)  END)::VARCHAR(2) AS CMESC,
			(CASE WHEN FLAGANALO = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE,
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre, 
			(0.00)::NUMERIC(15,2) AS nbaseres, 
			(0.00)::NUMERIC(15,2) AS nbasered, 
			(0.00)::NUMERIC(15,2) AS nimpres, 
			(0.00)::NUMERIC(15,2) AS nimpred, 
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta,
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(5) AS ccodisc, 
			00.00 AS nporisc, 
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd,
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 		
			FROM 
			(
			select  Y.nasiento,RV.ntc,RV.cctabase,RV.cctatot,RV.CCTAOTRIB,RV.ntots,RV.nigv1,RV.nbase1,RV.nbase2,RV.nigv2,RV.nbase3,RV.nigv3,RV.nina,RV.nexo,RV.nisc,
			RV.cmreg,RV.ndolar,RV.cglosa,RV.flaganalt,RV.flaganalb,RV.flaganalo,RV.FLAGCCOSB,RV.flagccoso,RV.FLAGPRESUB,RV.FLAGPRESUO,RV.ccoddoc,RV.cserie,RV.cnumero,
			RV.cnumfin,RV.ffechadoc,RV.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,
			RV.crefnum,RV.nicbpers,RV.cctaicbper,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar, sum(nicbpers) as nicbpers
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y
			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot 
			WHERE Y.NISC &lt;&gt; 0) AS Z

			/*FIN DE ISC */  


			order by cper, cmes, ccodori, nasiento, nidlin
			) ;  ----fin del insert



			RAISE NOTICE 'PROCESO RESDIF';

			INSERT INTO RESDIF( 

			SELECT  T.CCODORI, 
			T.NIDLIN, 
			(case when R.CMREG = 'S' then (case when T.DIF1D&gt;0 then VARDIFG else  VARDIFP end) else ' ' end)::varchar(20) as CCTADIFD, 
			(case when R.CMREG = 'D' then (case when T.DIF1S&gt;0 then VARDIFG else  VARDIFP end) else ' ' end)::varchar(20) as CCTADIFS, 
			T.DIF1, 
			T.DIF1S, 
			T.DIF1D, 
			R.*
			FROM (select distinct on (ccoddoc, cserie, cnumero) ffechadoc, ffechaven, ccoddoc, cserie, cnumero, ccodenti, cdesenti, 
			       ctipdoc, ccodruc, crazsoc, nbase2, nbase1, nexo, nina, nisc, 
			       nigv1, nbase3, ntots, ntc, freffec, crefdoc, crefser, crefnum, 
			       cmreg, ndolar, ffechaven2, ccond, ccodcos, ccodcos2, cctabase, 
			       cctaotrib, cctatot, nresp, nporre, nimpres, cserre, cnumre, ffecre, 
			       ccodpresu, nigv, cglosa, ccodpago, nperdenre, nbaseres, cctaperc, 
			       incomp, lneg, vmespd, nnetd, nimpd, nbase2d, nigv2d, nbase3d, 
			       nigv3d, ninad, niscd, nexod, ntotd, nntc, nbaseimp, nbaseimpd, 
			       nresini, nresfin, nigv2, nigv3, errores, cctacobra, flaganalb, 
			       flaganalo, flaganalt, flagccosb, flagccoso, flagccost, flagpresub, 
			       flagpresuo, flagpresut, nasiento, cnumfin, nicbpers, cctaicbper  from cf_regven_integra order by ccoddoc, cserie, cnumero) R 
			INNER JOIN 
			(
			SELECT 
			CCODRUC, CCODDOC, CSERIE,CNUMERO,CPER, CMES, CCODORI,NASIENTO,
			SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, 
			SUM(NDEBED-NHABERD) AS DIF1D, MAX(NIDLIN)  AS NIDLIN 
			FROM tmpregcv 
			GROUP BY CCODRUC, CCODDOC, CSERIE,CNUMERO,CPER, CMES, CCODORI,NASIENTO 
			HAVING SUM(NDEBE-NHABER) &lt;&gt;0 OR SUM(NDEBES-NHABERS) &lt;&gt; 0 OR SUM(NDEBED	-NHABERD) &lt;&gt; 0
			) AS T 
			 ON R.CCODRUC = T.CCODRUC AND R.CCODDOC = T.CCODDOC AND R.CSERIE = T.CSERIE AND R.CNUMERO = T.CNUMERO 
			);


			SELECT COUNT(*) AS CONTADOR FROM RESDIF INTO CONTADOR;

			IF CONTADOR &gt; 0 THEN 
			BEGIN

			RAISE NOTICE 'PROCESO TMPREGCV1 ingreso al IF contador';

			INSERT INTO TMPREGCV1(
			SELECT 
			VARPER AS CPER,
			VARMES AS CMES,
			VARORI AS CCODORI,
			nasiEntO + varmax  AS NASIENTO,
			(NIDLIN + 1) AS nidlin ,  
			(0.00)::numeric(10,6) AS NTC,
			(CASE WHEN TRIM(CCTADIFD)='' THEN (CASE WHEN TRIM(CCTADIFS)='' THEN '' ELSE CCTADIFS END) ELSE CCTADIFD END)::VARCHAR(20) AS CCODCUE,
			(0.00)::numeric(13,2) AS NDEBE,
			(0.00)::numeric(13,2) AS NHABER,
			CGLOSA,
			(CASE WHEN CMREG='D' AND DIF1S &lt; 0 THEN ABS(DIF1S)  ELSE 0.00  END)::NUMERIC(15,2) AS NDEBES,
			(CASE WHEN CMREG='D' AND DIF1S &gt; 0 THEN ABS(DIF1S)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERS,
			(CASE WHEN CMREG='S' AND DIF1d &lt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NDEBED,
			(CASE WHEN CMREG='S' AND DIF1d &gt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(CASE WHEN DIF1S+DIF1D &gt; 0 THEN '   ' ELSE '001' END)::VARCHAR(3) AS CDESTINO,
			(1)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			(' ')::VARCHAR(1) AS CREGIS,
			(0)::NUMERIC(1,0) AS NCOMP,
			CCODDOC,
			CSERIE,
			CNUMERO,
			CNUMFIN,
			FFECHADOC, 
			CCODRUC,
			CCODENTI,
			FFECHAVEN,
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD,
			('')::VARCHAR(4) AS CCODFLU,
			('')::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS  ELSE ' ' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE ' ' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE ' ' END) ELSE ' ' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(' ')::VARCHAR(2) AS CMESC, 
			(' ')::VARCHAR(1) AS CMREG, 
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre,
			(0.00)::NUMERIC(15,2) AS nbaseres,
			(0.00)::NUMERIC(15,2) AS nbasered,
			(0.00)::NUMERIC(15,2) AS nimpres,
			(0.00)::NUMERIC(15,2) AS nimpred,
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre,
			('1')::VARCHAR(1) AS clecvesta, 
			VARMES AS clecvmes,
			VARPER  AS clecvper,
			1 AS cledmcesta,
			VARMES as cledmcmes,
			VARPER as cledmcper,
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,  
			00.00 AS nporisc,  
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd,
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			(' ')::VARCHAR(20) AS cctaicbper,	
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv
			FROM RESDIF
			);

			-- preguntar esta linea 
			 DELETE FROM RESDIF WHERE DIF1S &gt; 0 OR DIF1D &gt; 0;

			SELECT COUNT(*) AS CONTADOR FROM RESDIF WHERE DIF1S &lt; 0 OR DIF1D &lt; 0 INTO CONTADOR;

			IF CONTADOR &gt; 0 THEN 
			BEGIN 
			RAISE NOTICE 'PROCESO TMPREGCV2 ingreso al IF contador';
			INSERT INTO TMPREGCV2(
			SELECT 
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			(NIDLIN + 2) AS nidlin ,   
			(0.00)::numeric(10,6) AS NTC,
			vardifpD AS CCODCUE, 
			(0.00)::numeric(13,2) AS NDEBE,
			(0.00)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN CMREG='D' AND DIF1S &lt; 0 THEN ABS(DIF1S)  ELSE 0.00  END)::NUMERIC(15,2) AS NDEBES,
			(CASE WHEN CMREG='D' AND DIF1S &gt; 0 THEN ABS(DIF1S)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERS,
			(CASE WHEN CMREG='S' AND DIF1d &lt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NDEBED,
			(CASE WHEN CMREG='S' AND DIF1d &gt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERD,
			('S')::VARCHAR(1) AS CDES,
			(CASE WHEN DIF1S+DIF1D &gt; 0 THEN '   ' ELSE '001' END)::VARCHAR(3) AS CDESTINO,
			(1)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			(' ')::VARCHAR(1) AS CREGIS,
			(0)::NUMERIC(1,0) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN,
			FFECHADOC, 	 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD,
			('')::VARCHAR(4) AS CCODFLU,
			('')::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS  ELSE ' ' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE ' ' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE ' ' END) ELSE ' ' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(' ')::VARCHAR(2) AS CMESC, 
			(' ')::VARCHAR(1) AS CMREG, 
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre,
			(0.00)::NUMERIC(15,2) AS nbaseres,
			(0.00)::NUMERIC(15,2) AS nbasered,
			(0.00)::NUMERIC(15,2) AS nimpres,
			(0.00)::NUMERIC(15,2) AS nimpred,
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre,
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			1 AS cledmcesta, 
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,  
			00.00 AS nporisc,  
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd,
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			(' ')::VARCHAR(20) AS cctaicbper,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) as nigv
			FROM resdif WHERE dif1s &lt; 0 or dif1d &lt; 0
			UNION all 
			SELECT 
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			(NIDLIN + 3) AS nidlin , 
			(0.00)::numeric(10,6) AS NTC,
			vardifpH AS CCODCUE, 
			(0.00)::numeric(13,2) AS NDEBE,
			(0.00)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN CMREG='D' AND DIF1S &gt; 0 THEN ABS(DIF1S)  ELSE 0.00  END)::NUMERIC(15,2) AS NDEBES,
			(CASE WHEN CMREG='D' AND DIF1S &lt; 0 THEN ABS(DIF1S)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERS,
			(CASE WHEN CMREG='S' AND DIF1d &gt;0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NDEBED,
			(CASE WHEN CMREG='S' AND DIF1d &lt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERD,
			('S')::VARCHAR(1) AS CDES,
			(CASE WHEN DIF1S+DIF1D &gt; 0 THEN '   ' ELSE '001' END)::VARCHAR(3) AS CDESTINO, 
			(1)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			(' ')::VARCHAR(1) AS CREGIS,
			(0)::NUMERIC(1,0) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN,
			FFECHADOC, 		 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD,
			('')::VARCHAR(4) AS CCODFLU,
			('')::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS  ELSE ' ' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE ' ' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE ' ' END) ELSE ' ' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(' ')::VARCHAR(2) AS CMESC, 
			(' ')::VARCHAR(1) AS CMREG, 
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre,
			(0.00)::NUMERIC(15,2) AS nbaseres,
			(0.00)::NUMERIC(15,2) AS nbasered,
			(0.00)::NUMERIC(15,2) AS nimpres,
			(0.00)::NUMERIC(15,2) AS nimpred,
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom,
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre,
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			1 AS cledmcesta, 
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,  
			00.00 AS nporisc,  
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd,
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			(' ')::VARCHAR(20) AS cctaicbper,	
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS  nigv	
			FROM resdif WHERE dif1s &lt; 0 or dif1d &lt; 0
			);

			END;
			END IF;

			END;
			END IF ;


			INSERT INTO TMPREGCV(
			SELECT * FROM TMPREGCV1
			UNION ALL
			SELECT * FROM TMPREGCV2
			);

			/******INICIO MODIFICACION**************/
			insert into resultado (
			select cper,cmes,ccodori,nasiento,
			  row_number() over (PARTITION BY CPER,CMES,CCODORI,NASIENTO ORDER BY NIDLIN) as nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes,cdestino,
			  ndifauto,najusauto,cregis,ncomp,ccoddoc,cserie,
			  cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,nbase1,nigv1,nbase2,nigv2,nbase3,nigv3,nina,nexo,nisc,nivabase,nivaimp,ntot,nbase1s,nigv1s,nbase2s,nigv2s,nbase3s,
			  nigv3s,ninas,nexos,niscs,nivabases,nivaimps,ntots,nbase1d,nigv1d,nbase2d,nigv2d,nbase3d,nigv3d,ninad,nexod,niscd,nivabased,nivaimpd,ntotd,ccodflu,ccodpago,ccodcos,
			  ccodcos2,ccodpresu,ccodcam,ccodcam2,ccodecpntribcol,ccodecpnniifcol,cglosa2,cmesc,cmreg,ccodocon,ndiferido,ffechadif,nresp,ccodpps,ccodpds,cregisre,nperdenre,
			  nporre,ffecre,cserre,cnumre,cnumdere,ntcre,nbaseres,nbasered,nimpres,nimpred,cpdbdetcod,ccodretran,ccodtopdet,npagdetra,cdocnodom,crefdoc,freffec,crefser,crefnum,
			  ccoddas,cyeardas,ccorrdas,ffembdas,ffregdas,nfobdas,nfobdad,nlecorre,clecvesta,clecvmes,clecvper,cledmcesta,cledmcmes,cledmcper,nlecorrere,nautamo,ffec_dc,cdoc_dc,
			  cser_dc,cnum_dc,CCODISC,NPORISC,ccodclas,ccodtipren,cdoc_nd,cser_nd,cnum_nd,nrenbru_nd,nrennet_nd,nimpret_nd,ndedcos_nd,ntasret_nd,ccodmon,ntc_nd,nintext,
			  nicbpers,cctaicbper,nicbper,nicbperd,nigv 
			from tmpregcv ORDER BY CPER,CMES,CCODORI,NASIENTO,NIDLIN
			);


			/******FIN MODIFICACION******/



			IF VARSOLOVENTA = 0 THEN
			BEGIN
				RAISE NOTICE 'ENTRO AL PRCOCESO tmpregcv3 ';

				INSERT INTO tmpregcv3(
				SELECT  
				VARPER AS CPER, 
				VARMES AS CMES, 
				VARORICOB AS CCODORI,
				NASIENTO + varmaxCOB AS NASIENTO , 
				1 AS nidlin , 
				NTC, 
				CCTACOBRA AS CCODCUE, 
				(CASE WHEN NTOTS &gt;= 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(NDOLAR) END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
				(CASE WHEN NTOTS &lt;  0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(NDOLAR) END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
				CGLOSA,
				(CASE WHEN NTOTS &gt;= 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBES, 
				(CASE WHEN NTOTS &lt; 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
				(CASE WHEN NTOTS &gt;= 0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NDOLAR) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
				(CASE WHEN NTOTS &lt;  0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NDOLAR) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
				(' ')::VARCHAR(1) AS CDES,
				('   ')::VARCHAR(3) AS CDESTINO,
				(0)::NUMERIC(1,0) AS NDIFAUTO, 
				(0)::NUMERIC(1,0) AS NAJUSAUTO, 
				(' ')::VARCHAR(1) AS CREGIS,
				(0)::NUMERIC(1,0) AS NCOMP ,
				CCODDOC, 
				CSERIE,
				CNUMERO, 
				CNUMFIN,
				FFECHADOC, 			 
				CCODRUC, 
				CCODENTI, 
				FFECHAVEN,
				(0.00)::NUMERIC(13,2) AS NBASE1, 
				(0.00)::NUMERIC(13,2) AS NIGV1, 
				(0.00)::NUMERIC(13,2) AS NBASE2, 
				(0.00)::NUMERIC(13,2) AS NIGV2, 
				(0.00)::NUMERIC(13,2) AS NBASE3, 
				(0.00)::NUMERIC(13,2) AS NIGV3, 
				(0.00)::NUMERIC(13,2) AS NINA, 
				(0.00)::NUMERIC(13,2) AS NEXO, 
				(0.00)::NUMERIC(13,2) AS NISC, 
				(0.00)::NUMERIC(13,2) AS NIVABASE, 
				(0.00)::NUMERIC(13,2) AS NIVAIMP, 
				(0.00)::NUMERIC(13,2) AS NTOT, 
				(0.00)::NUMERIC(13,2) AS NBASE1S, 
				(0.00)::NUMERIC(13,2) AS NIGV1S, 
				(0.00)::NUMERIC(13,2) AS NBASE2S, 
				(0.00)::NUMERIC(13,2) AS NIGV2S, 
				(0.00)::NUMERIC(13,2) AS NBASE3S, 
				(0.00)::NUMERIC(13,2) AS NIGV3S, 
				(0.00)::NUMERIC(13,2) AS NINAS, 
				(0.00)::NUMERIC(13,2) AS NEXOS, 
				(0.00)::NUMERIC(13,2) AS NISCS, 
				(0.00)::NUMERIC(13,2) AS NIVABASES, 
				(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
				(0.00)::NUMERIC(13,2) AS NTOTS, 
				(0.00)::NUMERIC(13,2) AS NBASE1D, 
				(0.00)::NUMERIC(13,2) AS NIGV1D, 
				(0.00)::NUMERIC(13,2) AS NBASE2D, 
				(0.00)::NUMERIC(13,2) AS NIGV2D, 
				(0.00)::NUMERIC(13,2) AS NBASE3D, 
				(0.00)::NUMERIC(13,2) AS NIGV3D, 
				(0.00)::NUMERIC(13,2) AS NINAD, 
				(0.00)::NUMERIC(13,2) AS NEXOD,
				(0.00)::NUMERIC(13,2) AS NISCD, 
				(0.00)::NUMERIC(13,2) AS NIVABASED, 
				(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
				(0.00)::NUMERIC(13,2) AS NTOTD,
				(CASE WHEN FLAGANALCOB=3 OR FLAGANALCOB = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
				(CASE WHEN FLAGANALCOB=3 OR FLAGANALCOB = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
				(' ')::VARCHAR(9) AS CCODCOS,
				(' ')::VARCHAR(9) AS CCODCOS2,
				(' ')::VARCHAR(10) AS CCODPRESU,
				(' ')::VARCHAR(4) AS CCODCAM, 
				(' ')::VARCHAR(4) AS CCODCAM2, 
				(' ')::VARCHAR(2) AS ccodecpntribcol, 
				(' ')::VARCHAR(2) AS ccodecpnniifcol, 
				(' ')::VARCHAR(80) AS CGLOSA2,
				(' ')::VARCHAR(2)  AS CMESC,
				(' ')::VARCHAR(1) AS CMREG,  
				(' ')::VARCHAR(4) AS CCODOCON,
				(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
				CAST(NULL AS DATE) AS FFECHADIF,
				(0)::NUMERIC(1,0) AS NRESP,
				(' ')::VARCHAR(2) AS ccodpps, 
				(' ')::VARCHAR(5) AS ccodpds,
				(' ')::VARCHAR(1) AS CREGISRE, 
				(0.00)::NUMERIC(1,0) AS nperdenre, 
				(0.00)::NUMERIC(1,0)AS nporre, 
				CAST(NULL AS DATE) AS FFECRE, 				
				(' ')::VARCHAR(6)  AS CSERRE, 
				(' ')::VARCHAR(13) AS CNUMRE, 
				(' ')::VARCHAR(15) AS CNUMDERE,
				(0.00)::NUMERIC(10,6) AS NTCRE,
				(0.00)::NUMERIC(15,2) AS NBASERES,
				(0.00)::NUMERIC(15,2) AS nbasered,
				(0.00)::NUMERIC(15,2) AS nimpres,
				(0.00) AS nimpred,
				(' ')::VARCHAR(8) AS cpdbdetcod, 
				(' ')::VARCHAR(2) AS ccodretran, 
				(' ')::VARCHAR(2) AS ccodtopdet, 
				(0)::NUMERIC(1,0) AS npagdetra, 
				(' ')::VARCHAR(20) AS cdocnodom, 
				(' ')::VARCHAR(2) AS crefdoc, 
				CAST(NULL AS DATE) AS freffec,
				(' ')::VARCHAR(10) AS crefser, 
				(' ')::VARCHAR(13) AS crefnum, 
				(' ')::VARCHAR(3) AS ccoddas, 
				(' ')::VARCHAR(4) AS cyeardas, 
				(' ')::VARCHAR(6) AS ccorrdas, 
				CAST(NULL AS DATE) AS ffembdas, 
				CAST(NULL AS DATE) AS ffregdas, 
				(0.00)::NUMERIC(15,2)  AS nfobdas, 
				(0.00)::NUMERIC(15,2)  AS nfobdad, 
				(0.00)::NUMERIC(6,0)  AS nlecorre, 
				('1')::VARCHAR(1) AS clecvesta, 
				VARMES AS clecvmes, 
				VARPER  AS clecvper, 
				('1')::VARCHAR(1) AS cledmcesta, 
				VARMES as cledmcmes, 
				VARPER as cledmcper, 
				(0.00)::NUMERIC(6,0) AS nlecorrere, 
				(0.00)::NUMERIC(1,0) as nautamo, 
				CAST(NULL AS DATE) as ffec_dc, 
				(' ')::VARCHAR(2) AS cdoc_dc, 
				(' ')::VARCHAR(20) AS cser_dc, 
				(' ')::VARCHAR(20) AS cnum_dc, 
				(' ')::VARCHAR(20) AS ccodisc,
				00.00 AS nporisc,  		
				(' ')::VARCHAR(1) AS CCODCLAS, 
				(' ')::VARCHAR(2) AS ccodtipren, 
				(' ')::VARCHAR(2) AS cdoc_nd, 
				(' ')::VARCHAR(20) AS cser_nd, 
				(' ')::VARCHAR(20) AS cnum_nd, 
				(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
				(0.00)::NUMERIC(15,2) AS nrennet_nd, 
				(0.00)::NUMERIC(15,2) AS nimpret_nd, 
				(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
				(0.00)::NUMERIC(15,2) AS ntasret_nd, 
				('1')::VARCHAR(3)  AS ccodmon, 
				(0.00)::NUMERIC(5,3) AS ntc_nd, 
				(0.00)::NUMERIC(1,0) AS nintext,
				(0.00)::NUMERIC(13,2) AS NICBPERS,
				(' ')::VARCHAR(20) AS cctaicbper,	
				(0.00)::NUMERIC(13,2) AS NICBPER,
				(0.00)::NUMERIC(13,2) AS NICBPERD ,
				(0.00)::NUMERIC(5,2) AS nigv
				FROM 
				(select z.*, P.NANACUE AS FLAGANALCOB, P.Nafecos AS FLAGCCOSCOB, P.Nafepre AS FLAGPRESUCOB, ROW_NUMBER () OVER (ORDER BY Z.CCODDOC, Z.CSERIE, Z.CNUMERO)::NUMERIC(6,0) AS  NASIENTO 
				from(select CCODRUC,CCODENTI,CCODDOC,CSERIE,CNUMERO,CNUMFIN,FFECHADOC,FFECHAVEN,ntc,cctatot,cctacobra,cmreg,nigv,cglosa,sum(ntots) ntots, sum(ndolar) ndolar, sum(nimpres) nimpres
				from cf_regven_integra
				WHERE CCOND = 'CON' AND NTOTS &lt;&gt; 0
				group by CCODRUC,CCODENTI,CCODDOC,CSERIE,CNUMERO,CNUMFIN,FFECHADOC,FFECHAVEN,ntc,cctatot,cctacobra,cmreg,nigv,cglosa) Z
				inner join CF_PLAN  P
				ON Z.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER ) C

				--order by nasiento 

				/*
				(SELECT 
				R.*, P.NANACUE AS FLAGANALCOB, P.Nafecos AS FLAGCCOSCOB, P.Nafepre AS FLAGPRESUCOB, 
				ROW_NUMBER () OVER (ORDER BY CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB 
				FROM cf_regven_integra R 
				INNER JOIN CF_PLAN  P 
				ON R.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER 
				WHERE ccond = 'CON' AND NTOTS&lt;&gt;0) C
				*/

				UNION ALL 
				SELECT 
				VARPER AS CPER, 
				VARMES AS CMES, 
				VARORICOB AS CCODORI,
				NASIENTO + varmaxCOB AS NASIENTO , 
				2 AS nidlin , 
				NTC, 
				CCTATOT AS CCODCUE, 
				(CASE WHEN NTOTS  &lt; 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(NDOLAR) END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
				(CASE WHEN NTOTS &gt;= 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(NDOLAR) END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
				CGLOSA,
				(CASE WHEN NTOTS &lt;  0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBES, 
				(CASE WHEN NTOTS &gt;= 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
				(CASE WHEN NTOTS &lt;  0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NDOLAR) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
				(CASE WHEN NTOTS &gt;= 0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NDOLAR) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
				(' ')::VARCHAR(1) AS CDES,
				('   ')::VARCHAR(3) AS CDESTINO,
				(0)::NUMERIC(1,0) AS NDIFAUTO, 
				(0)::NUMERIC(1,0) AS NAJUSAUTO, 
				(' ')::VARCHAR(1) AS CREGIS,
				(0)::NUMERIC(1,0) AS NCOMP ,
				CCODDOC, 
				CSERIE,
				CNUMERO, 
				CNUMFIN,
				FFECHADOC, 			 
				CCODRUC, 
				CCODENTI, 
				FFECHAVEN,
				(0.00)::NUMERIC(13,2) AS NBASE1, 
				(0.00)::NUMERIC(13,2) AS NIGV1, 
				(0.00)::NUMERIC(13,2) AS NBASE2, 
				(0.00)::NUMERIC(13,2) AS NIGV2, 
				(0.00)::NUMERIC(13,2) AS NBASE3, 
				(0.00)::NUMERIC(13,2) AS NIGV3, 
				(0.00)::NUMERIC(13,2) AS NINA, 
				(0.00)::NUMERIC(13,2) AS NEXO, 
				(0.00)::NUMERIC(13,2) AS NISC, 
				(0.00)::NUMERIC(13,2) AS NIVABASE, 
				(0.00)::NUMERIC(13,2) AS NIVAIMP, 
				(0.00)::NUMERIC(13,2) AS NTOT, 
				(0.00)::NUMERIC(13,2) AS NBASE1S, 
				(0.00)::NUMERIC(13,2) AS NIGV1S, 
				(0.00)::NUMERIC(13,2) AS NBASE2S, 
				(0.00)::NUMERIC(13,2) AS NIGV2S, 
				(0.00)::NUMERIC(13,2) AS NBASE3S, 
				(0.00)::NUMERIC(13,2) AS NIGV3S, 
				(0.00)::NUMERIC(13,2) AS NINAS, 
				(0.00)::NUMERIC(13,2) AS NEXOS, 
				(0.00)::NUMERIC(13,2) AS NISCS, 
				(0.00)::NUMERIC(13,2) AS NIVABASES, 
				(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
				(0.00)::NUMERIC(13,2) AS NTOTS,
				(0.00)::NUMERIC(13,2) AS NBASE1D, 
				(0.00)::NUMERIC(13,2) AS NIGV1D, 
				(0.00)::NUMERIC(13,2) AS NBASE2D, 
				(0.00)::NUMERIC(13,2) AS NIGV2D, 
				(0.00)::NUMERIC(13,2) AS NBASE3D, 
				(0.00)::NUMERIC(13,2) AS NIGV3D, 
				(0.00)::NUMERIC(13,2) AS NINAD, 
				(0.00)::NUMERIC(13,2) AS NEXOD,
				(0.00)::NUMERIC(13,2) AS NISCD, 
				(0.00)::NUMERIC(13,2) AS NIVABASED, 
				(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
				(0.00)::NUMERIC(13,2) AS NTOTD,
				(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
				(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
				(' ')::VARCHAR(9) AS CCODCOS	,
				(' ')::VARCHAR(9) AS CCODCOS2,
				(' ')::VARCHAR(10) AS CCODPRESU,
				(' ')::VARCHAR(4) AS CCODCAM, 
				(' ')::VARCHAR(4) AS CCODCAM2, 
				(' ')::VARCHAR(2) AS ccodecpntribcol, 
				(' ')::VARCHAR(2) AS ccodecpnniifcol, 
				(' ')::VARCHAR(80) AS CGLOSA2,
				(CASE WHEN VARSOLOVENTA=1 THEN ' ' ELSE (CASE WHEN FLAGANALT=2 THEN (CASE WHEN CCOND='CON' THEN VARMES ELSE ' ' END) ELSE  ' ' END)  END)::VARCHAR(2)  AS CMESC,
				(CASE WHEN FLAGANALT=2 THEN cmreg ELSE '' END)::VARCHAR(1) AS CMREG,  
				(' ')::VARCHAR(4) AS CCODOCON,
				(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
				CAST(NULL AS DATE) AS FFECHADIF,
				(0)::NUMERIC(1,0) AS NRESP,
				(' ')::VARCHAR(2) AS ccodpps, 
				(' ')::VARCHAR(5) AS ccodpds,
				(' ')::VARCHAR(1) AS CREGISRE, 
				(0.00)::NUMERIC(1,0) AS nperdenre, 
				(0.00)::NUMERIC(1,0)AS nporre, 
				CAST(NULL AS DATE) AS FFECRE, 				
				(' ')::VARCHAR(6)  AS CSERRE, 
				(' ')::VARCHAR(13) AS CNUMRE, 
				(' ')::VARCHAR(15) AS CNUMDERE,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntc ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(10,6) AS NTCRE,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntots ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS NBASERES,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN (CASE WHEN cmreg = 'S' THEN ROUND(NTOTS/NTC,2) ELSE NDOLAR END) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nbasered,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN nimpres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpres,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpred,
				(' ')::VARCHAR(8) AS cpdbdetcod, 
				(' ')::VARCHAR(2) AS ccodretran, 
				(' ')::VARCHAR(2) AS ccodtopdet, 
				(0)::NUMERIC(1,0) AS npagdetra, 
				(' ')::VARCHAR(20) AS cdocnodom, 
				(' ')::VARCHAR(2) AS crefdoc, 
				CAST(NULL AS DATE) AS freffec,
				(' ')::VARCHAR(10) AS crefser, 
				(' ')::VARCHAR(13) AS crefnum, 
				(' ')::VARCHAR(3) AS ccoddas, 
				(' ')::VARCHAR(4) AS cyeardas, 
				(' ')::VARCHAR(6) AS ccorrdas, 
				CAST(NULL AS DATE) AS ffembdas, 
				CAST(NULL AS DATE) AS ffregdas, 
				(0.00)::NUMERIC(15,2)  AS nfobdas, 
				(0.00)::NUMERIC(15,2)  AS nfobdad, 
				(0.00)::NUMERIC(6,0)  AS nlecorre, 
				('1')::VARCHAR(1) AS clecvesta, 
				VARMES AS clecvmes, 
				VARPER  AS clecvper, 
				('1')::VARCHAR(1) AS cledmcesta, 
				VARMES as cledmcmes, 
				VARPER as cledmcper, 
				(0.00)::NUMERIC(6,0) AS nlecorrere, 
				(0.00)::NUMERIC(1,0) as nautamo, 
				FFECHADOC as ffec_dc, 
				CCODDOC::VARCHAR(2) AS cdoc_dc, 
				CSERIE::VARCHAR(20) AS cser_dc, 
				CNUMERO::VARCHAR(20) AS cnum_dc, 
				(' ')::VARCHAR(20) AS ccodisc,
				00.00 AS nporisc,  		
				(' ')::VARCHAR(1) AS CCODCLAS, 
				(' ')::VARCHAR(2) AS ccodtipren, 
				(' ')::VARCHAR(2) AS cdoc_nd, 
				(' ')::VARCHAR(20) AS cser_nd, 
				(' ')::VARCHAR(20) AS cnum_nd, 
				(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
				(0.00)::NUMERIC(15,2) AS nrennet_nd, 
				(0.00)::NUMERIC(15,2) AS nimpret_nd, 
				(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
				(0.00)::NUMERIC(15,2) AS ntasret_nd, 
				('1')::VARCHAR(3)  AS ccodmon, 
				(0.00)::NUMERIC(5,3) AS ntc_nd, 
				(0.00)::NUMERIC(1,0) AS nintext,
				(0.00)::NUMERIC(13,2) AS NICBPERS,
				(' ')::VARCHAR(20) AS cctaicbper,	
				(0.00)::NUMERIC(13,2) AS NICBPER,
				(0.00)::NUMERIC(13,2) AS NICBPERD,
				(0.00)::NUMERIC(5,2) as nigv
				FROM 
				(select z.*, P.NANACUE AS FLAGANALT, P.Nafecos AS FLAGCCOST, P.Nafepre AS FLAGPRESUT, ROW_NUMBER () OVER (ORDER BY Z.CCODDOC, Z.CSERIE, Z.CNUMERO)::NUMERIC(6,0) AS  NASIENTO
				from(select CCODRUC,CCODENTI,CCODDOC,CSERIE,CNUMERO,CNUMFIN,FFECHADOC,FFECHAVEN,ntc,cctatot,cctacobra,cmreg,nigv,cglosa,CCOND,sum(ntots) ntots, sum(ndolar) ndolar, sum(nimpres) nimpres
				from cf_regven_integra
				WHERE CCOND = 'CON' AND NTOTS &lt;&gt; 0
				group by CCODRUC,CCODENTI,CCODDOC,CSERIE,CNUMERO,CNUMFIN,FFECHADOC,FFECHAVEN,ntc,cctatot,cctacobra,cmreg,nigv,cglosa,CCOND) Z
				inner join CF_PLAN  P 
				ON Z.CCTATOT = P.CCODCUE AND P.CPER = VARPER) C

				/*
				(SELECT R.*, P.NANACUE AS FLAGANALCOB, P.nafecos AS FLAGCCOSCOB, P.nafepre AS FLAGPRESUCOB, 
				ROW_NUMBER () OVER (ORDER BY CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB 
				FROM cf_regven_integra R
				INNER JOIN CF_PLAN  P 
				ON R.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER 
				WHERE ccond = 'CON' AND NTOTS&lt;&gt;0) C

				*/
				);
				END;
			END IF;




			RAISE NOTICE 'PROCESO creando el archivo resultado';

			-- insertando resultado final
			IF VARSOLOVENTA = 0 THEN 
				BEGIN 
					INSERT INTO RESULTADO (SELECT * FROM TMPREGCV3);
				END;
			END IF ;

			-- INSERT INTO PRUEBAVEN SELECT * FROM RESULTADO;


			-- INSERTANDO AL DIARIO Y AL DIARIOL
			insert into cf_diario(cper,cmes,ccodori,nasiento,ffecasi,cmoneda,ccodusu,tregistro,ccodsu,ntcblo,ccodbas,nidreg,nidlin)
			SELECT  distinct VARPER,VARMES,VARORI, nasiEntO + varmax AS NASIENTO , 
			ffechadoc as ffecasi,
			cmreg as cmoneda,
			'ADMIN' AS ccodusu,
			current_timestamp as tregistro,
			VARLREG as ccodsu,
			(0.00)::NUMERIC(1,0)  as ntcblo, 
			(' ')::VARCHAR(10) as ccodbas,
			(0.00)::NUMERIC(15,0) as nidreg, 
			(0.00)::numeric(6,0)  as nidlin 
			 from cf_regven_integra;
			 

			IF varsoloventa = 0 THEN 
				BEGIN
					insert into cf_diario(cper,cmes,ccodori,nasiento,ffecasi,cmoneda,ccodusu,tregistro,ccodsu,ntcblo,ccodbas,nidreg,nidlin)
					SELECT  distinct VARPER,VARMES,VARORIcob, nasiEntOcob + varmaxcob AS NASIENTO , 
					ffechadoc as ffecasi,
					cmreg as cmoneda,
					'ADMIN' AS ccodusu,
					current_timestamp as tregistro,
					VARLREGCONT as ccodsu,
					(0.00)::NUMERIC(1,0)  as ntcblo, 
					(' ')::VARCHAR(10) as ccodbas,
					(0.00)::NUMERIC(15,0) as nidreg, 
					(0.00)::numeric(6,0)  as nidlin 
					--from  (SELECT R.*, ROW_NUMBER () OVER (ORDER BY CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB 
					from  (SELECT  ffechadoc, cmreg, CCODDOC, CSERIE, CNUMERO, ROW_NUMBER () OVER (ORDER BY CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB   -- KMM - 21-08-2024 - cpe-Integracioin
					FROM cf_regven_integra R
					--WHERE ccond = 'CON' AND NTOTS&lt;&gt;0 )  C;
					WHERE ccond = 'CON' AND NTOTS&lt;&gt;0 group by ffechadoc, cmreg, cCODDOC, CSERIE, CNUMERO )  C; -- KMM - 21-08-2024 - cpe-Integracioin
				END;
			 END IF;

			--resultado_prueba
			INSERT INTO cf_diariol(cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,
			nhaberd,cdes,cdestino,ndifauto,najusauto,cregis,ncomp,ccoddoc,
			cserie,
			cnumero,
			cnumfin,
			ffechadoc,
			ccodruc,
			ccodenti,
			ffechaven,
			nbase1,
			nigv1,
			nbase2,
			nigv2,
			nbase3,
			nigv3,
			nina,
			nexo,
			nisc,
			nivabase,
			nivaimp,
			ntot,
			nbase1s,
			nigv1s,
			nbase2s,
			nigv2s,
			nbase3s,
			nigv3s,
			ninas,
			nexos,
			niscs,
			nivabases,
			nivaimps,
			ntots,
			nbase1d,
			nigv1d,
			nbase2d,
			nigv2d,
			nbase3d,
			nigv3d,
			ninad,
			nexod,
			niscd,
			nivabased,
			nivaimpd,
			ntotd,
			ccodclas,
			ccodflu,
			ccodpago,
			ccodcos,
			ccodcos2,
			ccodpresu,
			ccodcam,
			ccodcam2,
			ccodecpntribcol,
			ccodecpnniifcol,
			cglosa2,
			cmesc,
			cmreg,
			ccodocon,
			ndiferido,
			ffechadif,
			nresp,
			ccodpps,
			ccodpds,
			cregisre,
			nperdenre,
			nporre,
			ffecre,
			cserre,
			cnumre,
			cnumdere,
			ntcre,
			nbaseres,
			nbasered,
			nimpres,
			nimpred,
			cpdbdetcod,
			ccodretran,
			ccodtopdet,
			npagdetra,
			cdocnodom,
			ccodtipren,
			crefdoc,
			freffec,
			crefser,
			crefnum,
			ccoddas,
			cyeardas,
			ccorrdas,
			ffembdas,
			ffregdas,
			nfobdas,
			nfobdad,
			nlecorre,
			clecvesta,
			clecvmes,
			clecvper,
			cledmcesta,
			cledmcmes,
			cledmcper,
			nlecorrere,
			nautamo,
			ffec_dc,
			cdoc_dc,
			cser_dc,
			cnum_dc,
			cdoc_nd,
			cser_nd,
			cnum_nd,
			nrenbru_nd,
			nrennet_nd,
			nimpret_nd,
			ndedcos_nd,
			ntasret_nd,
			ccodmon,
			ntc_nd,
			nintext,
			NICBPER,
			NICBPERS,
			NICBPERD,
			npigv
			  ) 
			  
			SELECT   cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,
			nhaberd,cdes,cdestino,ndifauto,najusauto,cregis,ncomp,ccoddoc,cserie,cnumero,cnumfin,
			ffechadoc,ccodruc,ccodenti,ffechaven,nbase1,nigv1,nbase2,nigv2,nbase3,nigv3,nina,nexo,
			nisc,nivabase,nivaimp,ntot,nbase1s,nigv1s,nbase2s,nigv2s,nbase3s,nigv3s,ninas,nexos,
			niscs,nivabases,nivaimps,ntots,nbase1d,nigv1d,nbase2d,nigv2d,nbase3d,nigv3d,ninad,nexod,
			niscd,nivabased,nivaimpd,ntotd,ccodclas,ccodflu,ccodpago,ccodcos,ccodcos2,ccodpresu,ccodcam,
			ccodcam2,ccodecpntribcol,ccodecpnniifcol,cglosa2,cmesc,cmreg,ccodocon,ndiferido,ffechadif,
			nresp,ccodpps,ccodpds,cregisre,nperdenre,nporre,ffecre,cserre,cnumre,cnumdere,ntcre,nbaseres,
			nbasered,nimpres,nimpred,cpdbdetcod,ccodretran,ccodtopdet,npagdetra,cdocnodom,ccodtipren,
			crefdoc,freffec,crefser,crefnum,ccoddas,cyeardas,ccorrdas,ffembdas,ffregdas,nfobdas,nfobdad,
			nlecorre,clecvesta,clecvmes,clecvper,cledmcesta,cledmcmes,cledmcper,nlecorrere,nautamo,ffec_dc,
			cdoc_dc,cser_dc,cnum_dc,cdoc_nd,cser_nd,cnum_nd,nrenbru_nd,nrennet_nd,nimpret_nd,ndedcos_nd,
			ntasret_nd,ccodmon,ntc_nd,nintext,nicbper,nicbpers,nicbperd,nigv
			 FROM RESULTADO;

			return 1;
				
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
</value>
  </data>
  <data name="txtasientoventas1.Text" xml:space="preserve">
    <value>-- FUNCTION: public.fin_ventas_integracion_principal()

-- DROP FUNCTION IF EXISTS public.fin_ventas_integracion_principal();

CREATE OR REPLACE FUNCTION public.fin_ventas_integracion_principal(
	)
    RETURNS void
AS $BODY$
-----Ultimo cambio: 01/04/2025 equipo de Luis Nuñez x Kim tema de Lizet x cobranzas y ventas
DECLARE 

	    RW RECORD;
	    rwperproceso record; 
	    rwemp record; 
	    rw2 record;  
	    rwnumerado  record;
	    rwctualizasubdiario record;
	    rwanuladoc  record;
	    varigv character(10) ; 
	    varigv2 character(10) ;
	    varccodflu character(10) ;
	    varpresua integer;
	    varpresui integer;
	    varpresur integer;
	    varsolocompra integer;
	    varigv3 character(10) ;
	    varigvspot character(10) ;
	    varlreg character(10);
	    vardifp character(10);
	    vardifpd character(10);
	    vardifph character(10);
	    vardifg character(10);							
	    varlregcont character(10);
	    varmaxcob integer;
	    varctaisc character(10);
	    VCMAXASIENTO text = ''; 
	    VCMAXASIENTO_p text = ''; 
	    varmax integer; 
	    vnumasiento integer;
	    vccoddoc  character(2);
	    vcserie character(20);
	    vcnumero character(20);
	    vctipdoc character(1);
	    vccodruc character(15);
	    vxcctatot character(10);
	    varsoloventas integer;
	    VARRESUMIR integer;
	    varcentro2 integer;
	    varpresupuestos integer;
            nreturn integer=0;
            vcPerproceso char(4); 
			varccodenti char(4);
			varcdesenti char(100);
			varBeneficio Integer;
	
BEGIN

	varcentro2=0;
	-- Validaciones fin_ventas
	-- Insetandoi entidades 	
	insert into cg_entidad (ccodenti, cdesenti, ccodtipent) 
	select distinct ccodenti, cdesenti, ccodtipent from fin_ventas where ccodenti not in (select ccodenti from cg_entidad); 
	-- insertando entidades tributarias 
	insert into cg_entitrib (ccodruc,crazsoc,ctipdoc,CNATJUR,ccodtipent) 
	select DISTINCT ccodruc,crazsoc,ctipdoc,case 
	when ctipdoc='1' and Length(ltrim(ccodruc))=8 then '1'
	when ctipdoc='6' and Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)='10' then '1'
	when ctipdoc='6' and Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)='20' then '2'
	when ctipdoc='0' and Length(ltrim(ccodruc))&lt;=15  then '3'
	when ctipdoc='7' and Length(ltrim(ccodruc))=12  then '1'
	when ctipdoc='4' and Length(ltrim(ccodruc))=12  then '1'
	 END ::CHAR(1) AS CNATJUR,ccodtipent   FROM FIN_VENTAS
	 WHERE crazsoc NOT LIKE('%ANULAD%') AND    ccodruc not in (select ccodruc from cg_entitrib); 

	for rwperproceso in select distinct cper as cperproceso from fin_ventas loop 	

	-- propiedades de empresa por periodos 
		for rwemp in select cper, cctaigv, ccueimp2c, ccueimp3c, cctaigvxacre, cctaper, cctagan,cctaisc,ncencosalt,
		cg_emppro.ccodenti ,cdesenti,nflgBene
			from cg_emppro  inner join cg_entidad on   cg_emppro.ccodenti =cg_entidad.ccodenti where cper = rwperproceso.cperproceso loop
		
		    varigv = rwemp.cctaigv ;
		    varigv2 = rwemp.ccueimp2c ;
		    varigv3 = rwemp.ccueimp3c ;
		    varigvspot = rwemp.cctaigvxacre ;
		    vardifp = rwemp.cctaper ;
		    vardifpd = (select cdesdeb from cf_plan where cper = rwemp.cper and ccodcue = rwemp.cctaper);  
		    vardifph = (select cdeshab from cf_plan where cper = rwemp.cper and ccodcue = rwemp.cctaper);  
		    vardifg = rwemp.cctagan ;								
		    varmaxcob = 0 ;
		    varctaisc =  rwemp.cctaisc;    
		    varcentro2 =  rwemp.ncencosalt;   
		    varpresupuestos  =  0; 
			varccodenti	= rwemp.ccodenti;	
			varcdesenti	= rwemp.cdesenti;	
			varBeneficio=  rwemp.nflgBene;
		end loop; 
		update fin_ventas set ccodenti=varccodenti,cdesenti=varcdesenti;

		
		-- Validar cctabase,cctaicbper cctaotrib, cctatot, ccodcos, ccodcos2,	
		Update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' Codigo de Presupuesto no debe estar vacio, la cuenta obliga'), 
		resultado_migracion = 2  
		where  fin_ventas.ccodpresu='' and fin_ventas.cctabase in 
		(select ccodcue  from cf_plan where cf_plan.cper=rwperproceso.cperproceso and cf_plan.nafepre=2 );

		update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' CUENTA CONTABLE BASE IMPONIBLE NO EXISTE '), 
		resultado_migracion = 2  
		where fin_ventas.cper=rwperproceso.cperproceso and fin_ventas.es_con_migracion=0 and  
		concat(ccoddoc,cserie,cnumero,ccodruc) not in(
		Select distinct concat(ccoddoc,cserie,cnumero,ccodruc) From fin_ventas inner join cf_plan on
			fin_ventas.cper=cf_plan.cper and 
			fin_ventas.cctabase=cf_plan.ccodcue where fin_ventas.cper=rwperproceso.cperproceso group by concat(ccoddoc,cserie,cnumero,ccodruc)); 

		update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' CUENTA CONTABLE BASE ICBPER NO EXISTE '),  resultado_migracion = 2 
		where  fin_ventas.cper=rwperproceso.cperproceso and fin_ventas.es_con_migracion=0  and  fin_ventas.cctaicbper&lt;&gt;' '  
		AND concat(ccoddoc,cserie,cnumero,ccodruc)  not in(
		Select distinct concat(ccoddoc,cserie,cnumero,ccodruc)  From fin_ventas inner join cf_plan on
		fin_ventas.cper=cf_plan.cper and 
		fin_ventas.cctaicbper=cf_plan.ccodcue  WHERE  fin_ventas.cper=rwperproceso.cperproceso and fin_ventas.cctaicbper&lt;&gt;' ' group by concat(ccoddoc,cserie,cnumero,ccodruc) );

		update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' CUENTA CONTABLE OTROS TRIBUTOS Y CARGOS NO EXISTE ') ,  
		resultado_migracion = 2 
		where fin_ventas.cper=rwperproceso.cperproceso and  es_con_migracion=0 and fin_ventas.cctaotrib&lt;&gt;' ' 
		AND concat(ccoddoc,cserie,cnumero,ccodruc) not in(
		Select distinct concat(ccoddoc,cserie,cnumero,ccodruc) From fin_ventas inner join cf_plan on
			fin_ventas.cper=cf_plan.cper and 
			fin_ventas.cctaotrib=cf_plan.ccodcue  WHERE  fin_ventas.cper=rwperproceso.cperproceso  and fin_ventas.cctaotrib&lt;&gt;' ' group by concat(ccoddoc,cserie,cnumero,ccodruc));

		update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' CUENTA CONTABLE TOTAL NO EXISTE '),  resultado_migracion = 2 
		where fin_ventas.cper=rwperproceso.cperproceso and  es_con_migracion=0 and  concat(ccoddoc,cserie,cnumero,ccodruc) 
		not in(
		Select distinct concat(ccoddoc,cserie,cnumero,ccodruc)  From fin_ventas inner join cf_plan on
			fin_ventas.cper=cf_plan.cper and 
			fin_ventas.cctatot=cf_plan.ccodcue 
			WHERE  fin_ventas.cper=rwperproceso.cperproceso
			group by concat(ccoddoc,cserie,cnumero,ccodruc)); 

		/*f varBeneficio=1 then
		update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' Ctro DE COSTO Benef.NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_ventas.cper=rwperproceso.cperproceso and  fin_ventas.es_con_migracion=0
		and concat(ccoddoc,cserie,cnumero,ccodruc)  in(
		SELECT DISTINCT concat(ccoddoc,cserie,cnumero,ccodruc) 
		FROM FIN_VENTAS V LEFT JOIN CG_COSTOS_beneficiosl C ON
		LTRIM(V.ccodcos)=LTRIM(C.ccodcos)
		where v.cper=rwperproceso.cperproceso and TRIM(coalesce(V.ccodcos,''))='' AND coalesce(C.ccodcos,'ERROR')='ERROR');
			
		else	*/
		update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' CENTRO DE COSTO NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_ventas.cper=rwperproceso.cperproceso and  fin_ventas.es_con_migracion=0
		and concat(ccoddoc,cserie,cnumero,ccodruc)  in(
		SELECT DISTINCT concat(ccoddoc,cserie,cnumero,ccodruc) 
		FROM FIN_VENTAS V LEFT JOIN CG_COSTOS C ON
		LTRIM(V.ccodcos)=LTRIM(C.ccodcos)
		where v.cper=rwperproceso.cperproceso and  V.ccodcos&lt;&gt;'' AND coalesce(C.ccodcos,'ERROR')='ERROR'); 

		--end if;------

		if varcentro2=0  then	
			update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' CENTROS DE COSTO 2 ES NECESARIO POR SU CONFIGURACION') ,  es_con_migracion = 2 
			where  fin_ventas.ccodcos2&lt;&gt;'' ;
		END IF ;

		update  fin_ventas set obserror=CONCAT(ltrim(obserror),'-',' CENTROS DE COSTO 2 NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_ventas.cper=rwperproceso.cperproceso and  fin_ventas.es_con_migracion=0
		and concat(ccoddoc,cserie,cnumero,ccodruc)  in(
		SELECT DISTINCT concat(ccoddoc,cserie,cnumero,ccodruc) 
		FROM FIN_VENTAS V LEFT JOIN CG_COSTOS2 C ON
		LTRIM(V.ccodcos2)=LTRIM(C.ccodcos2)
		where cper=rwperproceso.cperproceso and  V.ccodcos2&lt;&gt;'' AND coalesce(C.ccodcos2,'ERROR')='ERROR'); 

		
		

		-- Cursor vucara documentos existentes drop table documentoexistentes 
		
		DROP TABLE IF EXISTS documentoexistentes;
		create temp table documentoexistentes as 
		select cper, cmes, ccodori, nasiento, ncomp,ccoddoc, cserie, cnumero    ----, ccodruc 
		---from cf_diariol where cper = '2024' and cmes='08' and ncomp = 1;
		from cf_diariol where cper = rwperproceso.cperproceso and ncomp = 1; 
		

		---- para evitar duplicados	
		update fin_ventas set obserror=CONCAT(ltrim(obserror),'-','ya registrado'),  resultado_migracion = 1  
		where cper=rwperproceso.cperproceso and concat(ccoddoc,cserie,cnumero)  
			in( select concat(ccoddoc,cserie,cnumero) from documentoexistentes 
				where concat(ccoddoc,cserie,cnumero) in(select concat(ccoddoc,cserie,cnumero) from fin_ventas where cper=rwperproceso.cperproceso and  es_con_migracion=0 ) );

		---- para evitar duplicados	 
		/*update fin_ventas set  nflgexisteanular  =  1 
		where cper=rwperproceso.cperproceso and concat(ccoddoc,cserie,cnumero,ccodruc)  
			in( select concat(ccoddoc,cserie,cnumero,ccodruc) from documentoexistentes 
				where concat(ccoddoc,cserie,cnumero,ccodruc) in(select concat(ccoddoc,cserie,cnumero,ccodruc) from fin_ventas where cper=rwperproceso.cperproceso and  resultado_migracion=3 ) );
		*/
		
		update fin_ventas 
		set nflgexisteanular  =  1 
		from (select a.ccoddoc, a.cserie, a.cnumero  from documentoexistentes a
				inner join fin_ventas b on a.ccoddoc = b.ccoddoc  and a.cserie = b.cserie and a.cnumero = b.cnumero  and  es_con_migracion=3 
		) anu 
		where fin_ventas.ccoddoc = anu.ccoddoc  and fin_ventas.cserie = anu.cserie and fin_ventas.cnumero = anu.cnumero ; 

		/*
		--- para evitar anulados
		update fin_ventas set obserror=CONCAT(ltrim(obserror),'-','ya anulado') ,  resultado_migracion = 4 
		where cper=rwperproceso.cperproceso and concat(ccoddoc,cserie,cnumero,ccodruc)  in(
		 select concat(ccoddoc,cserie,cnumero,ccodruc) from cf_diariol 
			where cper=rwperproceso.cperproceso and ccodruc IN(select ccodruc from cg_entitrib where nutianu=1) and concat(ccoddoc,cserie,cnumero,ccodruc) 
		  in(select concat(ccoddoc,cserie,cnumero,ccodruc) from fin_ventas where cper=rwperproceso.cperproceso and  resultado_migracion in(0,4) ));
		  */

		-- Validar si todo el documento esta sin error en sus registros 26/03/2025
	    update fin_ventas
		set resultado_migracion = 2,obserror=case when coalesce(obserror,'')='' then 'Se encontro incosintencia en alguno de los Item del documento.'  else obserror end
		from(select ccoddoc, cserie, cnumero, ccodruc 
			from fin_ventas 
			where   trim(coalesce(obserror,'')) &lt;&gt; '' and     resultado_migracion = 2 ----es_con_migracion in(0,3) 
			group by ccoddoc, cserie, cnumero, ccodruc
		) derror 
		where fin_ventas.ccoddoc = derror.ccoddoc  and fin_ventas.cserie = derror.cserie and 
			fin_ventas.cnumero = derror.cnumero and  fin_ventas.ccodruc = derror.ccodruc; ---- and derror.obserror not like '%"ya registrado"%';

		--select * from fin_ventas where resultado_migracion = 3
		for rw in select distinct cper, cmes, ccodori, ccodori_p, ccodsu, ccodsu_p,ccodflu,flgctares,flgctaimp ,flgctaact,flggencomp  
						FROM fin_ventas  where cper =  rwperproceso.cperproceso and  trim(coalesce(obserror,'')) = ''  loop -- esten OK 

						
			varlreg     = rw.ccodsu; --ccodsu,
			varlregcont = rw.ccodsu_p; --ccoddu_p,
			varccodflu  = rw.ccodflu;
			varpresua   = rw.flgctares;
			varpresui   = rw.flgctaimp;
			varpresur   = rw.flgctaact;
			varsoloventas = rw.flggencomp;
			varresumir = 0; ----case when rw.ccond='CON' then  1 ELSE 0 END;

			VCMAXASIENTO = 'SELECT NORIMES' || cast(rw.cmes as integer)::char(2) || ' AS NORIGEN FROM CF_ORIGENL WHERE CPER = ''' || rw.cper || ''' AND CCODORI = ''' || rw.ccodori ||'''' ;
			for rw2 in EXECUTE VCMAXASIENTO	loop
				varmax  = coalesce(RW2.NORIGEN,0); ---+ 1; -- RW2.NORIGEN + 1;
			end loop;

			VCMAXASIENTO_p = 'SELECT NORIMES' || cast(rw.cmes as integer)::char(2) || ' AS NORIGEN FROM CF_ORIGENL WHERE CPER = ''' || rw.cper || ''' AND CCODORI = ''' || rw.ccodori_p ||'''' ;
			for rw2 in EXECUTE VCMAXASIENTO_p  loop
				varmaxcob  = coalesce(RW2.NORIGEN,0);---- + 1; -- RW2.NORIGEN + 1;
			end loop;

			
			
			-- Truncar tabla Cada vez carga data por cada subdiario 		
			truncate table cf_regven_integra; 

			INSERT INTO cf_regven_integra(cper,cmes,
				    ffechadoc, ffechaven, ccoddoc, cserie, cnumero, ccodenti, cdesenti, 
				    ctipdoc, ccodruc, crazsoc, nbase2, nbase1, nexo, nina, nisc, 
				    nigv1, nbase3, ntots, ntc, freffec, crefdoc, crefser, crefnum, 
				    cmreg, ndolar, ffechaven2, ccond, ccodcos, ccodcos2, cctabase, 
				    cctaotrib, cctatot, nresp, nporre, nimpres, cserre, cnumre, ffecre, 
				    ccodpresu, nigv, cglosa, ccodpago, nperdenre, nbaseres, cctaperc, 
				    cctacobra, flaganalb, 
				    flaganalo, flaganalt, flagccosb, flagccoso, flagccost, flagpresub, 
				    flagpresuo, flagpresut, nasiento, 
				    nicbpers, cctaicbper)
			SELECT  a.cper,a.cmes,ffechadoc, ffechaven, ccoddoc,cserie, cnumero, ccodenti, cdesenti, 
				    ctipdoc, ccodruc,crazsoc,  nbase2,nbase1, nexo,nina, nisc,
				    nigv1,nbase3,ntots,ntc,freffec, crefdoc, crefser, crefnum, 
				    cmreg, ndolar, ffechaven2,upper(ccond)  as ccond,  ccodcos, ccodcos2, cctabase, 
				    cctaotrib,cctatot,nresp,nporre,nimpres,cserre,cnumre,ffecre,
			        ccodpresu, nigv,cglosa,ccodpago,nperdenre,nbaseres,cctaperc,
                    case when cmreg = 'S' then ccodcue_ps else  ccodcue_pd end as cctacobra,b.NANACUE as flaganalb,    
			        0 as flaganalo, d.NANACUE as flaganalt,b.NAFECOS as flagccosb, 0 as flagccoso, d.NAFECOS as flagccost, 
			        b.NAFEPRE  as flagpresub, 0  as flagpresuo, d.NAFEPRE  as flagpresut,0 as nasiento,
			        nicbpers,cctaicbper
			        FROM fin_ventas a 
			        inner join cf_plan b on b.cper = a.cper and a.cctabase = b.ccodcue    --ctabase
			        left join cf_plan c on c.cper = a.cper and a.cctaotrib = c.ccodcue    --ctaotrib
			        inner join cf_plan d on d.cper = a.cper and a.cctatot = d.ccodcue     --ctatotal
			        where a.cper=rw.cper and a.ccodori = rw.ccodori and  
						  a.cmes = rw.cmes and a.ccodsu = rw.ccodsu and a.ccodflu = rw.ccodflu and   -- KMM - 01-04-2025 - 
			        trim(coalesce(a.obserror,'')) = ''
					and a.es_con_migracion in(0,3) and coalesce(a.resultado_migracion,0)=0 
					and nflgexisteanular = 0 
			        order by a.ccoddoc,a.cserie,a.cnumero,a.ccodruc asc; 		   

			-- generar asiento 
			vnumasiento=0;
			vccoddoc='';
			vcserie='';
			vcnumero ='';
			vctipdoc ='';
			vccodruc ='';
			vxcctatot ='';

			for rwnumerado in Select distinct ccoddoc,cserie,cnumero,ctipdoc,  ccodruc,cctatot from cf_regven_integra 
				group by ccoddoc,cserie,cnumero,ctipdoc,  ccodruc,cctatot  
				order by ccoddoc,cserie,cnumero,ccodruc loop
				
				if rwnumerado.ccoddoc = vccoddoc  AND rwnumerado.cserie  = vcserie AND rwnumerado.cnumero = vcnumero AND 
					rwnumerado.ctipdoc = vctipdoc  AND rwnumerado.ccodruc = vccodruc AND rwnumerado.cctatot = vxcctatot THEN 			

					vnumasiento=vnumasiento;
				ELSE
					vnumasiento=vnumasiento +1;

					vccoddoc=rwnumerado.ccoddoc;
					vcserie=rwnumerado.cserie;
					vcnumero =rwnumerado.cnumero;
					vctipdoc =rwnumerado.ctipdoc;
					vccodruc =rwnumerado.ccodruc;
					vxcctatot =rwnumerado.cctatot;
					
					update cf_regven_integra set nasiento=vnumasiento where ccoddoc=vccoddoc and 
					       cserie=vcserie and cnumero=vcnumero and ctipdoc=vctipdoc and ccodruc=vccodruc and
					       cctatot=vxcctatot;
					
				END IF ;

			end loop;
	

 			
				nreturn = (SELECT * FROM fin_registro_ventas_integracion_estandar(rw.cper,
												  rw.cmes,
												  rw.ccodori,
												  varccodflu,
												  varpresua,
												  varpresui,
												  varpresur,
												  varsoloventas, 
												  varigv,
												  varlreg,
												  vardifp,
												  vardifpd,
												  vardifph,
												  vardifg,				
												  varmax,
												  rw.ccodori_p,
												  rw.ccodsu_p,
												  varresumir,
												  varmaxcob,
												  varctaisc));	

			end loop; 

			

			-- Actualiza registro procesado correctamente 
			update fin_ventas set resultado_migracion = 1 where es_con_migracion = 0 and coalesce(resultado_migracion,0)=0  and idventas in (select idventas from cf_regven_integra); 
			
			-- Actualizar los anulados a 4 
			update fin_ventas set resultado_migracion = 4 where es_con_migracion = 3 and trim(coalesce(obserror,'')) = '' ;  

			-- anular Los registros 
			--for rwanuladoc in select cper, ccoddoc, cserie, cnumero, ccodruc, ccodrucanula from fin_ventas where resultado_migracion = 3 loop 
			DROP TABLE IF EXISTS documentosAnula;
			create temp table documentosAnula as 
			select a.cper, a.cmes, a.ccodori, a.nasiento, a.ncomp,a.ccoddoc, a.cserie, a.cnumero, a.ccodruc, b.ccodrucanula 
			from cf_diariol a
			inner join fin_ventas b  on a.ccoddoc = b.ccoddoc  and a.cserie = b.cserie and a.cnumero = b.cnumero and a.ccodruc = b.ccodruc 
							and trim(coalesce(obserror,'')) = ''
							and es_con_migracion = 3 
			where a.cper = rwperproceso.cperproceso ; --and a.ncomp = 1; 
				
			
			for rwanuladoc in select cper, cmes, ccodori, nasiento, ncomp,ccoddoc, cserie, cnumero, ccodruc, ccodrucanula from documentosAnula  loop 
				
				update cf_diariol
				set ccodruc = rwanuladoc.ccodrucanula,
				       ndebe=0.00, nhaber=0.00, ndebes=0.00, nhabers=0.00, ndebed=0.00, 
				       nhaberd=0.00, nbase1=0.00, nigv1=0.00, nbase2=0.00, nigv2=0.00, 
				       nbase3=0.00, nigv3=0.00, nina=0.00, nexo=0.00, nisc=0.00, nivabase=0.00, nivaimp=0.00, 
				       ntot=0.00, nbase1s=0.00, nigv1s=0.00, nbase2s=0.00, nigv2s=0.00, nbase3s=0.00, 
				       nigv3s=0.00, ninas=0.00, nexos=0.00, niscs=0.00, nivabases=0.00, nivaimps=0.00, 
				       ntots=0.00, nbase1d=0.00, nigv1d=0.00, nbase2d=0.00, nigv2d=0.00, nbase3d=0.00, 
				       nigv3d=0.00, ninad=0.00, nexod=0.00, niscd=0.00, nivabased=0.00, nivaimpd=0.00, 
				       ntotd=0.00,cmesc=''
				where cper = rwanuladoc.cper and cmes = rwanuladoc.cmes and  ccodori = rwanuladoc.ccodori and nasiento = rwanuladoc.nasiento  ; 
			end loop; 

			--raise exception 'ccod sub %', rw.cper; 

			-- Actualiza subdiartio y Flujos 
			for rwctualizasubdiario  in select distinct cper,cmes  from cf_regven_integra loop

				nreturn = (select * from func_regenerar_correlativo_subdiario(rwctualizasubdiario.cper, rwctualizasubdiario.cmes) as infograba1); 
				nreturn = (select * from func_regenerar_saldos_plan_flujo(rwctualizasubdiario.cper, rwctualizasubdiario.cmes) as infograba2); 

			end loop;
		
	end loop; -- Periodo 

end; 
$BODY$ 
LANGUAGE 'plpgsql' VOLATILE</value>
  </data>
  <data name="txt_cobra01.Text" xml:space="preserve">
    <value>
CREATE OR REPLACE FUNCTION fin_guardar_cobranzapago_integrador(
    OUT resultado text,
    IN pjson text)
  RETURNS text AS
$BODY$
----- Fecha : 24/02/2025 anticipo colegio de contadores

declare 
	a_json json;
begin

    /*
    Tipo: ntipocobpag   1: Cobranzas
			2: Pagos
    */
    
    -- 0. Truncar tabla
    truncate table fin_cobranzapago;
    a_json = pjson::json;
    
    -- 1. Importar datos
    INSERT INTO fin_cobranzapago(
        idcobranzapago, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodflu, 
	    ntipocobpag, ffechacan, cdoccan, csercan, cnumcan, ccuecan, cmoncan, 
	    nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, ffechadoc, 
	    ffechaven, ccodenti, ccodruc, crazsoc, nimportes, nimported, 
	    ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, nperdenre, 
	    cserre, cnumre, ffecre, es_con_migracion, es_anticipo_automatico
    )    
    select idcobranzapago, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodflu, 
	    ntipocobpag, ffechacan, cdoccan, csercan, cnumcan, ccuecan, cmoncan, 
	    nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, ffechadoc, 
	    ffechaven, ccodenti, ccodruc, crazsoc, nimportes, nimported, 
	    ccodcue, cglosa::varchar(80) as cglosa, ccodcos, ccodcos2, nporre, nimpperc, nperdenre, 
	    cserre, cnumre, ffecre, es_con_migracion, es_anticipo_automatico
    from json_to_recordset(a_json)
    as t(
        idcobranzapago numeric(20,0),  
	ccod_empresa character(3),
	cper character(4),
	cmes character(2),
	ccodori character(3),
	ccodsu character(2),
	ccodflu character(4),
	ntipocobpag integer,  -- 1 = Cobranzas, 2 = pagos 
	ffechacan date,
	cdoccan character(2),
	csercan character(20),
	cnumcan character(20),
	ccuecan character(20),
	cmoncan character(1),
	nimporcan numeric(15,2),
	ntipcam numeric(10,6),
	ccodpago character(3),
	ccoddoc character(2),
	cserie character(20),
	cnumero character(20),
	ffechadoc date,
	ffechaven date,
	ccodenti character(11),
	ccodruc character(15),
	crazsoc character(150),
	nimportes numeric(15,2),
	nimported numeric(15,2),
	ccodcue character(20),
	cglosa Text,
	ccodcos character(9),
	ccodcos2 character(9),
	nporre numeric(5,2),
	nimpperc numeric(15,2),
	nperdenre numeric(1,0),
	cserre character(6),
	cnumre character(13),
	ffecre date,
	es_con_migracion numeric(1,0),
	es_anticipo_automatico numeric(1,0)
    );

    --2. llamar funcion de validar/generar asientos..., debe actualizar campo: resultado_migracion
        -- resultado_migracion se debe completar luego de validar y/o generar el asiento
        -- en vez de reemplazar el codigo en es_con_migracion, se debe agregar el estado en  "resultado_migracion"

	perform fin_importar_cobranzapago_integrador_principal();
    

    --3. Informe de importacion    
    select json_agg(json_build_object(
        'idcobranzapago', fc.idcobranzapago, 'obserror', fc.obserror, 'es_con_migracion', fc.es_con_migracion, 'resultado_migracion', fc.resultado_migracion
    ))::text
    from fin_cobranzapago fc
    into resultado;
    
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE</value>
  </data>
  <data name="txt_cobra02.Text" xml:space="preserve">
    <value>-- FUNCTION: public.fin_importar_cobranzapago_integrador_cancelacion_impcobpag(character)

-- DROP FUNCTION IF EXISTS public.fin_importar_cobranzapago_integrador_cancelacion_impcobpag(character);
--select * from fin_importar_cobranzapago_integrador_cancelacion_impcobpag('2025')
CREATE OR REPLACE FUNCTION public.fin_importar_cobranzapago_integrador_cancelacion_impcobpag(
	vper character)
    RETURNS integer
     
AS $BODY$

DECLARE
	rw record; 
	vcta character(20); 
	vruc character(15);
	/*
		Autor: Kim martinez
		select fin_importar_cobranzapago_integrador_cancelacion_impcobpag('2025'::character(4)) as infograba; 
	*/
BEGIN
	raise notice 'Borrando'; 
	
	drop table if exists tempDocmentos;
	
	create temp table tempDocmentos as 
	select ccoddoc, cserie, cnumero, ccodruc from fin_cobranzapago group by ccoddoc, cserie, cnumero, ccodruc; 

	--select ccoddoc, cserie, cnumero, ccodruc from fin_cobranzapago_integra group by ccoddoc, cserie, cnumero, ccodruc; 


	--update cf_diariol set cmesc = '' where cper = vper; 
	
	update cf_diariol 
	set cmesc = '' 
	from (select ccoddoc, cserie, cnumero, ccodruc from tempDocmentos) p
	where cf_diariol.ccoddoc = p.ccoddoc and cf_diariol.cserie = p.cserie and cf_diariol.cnumero = p.cnumero and cf_diariol.ccodruc = p.ccodruc and cf_diariol.cper = vper and cf_diariol.cmesc &lt;&gt; '';

	raise notice 'termino borrar'; 
	
	for rw in select dl.ccodcue, dl.ccodruc, dl.ccoddoc, dl.cserie, dl.cnumero, dl.cmreg, max(dl.cmes) cmesc, 
				sum(case when cmreg = 'S' then ndebes - nhabers else ndebed - nhaberd end) saldo
			from cf_diariol dl
			inner join cf_plan pl on dl.ccodcue = pl.ccodcue and dl.cper = pl.cper and pl.nanacue = 2 and pl.ntipcue in (1,2)
			inner join tempDocmentos doc on dl.ccoddoc = doc.ccoddoc and dl.cserie = doc.cserie and dl.cnumero = doc.cnumero and dl.ccodruc = doc.ccodruc
			where dl.cper = vper and dl.cmes between '00' and '13'
			group by  dl.ccodcue, dl.ccodruc, dl.ccoddoc, dl.cserie, dl.cnumero, dl.cmreg
			having sum(case when cmreg = 'S' then ndebes - nhabers else ndebed - nhaberd end) = 0			
		loop
		
		raise notice 'Actalizando registros  '; 		
		update cf_diariol 
		set cmesc = rw.cmesc 
		where     ccodcue = rw.ccodcue
			  and ccodruc = rw.ccodruc
			  and ccoddoc  = rw.ccoddoc
			  and cserie  = rw.cserie
			  and cnumero = rw.cnumero
			  and cper = vper ;		
			
	end loop;

	return 1;
end; 
$BODY$ 
	LANGUAGE 'plpgsql' VOLATILE</value>
  </data>
  <data name="txt_cobra03.Text" xml:space="preserve">
    <value>-- FUNCTION: public.fin_importar_cobranzapago_integrador_principal()
-- select * from cf_diariol where cper = '2025' and cmes = '03' and  ccodori = '003' and nasiento = 6
-- DROP FUNCTION IF EXISTS public.fin_importar_cobranzapago_integrador_principal();
-- select * from fin_importar_cobranzapago_integrador_principal()  
CREATE OR REPLACE FUNCTION public.fin_importar_cobranzapago_integrador_principal(
	)
    RETURNS void
AS $BODY$


---- Fecha Modificacion : 24/02/2025  pdi-278
---- Fecha Modificacion cancelacion : 27/03/2028 PDI-342
---- Fecha Modifcacion : 01/04/2024 en maquina de Luis Nuñez x Kim caso de Lizet	
DECLARE 
	RW RECORD;
	rwperproceso record; 
	rwemp record; 
	vardifp character(10);
	vardifpd character(10);
	vardifph character(10); 
	vardifg character(10);
	varmax integer;
	VCMAXASIENTO text = ''; 
	rw2 record;  
	rwanuladoc record;  
	nreturn integer=0;
	rwctualizasubdiario record;
	vcregper character(20); 
	vcregperc character(20); 
	varperc character(20); 
	vccodenti character(11);
	vflag_dp numeric(1,0); 
	
BEGIN

	--varcentro2=0;
	-- Validaciones fin_cobranzapago 
	vflag_dp := (select flag_dp from registro_dp where codigo_dp = 'DP008'); 
	vflag_dp := coalesce(vflag_dp,0); 
		

	for rwperproceso in select distinct cper as cperproceso, ntipocobpag from fin_cobranzapago order by ntipocobpag loop 	
		-- propiedades de empresa por periodos 
		for rwemp in select cper, cctaper, cctagan, cregper,cregperc,ccodenti
			     from cg_emppro  
			     where cper =rwperproceso.cperproceso loop		
		   
			    vcregper = rwemp.cregper; 
			    vcregperc = rwemp.cregperc;		    
			    vardifp = rwemp.cctaper ;		    
			    vardifpd = (select cdesdeb from cf_plan where cper = rwemp.cper and ccodcue = rwemp.cctaper);  
			    vardifph = (select cdeshab from cf_plan where cper = rwemp.cper and ccodcue = rwemp.cctaper);		    
			    vardifg = rwemp.cctagan ;	
			    vccodenti =	 rwemp.ccodenti;   							
			    if rwperproceso.ntipocobpag = 1 then -- Cobranzas 
				varperc = vcregper; 
			    else 
				varperc = vcregperc;  -- Pagos 
			    end if; 
		end loop; 

		
		

		update fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' CAMPO CCODCUE NO EXISTE EN PCGE') ,  resultado_migracion = 2 
		WHERE CCODCUE IN(
		SELECT A.CCODCUE  FROM fin_cobranzapago A left join cf_plan b on a.CCODCUE=b.ccodcue and b.cper=rwperproceso.cperproceso
		where coalesce(b.ccodcue ,'ERROR')='ERROR' and A.CCODCUE&lt;&gt;'');
		

		update fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' CAMPO CCODCUE ESTA VACIO ') ,  resultado_migracion = 2 
		WHERE CCODCUE IN(
		SELECT A.CCODCUE  FROM fin_cobranzapago A left join cf_plan b on a.CCODCUE=b.ccodcue and b.cper=rwperproceso.cperproceso
		where coalesce(b.ccodcue ,'ERROR')='ERROR' and A.CCODCUE='');

			
		update fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' CAMPO CCUECAN  NO EXISTE EN PCGE') ,  resultado_migracion = 2 
		WHERE CCUECAN IN(
		SELECT A.CCUECAN  FROM fin_cobranzapago A left join cf_plan b on a.CCUECAN=b.ccodcue and b.cper=rwperproceso.cperproceso
		where coalesce(b.ccodcue ,'ERROR')='ERROR' and A.CCUECAN&lt;&gt;'');

		update fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' CAMPO CCUECAN ESTA VACIO ') ,  resultado_migracion = 2 
		WHERE CCUECAN IN(
		SELECT A.CCUECAN  FROM fin_cobranzapago A left join cf_plan b on a.CCUECAN=b.ccodcue and b.cper=rwperproceso.cperproceso
		where coalesce(b.ccodcue ,'ERROR')='ERROR' and A.CCUECAN='') ;

		update fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' RUC NO EXISTE ') ,  resultado_migracion = 2 
		WHERE ccodruc IN(
		select C.ccodruc  from fin_cobranzapago c  left join cg_entitrib e on e.ccodruc=c.ccodruc
			where coalesce(e.ccodruc,'ERROR')='ERROR');
		
		update  fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' CENTRO DE COSTO NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_cobranzapago.cper=rwperproceso.cperproceso and   fin_cobranzapago.es_con_migracion=0 and  fin_cobranzapago.ccodcos&lt;&gt;' ' AND idcobranzapago not in(
		Select idcobranzapago From fin_cobranzapago inner join CG_COSTOS on
		fin_cobranzapago.ccodcos=CG_COSTOS.ccodcos  WHERE  fin_cobranzapago.cper=rwperproceso.cperproceso); 

		update  fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' CENTROS DE COSTO 2 NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_cobranzapago.cper=rwperproceso.cperproceso and   fin_cobranzapago.es_con_migracion=0 and  fin_cobranzapago.ccodcos2&lt;&gt;' ' and idcobranzapago not in(
		Select idcobranzapago From fin_cobranzapago inner join CG_COSTOS2 on
		fin_cobranzapago.ccodcos2=CG_COSTOS2.ccodcos2  WHERE  fin_cobranzapago.cper=rwperproceso.cperproceso); 

		update  fin_cobranzapago set ccodenti=vccodenti where trim(coalesce(ccodenti,''))='';

		
		-- Falta Validar si la cuenta no existe 
		---
		-- Cursor no existe provision 
		DROP TABLE IF EXISTS documentonoprovisionados;
		create temp table documentonoprovisionados as		
		select idcobranzapago, rc.ccodcue, rc.ccodruc, rc.ccoddoc, rc.cserie, rc.cnumero,dl.ccodcue as d_ccodcue,  dl.ccodruc as d_ccodruc, 
			dl.ccoddoc as d_ccoddoc, dl.cserie as d_cserie, dl.cnumero as d_cnumero
	        from fin_cobranzapago rc 
	        left join cf_diariol dl on rc.ccodcue = dl.ccodcue and 
	       							  rc.ccodruc = dl.ccodruc and 
	       							  rc.ccoddoc = dl.ccoddoc and 
	       							  rc.cserie = dl.cserie and 
	       							  rc.cnumero = dl.cnumero and 
	       							  dl.ncomp = 1 and rc.cper =rwperproceso.cperproceso
		where  dl.ccodcue is null; 
			
		update fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' Documento no Provisionado...'),  resultado_migracion = 2  
		where cper=rwperproceso.cperproceso and ntipocobpag = rwperproceso.ntipocobpag  and concat(ccoddoc,cserie,cnumero,ccodruc)  in ( select concat(ccoddoc,cserie,cnumero,ccodruc) from documentonoprovisionados );
		-- Fin - Cursor no existe provision 

		-- Validar doble provision 
		DROP TABLE IF EXISTS documentobobleprovision;
		create temp table documentobobleprovision as
		select rc.ccodcue, rc.ccodruc, rc.ccoddoc, rc.cserie, rc.cnumero, count(dl.ccodcue) contar
		from (select distinct ccodcue, ccodruc, ccoddoc, cserie, cnumero from regcobimp ) as rc
					inner join cf_diariol dl on rc.ccodcue = dl.ccodcue and 
											rc.ccodruc = dl.ccodruc and 
											rc.ccoddoc = dl.ccoddoc and 
											rc.cserie = dl.cserie and 
											rc.cnumero = dl.cnumero and 
											dl.ncomp = 1 and dl.cper =  rwperproceso.cperproceso
		group by  rc.ccodcue, rc.ccodruc, rc.ccoddoc, rc.cserie, rc.cnumero
		having count(dl.ccodcue) &gt; 1 ; 
		
		update fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' Documento con Doble provisión...'),  resultado_migracion = 2 
		where cper=rwperproceso.cperproceso and ntipocobpag = rwperproceso.ntipocobpag  and concat(ccoddoc,cserie,cnumero,ccodruc) 
			in ( select concat(ccoddoc,cserie,cnumero,ccodruc) from documentobobleprovision );
		-- Fin Validar doble provision 

----------------------------cancelaciones -------------------------------------------------------------------------------------
		DROP TABLE IF EXISTS tmpDocCancelados;
		create temp table tmpDocCancelados as			
		select DISTINCT dl.ccodcue, dl.ccodruc, dl.ccoddoc, dl.cserie, dl.cnumero,cmreg, 
			sum(case when dl.cmreg ='S' then case when dl.ncomp=1 then ndebes-nhabers else 0 end else case when dl.ncomp=1 then ndebed-nhaberd else 0 end end) provision, 
			sum(case when dl.cmreg ='S' then case when dl.ncomp=0 then nhabers-ndebes else 0 end else case when dl.ncomp=0 then nhaberd-ndebed else 0 end end) amortizacion
		from cf_diariol dl
		inner join cf_diario d on dl.cper = d.cper and dl.cmes = d.cmes and dl.ccodori = d.ccodori and dl.nasiento = d.nasiento 
		inner join cg_doc doc on dl.ccoddoc = doc.ccoddoc 
		inner join cf_plan pl on pl.cper = rwperproceso.cperproceso and dl.ccodcue = pl.ccodcue and pl.nanacue = 2 
		inner join (select ccodcue, ccodruc, ccoddoc, cserie, cnumero 
					from fin_cobranzapago where cper = rwperproceso.cperproceso and coalesce(es_con_migracion,0) = 0
					group by ccodcue, ccodruc, ccoddoc, cserie, cnumero) porpag
					 on dl.ccodcue = porpag.ccodcue and dl.ccodruc = porpag.ccodruc and dl.ccoddoc = porpag.ccoddoc and  dl.cserie = porpag.cserie and  dl.cnumero = porpag.cnumero 
		where dl.cper = rwperproceso.cperproceso
			  -- and dl.ccodruc = '10440669081'	
		group by  dl.ccodcue, dl.ccodruc, dl.ccoddoc, dl.cserie, dl.cnumero,cmreg; 

		DROP TABLE IF EXISTS tmpDocPagoexceso;
		create temp table tmpDocPagoexceso as
		select dl.ccodcue, dl.ccodruc, dl.ccoddoc, dl.cserie, dl.cnumero 
		from (select dl.ccodcue, dl.ccodruc, dl.ccoddoc, dl.cserie, dl.cnumero, dl.cmreg, dl.provision, dl.amortizacion, porpag.nimporcan,
						(abs(dl.provision) - abs(dl.amortizacion)) saldo ,
					    case when (abs(dl.provision) - abs(dl.amortizacion)) &gt;= abs(porpag.nimporcan) then 0 else 1 end as flgprocesa
				from tmpDocCancelados dl
				inner join (select a.ccodcue, a.ccodruc, a.ccoddoc, a.cserie, a.cnumero,
								sum(case when b.cmreg = 'S' then (case when a.cmoncan = 'S' then a.nimporcan else a.nimporcan * a.ntipcam end) 
									else (case when a.cmoncan = 'D' then a.nimporcan else a.nimporcan / a.ntipcam end) end) as nimporcan
							from fin_cobranzapago a
							inner join tmpDocCancelados b on a.ccodcue = b.ccodcue and a.ccodruc = b.ccodruc and a.ccoddoc = b.ccoddoc and  a.cserie = b.cserie and  a.cnumero = b.cnumero 
							where a.cper = rwperproceso.cperproceso and coalesce(es_con_migracion,0) = 0
							group by a.ccodcue, a.ccodruc, a.ccoddoc, a.cserie, a.cnumero 
				) porpag on dl.ccodcue = porpag.ccodcue and dl.ccodruc = porpag.ccodruc and dl.ccoddoc = porpag.ccoddoc and  dl.cserie = porpag.cserie and  dl.cnumero = porpag.cnumero 
		) dl where  flgprocesa =  1;  

		-- Actulaizar las cobranzas en exceso 
		update fin_cobranzapago set obserror=CONCAT(ltrim(obserror),'-',' El Importe de cancelación excede el Saldo...'),  resultado_migracion = 2 
		where cper=rwperproceso.cperproceso and ntipocobpag = rwperproceso.ntipocobpag  and concat(ccoddoc,cserie,cnumero,ccodruc) 
			in ( select concat(ccoddoc,cserie,cnumero,ccodruc) from tmpDocPagoexceso );
----------------------------cancelaciones -------------------------------------------------------------------------------------
		
			
		for rw in select distinct cper, cmes, ccodori, ccodsu, ccodflu
			  FROM fin_cobranzapago  
			  where cper =  rwperproceso.cperproceso and ntipocobpag = rwperproceso.ntipocobpag and  trim(coalesce(obserror,'')) = ''   loop -- esten OK 

			  VCMAXASIENTO = 'SELECT NORIMES' || cast(rw.cmes as integer)::char(2) || ' AS NORIGEN FROM CF_ORIGENL WHERE CPER = ''' || rw.cper || ''' AND CCODORI = ''' || rw.ccodori ||'''' ;
			  for rw2 in EXECUTE VCMAXASIENTO	loop
				varmax  = coalesce(RW2.NORIGEN,0)+1; ---+ 1; -- RW2.NORIGEN + 1;
			  end loop;

			raise notice 'asiento % ',VCMAXASIENTO;  
				
			  -- Truncar tabla Cada vez carga data por cada subdiario 		
			  truncate table fin_cobranzapago_integra; 

			 INSERT INTO fin_cobranzapago_integra(idcobranzapago, ffechacan, cdoccan, csercan, cnumcan, ccuecan, 
							    cmoncan, nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, 
							    ffechadoc, ffechaven, ccodenti, ccodruc, crazsoc, nimportes, 
							    nimported, ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, 
							    nperdenre, cserre, cnumre, ffecre,es_anticipo_automatico)
			 SELECT  idcobranzapago, ffechacan, cdoccan, csercan, cnumcan, ccuecan, 
				    cmoncan, nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, 
				    ffechadoc, ffechaven, ccodenti, ccodruc, crazsoc, nimportes, 
				    nimported, ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, 
				    nperdenre, cserre, cnumre, ffecre, es_anticipo_automatico
			 FROM fin_cobranzapago			        
			 where fin_cobranzapago.cper=rw.cper and  fin_cobranzapago.cmes = rw.cmes and  -- KMM - 01-04-2025 - 
				ntipocobpag = rwperproceso.ntipocobpag and 
				ccodori = rw.ccodori and  fin_cobranzapago.ccodsu = rw.ccodsu  and  fin_cobranzapago.ccodflu = rw.ccodflu and  -- KMM - 01-04-2025 - 
				trim(coalesce(obserror,'')) = '' and coalesce(resultado_migracion,0) = 0
				and es_con_migracion in(0) 
				order by ccoddoc,cserie,cnumero,ccodruc asc; 			

			-- Integra las cobranzas 
			nreturn = (SELECT * FROM fin_importar_cobranzapago_integrador(rw.cper,
											  rw.cmes,
											  rw.ccodori,
											  rw.ccodflu,
											  rw.ccodsu,											 
											  vardifp,
											  vardifpd,
											  vardifph,
											  vardifg,											  				
											  varmax,											  
											  rwperproceso.ntipocobpag,
											  varperc));
			
			raise notice 'Mando asiento % ,%,%',rw.cmes, rw.ccodori, varmax;  

			update fin_cobranzapago set resultado_migracion = 1 where es_con_migracion = 0 and idcobranzapago in (select idcobranzapago from fin_cobranzapago_integra); 

			--truncate table fin_cobranzapago_integra; 
			INSERT INTO fin_cobranzapago_integra(idcobranzapago, ffechacan, cdoccan, csercan, cnumcan, ccuecan, 
							    cmoncan, nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, 
							    ffechadoc, ffechaven, ccodenti, ccodruc, crazsoc, nimportes, 
							    nimported, ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, 
							    nperdenre, cserre, cnumre, ffecre,es_anticipo_automatico)
			 SELECT  idcobranzapago, ffechacan, cdoccan, csercan, cnumcan, ccuecan, 
				    cmoncan, nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, 
				    ffechadoc, ffechaven, ccodenti, ccodruc, crazsoc, nimportes, 
				    nimported, ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, 
				    nperdenre, cserre, cnumre, ffecre,es_anticipo_automatico
			 FROM fin_cobranzapago			        
			 where fin_cobranzapago.cper=rw.cper and fin_cobranzapago.cmes = rw.cmes and -- KMM - 01-04-2025 - 
				ntipocobpag = rwperproceso.ntipocobpag and 
				ccodori = rw.ccodori and  fin_cobranzapago.ccodsu = rw.ccodsu  and  fin_cobranzapago.ccodflu = rw.ccodflu and  -- KMM - 01-04-2025 - 
				trim(coalesce(obserror,'')) = ''
				and es_con_migracion in(3) 
				order by ccoddoc,cserie,cnumero,ccodruc asc; 
			
		end loop; 

		-- Actualiza registro procesado correctamente 
			

		-- Actualizar los anulados a 4 
		update fin_cobranzapago set resultado_migracion = 4 where es_con_migracion = 3 and trim(coalesce(obserror,'')) = '' ;  
		-- anular Los registros 
			
		
		    DROP TABLE IF EXISTS documentosAnula;
			create temp table documentosAnula as 
			select a.cper, a.cmes, a.ccodori, a.nasiento, a.ncomp,a.ccoddoc, a.cserie, a.cnumero, a.ccodruc
			from cf_diariol a
			inner join fin_cobranzapago b  on a.ccoddoc = b.cdoccan  and a.cserie = b.csercan and a.cnumero = b.cnumcan and a.ccodcue = b.ccuecan 
							and trim(coalesce(obserror,'')) = ''
							and es_con_migracion = 3 
			where a.cper = rwperproceso.cperproceso and a.ncomp =0    ;

			for rwanuladoc in select cper, cmes, ccodori, nasiento, ncomp,ccoddoc, cserie, cnumero, ccodruc from documentosAnula  loop 
				DELETE FROM cf_diariol
				where cper = rwanuladoc.cper and cmes = rwanuladoc.cmes and  ccodori = rwanuladoc.ccodori and nasiento = rwanuladoc.nasiento  ; 
				
				DELETE FROM cf_diario
				where cper = rwanuladoc.cper and cmes = rwanuladoc.cmes and  ccodori = rwanuladoc.ccodori and nasiento = rwanuladoc.nasiento  ; 
			end loop; 

		--raise exception 'ccod sub %', rw.cper; 
		-- Actualiza subdiartio y Flujos 
		for rwctualizasubdiario  in select distinct cper,cmes  from fin_cobranzapago  loop

			nreturn = (select * from func_regenerar_correlativo_subdiario(rwctualizasubdiario.cper, rwctualizasubdiario.cmes) as infograba1); 
			nreturn = (select * from func_regenerar_saldos_plan_flujo(rwctualizasubdiario.cper, rwctualizasubdiario.cmes) as infograba2); 			 

		end loop;
		
		-- Cancelacion de documentos 
		nreturn = (select * from fin_importar_cobranzapago_integrador_cancelacion_impcobpag(rwperproceso.cperproceso) as infograba2);
		
	end loop; -- Periodo 

END; 
$BODY$ 
LANGUAGE 'plpgsql' VOLATILE</value>
  </data>
  <data name="txt_cobra04.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION fin_importar_cobranzapago_integrador(
    varper character,
    varmes character,
    varori character,
    varccodflu character,
    varlreg character,
    vardifp character,
    vardifpd character,
    vardifph character,
    vardifg character,
    varmax integer,
    indicador integer,
    varperc character)
  RETURNS integer AS
$BODY$
DECLARE  
RW RECORD;	
BEGIN

DROP TABLE IF EXISTS resultado;
create temporary table resultado(
  cper character(4)  NOT NULL DEFAULT ''::bpchar,
  cmes character(2) NOT NULL DEFAULT ''::bpchar,
  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
  nasiento numeric(6,0) NOT NULL DEFAULT 0,
  nidlin numeric(6,0) NOT NULL DEFAULT 0,
  ntc numeric(10,6) NOT NULL DEFAULT 0,
  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
  ndebe numeric(15,2) NOT NULL DEFAULT 0,
  nhaber numeric(15,2) NOT NULL DEFAULT 0,
  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
  ndebes numeric(15,2) NOT NULL DEFAULT 0,
  nhabers numeric(15,2) NOT NULL DEFAULT 0,
  ndebed numeric(15,2) NOT NULL DEFAULT 0,
  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
  cdes character(1) NOT NULL DEFAULT ''::bpchar,
  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
  najusauto numeric(1,0) NOT NULL DEFAULT 0,
  cregis character(1) NOT NULL DEFAULT ''::bpchar,
  ncomp numeric(1,0) NOT NULL DEFAULT 0,
  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
  cserie character(20) NOT NULL DEFAULT ''::bpchar,
  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
  ffechadoc date,
  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
  ffechaven date,
  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
  ffechadif date,
  nresp numeric(1,0) NOT NULL DEFAULT 0,
  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
  nperdenre numeric(1,0) NOT NULL DEFAULT 0, 
  nporre numeric(5,2) NOT NULL DEFAULT 0,
  ffecre date,
  cserre character(6) NOT NULL DEFAULT ''::bpchar,
  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
  ntcre numeric(10,6) NOT NULL DEFAULT 0,
  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
  nbasered numeric(15,2) NOT NULL DEFAULT 0,
  nimpres numeric(15,2) NOT NULL DEFAULT 0,
  nimpred numeric(15,2) NOT NULL DEFAULT 0,
  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
  freffec date,
  crefser character(10) NOT NULL DEFAULT ''::bpchar,
  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
  ffembdas date,
  ffregdas date,
  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
  nautamo numeric(1,0) NOT NULL DEFAULT 0,
  ffec_dc date,
  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
  nintext numeric(1,0) NOT NULL DEFAULT 0,
  cmoneda character(1) NOT NULL DEFAULT ''::bpchar,
  FFECHACAN date
  ) on commit drop;

-- CPE-3321  ANR 15/08/2023
DROP TABLE IF EXISTS Diariol;

Create temp table Diariol as 
select 	dl.cper,dl.cmes,
	dl.ntc,
	dl.ccodcue,
	dl.CCODDOC,
	dl.CSERIE,
	dl.CNUMERO,
	dl.CNUMFIN,
	dl.FFECHADOC,
	dl.CCODRUC,
	dl.CCODENTI,
	dl.FFECHAVEN,
	dl.CMREG,
	dl.NRESP,
	dl.CCODPPS,
	dl.NPERDENRE,
	dl.NPORRE,
	dl.ncomp
 from cf_diariol dl where cper = varper and NCOMP = 1;
 -- CPE-3321  ANR 15/08/2023

VARMAX = VARMAX-1;

/*  ESTE SELECT NOS DA COMO RESULTADO LA CANCELACIÓN DE TODOS LOS DOCUMENTOS QUE ESTAN EN EL EXCEL -- HABER */
INSERT INTO RESULTADO (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,cmoneda,FFECHACAN,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED
)
SELECT  VARPER as cper,    -- VARPER
VARMES as cmes ,   -- VARMES
VARORI AS ccodori,  -- VARORI
VARMAX + R.NASIENTO AS NASIENTO,
R.NIDLIN, 
DL.NTC,
DL.CCODCUE,
(CASE WHEN indicador = 1 THEN
	(CASE WHEN R.CMONCAN = 'S' THEN 
		(case when R.es_anticipo_automatico = 1 then 
			(CASE WHEN R.NIMPORTES &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
		else 
			(CASE WHEN R.NIMPORTES &lt; 0 THEN ABS(R.NIMPORTES) ELSE 0.00 END)
		end)
	ELSE 
		(case when R.es_anticipo_automatico = 1 then
			(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00  ELSE ABS(R.NIMPORTED) END)	
		else 
			(CASE WHEN R.NIMPORTED &lt; 0 THEN ABS(R.NIMPORTED) ELSE 0.00 END)		
		end)
	END)
ELSE 
	(CASE WHEN R.CMONCAN = 'S' THEN 
		(CASE WHEN R.NIMPORTES &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
	ELSE 
		(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	END)
	
END ) AS NDEBE,

(CASE WHEN indicador = 1  THEN
	(CASE WHEN R.CMONCAN = 'S'  THEN 
	   (case when R.es_anticipo_automatico = 1  then
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN  0.00 ELSE ABS(R.NIMPORTES) END)
	    else 
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN  ABS(R.NIMPORTES) ELSE 0.00 END)
	    end)
	ELSE 
	  (case when R.es_anticipo_automatico = 1 then
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	   else 
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN ABS(R.NIMPORTED) ELSE 0.00 END)
	   end)
	END)
ELSE 
	(CASE WHEN R.CMONCAN = 'S' THEN 
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
	ELSE 
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	END)
 END) AS NHABER, 
   
R.CGLOSA,
(CASE WHEN indicador = 1  THEN    ------ fecha : 24/02/2025 tema anticipos para colegio de contadores
		(CASE 	WHEN R.CMONCAN = 'S'  THEN 
			(case when R.es_anticipo_automatico = 1  then 
				(CASE WHEN R.NIMPORTES &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
			else 
				(CASE WHEN R.NIMPORTES &lt; 0 THEN ABS(R.NIMPORTES) ELSE 0.00 END)
			end)
		ELSE 
			(case when R.es_anticipo_automatico = 1  then 
				(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00 ELSE ABS(ROUND(R.NIMPORTED*DL.NTC,2)) END) 
			else 
				(CASE WHEN R.NIMPORTED &lt; 0 THEN ABS(ROUND(R.NIMPORTED*DL.NTC,2)) ELSE 0.00 END) 
			end)
		END) 
	   ELSE 
		(CASE 	WHEN R.CMONCAN = 'S' THEN 
			(CASE WHEN R.NIMPORTES &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
		ELSE 
			(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00 ELSE ABS(ROUND(R.NIMPORTED*DL.NTC,2)) END) 
		END) 	   
END ) AS NDEBES,
	   
(CASE WHEN indicador = 1 THEN
	(CASE 	WHEN R.CMONCAN = 'S' THEN 
		(case when R.es_anticipo_automatico = 1  then 
			(CASE WHEN R.NIMPORTES &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
		else 
			(CASE WHEN R.NIMPORTES &gt;= 0 THEN ABS(R.NIMPORTES) ELSE 0.00 END)
		end)
	ELSE 
		(case when R.es_anticipo_automatico = 1  then
			(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(ROUND(R.NIMPORTED*DL.NTC,2)) END)
		else 
			(CASE WHEN R.NIMPORTED &gt;= 0 THEN ABS(ROUND(R.NIMPORTED*DL.NTC,2)) ELSE 0.00 END)
		end)  
	END) 
   ELSE 
	(CASE 	WHEN R.CMONCAN = 'S'  THEN 
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTES)  END)
	ELSE 
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(ROUND(R.NIMPORTED*DL.NTC,2)) END) 
	END) 
   END) AS NHABERS,
(CASE WHEN indicador = 1  THEN
	(CASE 	WHEN R.CMONCAN = 'D' THEN 
		(case when R.es_anticipo_automatico = 1  then
			(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
		else 
			(CASE WHEN R.NIMPORTED &lt; 0 THEN ABS(R.NIMPORTED) ELSE 0.00 END)
		end) 
	ELSE 
		(case when R.es_anticipo_automatico = 1  then
			(CASE WHEN R.NIMPORTES &lt; 0 THEN  0.00 ELSE CASE WHEN DL.NTC &gt; 0 THEN ABS(ROUND(R.NIMPORTES/ DL.NTC,2)) ELSE 0.00 END END) 
		else 
			(CASE WHEN R.NIMPORTES &lt; 0 THEN  CASE WHEN DL.NTC &gt; 0 THEN ABS(ROUND(R.NIMPORTES/ DL.NTC,2)) ELSE 0.00 END ELSE 0.00 END) 
		end)
	END)
ELSE 
	(CASE 	WHEN R.CMONCAN = 'D' THEN 
		(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	ELSE 
		(CASE WHEN R.NIMPORTES &lt; 0 THEN 0.00 ELSE CASE WHEN DL.NTC &gt; 0 THEN ABS(ROUND(R.NIMPORTES/DL.NTC,2)) ELSE 0.00 END   END) END)
END) AS NDEBED,

(CASE WHEN indicador = 1 THEN
	(CASE 	WHEN R.CMONCAN = 'D' THEN 
		(case when R.es_anticipo_automatico = 1  then
			(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
		else 
			(CASE WHEN R.NIMPORTED &gt;= 0 THEN ABS(R.NIMPORTED) ELSE 0.00 END)
		end) 
	ELSE 
		(case when R.es_anticipo_automatico = 1  then
			(CASE WHEN R.NIMPORTES &gt; 0 THEN 0.00 ELSE CASE WHEN DL.NTC &gt; 0 THEN ABS(ROUND(R.NIMPORTES/DL.NTC,2)) ELSE 0.00 END END) 
		else 
			(CASE WHEN R.NIMPORTES &gt; 0 THEN CASE WHEN DL.NTC &gt; 0 THEN ABS(ROUND(R.NIMPORTES/DL.NTC,2)) ELSE 0.00 END ELSE 0.00 END) 
		end) 
	END) 
ELSE 
	(CASE 	WHEN R.CMONCAN = 'D' THEN 
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	ELSE 
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN 0.00 ELSE CASE WHEN DL.NTC &gt; 0 THEN ABS(ROUND(R.NIMPORTES/DL.NTC,2)) ELSE 0.00 END END) 
	END) 
	   
END ) AS NHABERD,

	0 AS NCOMP,
	DL.CCODDOC,
	DL.CSERIE,
	DL.CNUMERO,
	DL.CNUMFIN,
	DL.FFECHADOC,
	DL.CCODRUC,
	DL.CCODENTI,
	DL.FFECHAVEN,
	'    ' AS CCODFLU,
	R.CCODPAGO,
	R.CCODCOS,
	R.CCODCOS2,
	DL.CMREG,
	R.FFECHACAN AS FFEC_DC,
	R.CDOCCAN AS CDOC_DC,
	R.CSERCAN AS CSER_DC,
	R.CNUMCAN AS CNUM_DC,
	R.CMONCAN as CMONEDA,
	R.FFECHACAN,
	DL.NRESP,
	DL.CCODPPS,
	DL.NPERDENRE,
	DL.NPORRE,
	R.FFECRE,
	(CASE WHEN R.CSERRE = '' THEN ' ' ELSE  R.CSERRE END) AS CSERRE,
	R.CNUMRE,
	R.NTIPCAM AS NTCRE,
	(CASE WHEN R.NIMPORTES &lt;&gt; 0 
	THEN R.NIMPORTES 
	ELSE 
	(CASE WHEN R.NIMPORTED &lt;&gt; 0 THEN ROUND(R.NIMPORTED*R.NTIPCAM,2) ELSE 0 END) 
	END) AS NBASERES,
	(CASE WHEN R.NIMPORTED &lt;&gt;0
	THEN R.NIMPORTED
	ELSE 
	(CASE WHEN R.NIMPORTES &lt;&gt; 0 THEN ROUND(R.NIMPORTES/R.NTIPCAM,2) ELSE 0 END)
	END) AS NBASERED,
	(CASE   WHEN R.NIMPORTES &lt;&gt; 0 AND R.NIMPPERC &lt;&gt; 0 THEN R.NIMPPERC
	WHEN R.NIMPORTED &lt;&gt; 0 AND R.NIMPPERC &lt;&gt; 0 THEN ROUND(R.NIMPPERC*R.NTIPCAM,2)
	ELSE 0
	END) AS NIMPRES,
	(CASE   WHEN R.NIMPORTES &lt;&gt; 0 AND R.NIMPPERC &lt;&gt; 0 THEN ROUND(R.NIMPPERC/R.NTIPCAM,2)
	WHEN R.NIMPORTED &lt;&gt; 0 AND R.NIMPPERC &lt;&gt; 0 THEN R.NIMPPERC
	ELSE 0
	END) AS NIMPRED
FROM DIARIOL DL 
INNER JOIN 
(
select 
	X.NASIENTO, --- HAY QUE SACAR EL TIPO DE CAMBIO SEGUN LA CUENTA ******* ESTO DEBE VENIR DESDE EL FOX
	ROW_NUMBER () OVER (PARTITION BY I.FFECHACAN,I.CDOCCAN,I.CSERCAN,I.CNUMCAN,I.CCUECAN,I.CMONCAN,I.NIMPORCAN ORDER BY I.FFECHACAN) AS NIDLIN,
	I.*,  LPAD(I.CSERIE,20,'0') AS CSERIEA, LPAD(I.CNUMERO,20,'0') AS CNUMEROA
	from fin_cobranzapago_integra I
	INNER JOIN 
	(SELECT *,ROW_NUMBER () OVER (ORDER BY  FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN) AS NASIENTO FROM
		(SELECT DISTINCT 
		FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN
		from fin_cobranzapago_integra
		) U
	) X
	ON I.FFECHACAN = X.FFECHACAN AND I.CDOCCAN = X.CDOCCAN AND I.CSERCAN = X.CSERCAN AND I.CNUMCAN = X.CNUMCAN 
	AND I.CCUECAN = X.CCUECAN AND I.CMONCAN = X.CMONCAN AND I.NIMPORCAN = X.NIMPORCAN
) AS R
ON DL.CCODCUE = R.CCODCUE AND DL.CCODRUC = R.CCODRUC AND DL.CCODDOC = R.CCODDOC AND DL.CSERIE = R.CSERIEA AND DL.CNUMERO = R.CNUMEROA --AND DL.NCOMP = 1
WHERE CPER = VARPER -----VARPER
ORDER BY CPER, CMES, CCODORI, NASIENTO, NIDLIN ;


--UNION
/* ESTE SELECT NOS DA COMO RESULTADO EL PAGO TOTAL QUE SE REALIZA  */
INSERT INTO RESULTADO (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,cmoneda,FFECHACAN,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED
)

SELECT DISTINCT ON (I.FFECHACAN,I.CDOCCAN,I.CSERCAN,I.CNUMCAN,I.CCUECAN,I.CMONCAN,I.NIMPORCAN)
VARPER 	AS CPER,  --- VARPER
VARMES 	AS CMES,  --- VARMES
VARORI 	AS CCODORI, --VARORI
VARMAX + U.NASIENTO AS NASIENTO,
U.NIDLIN,
I.NTIPCAM AS NTC,
I.CCUECAN AS CCODCUE,
(CASE WHEN indicador = 1 THEN
	(case when I.es_anticipo_automatico = 1  then
		(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END) 
	else	
		(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END) 
	end) 
ELSE 
	(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END) 
	
END) AS NDEBE,
   
(CASE WHEN indicador = 1 THEN	
	(case when I.es_anticipo_automatico = 1  then
		(CASE WHEN I.NIMPORCAN &lt;  0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END) 
	else 
		(CASE WHEN I.NIMPORCAN &lt;  0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END) 
	end)
ELSE 
	(CASE WHEN I.NIMPORCAN &lt;  0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END) 
	
END) AS NHABER,
   
I.CGLOSA,

(CASE WHEN indicador = 1  THEN	
	(CASE 	WHEN U.CMONCAN = 'S' THEN 
		(case when I.es_anticipo_automatico = 1  then
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
		else
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END)
		end)
	ELSE 
		(case when I.es_anticipo_automatico = 1  then
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2)) END) 
		else 
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2)) ELSE 0.00 END) 
		end)
	END) 
ELSE 
	(CASE 	WHEN U.CMONCAN = 'S' THEN 
		(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
	ELSE 
		(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2))END) 
	END) 
END ) AS NDEBES,

(CASE WHEN indicador = 1  THEN	
	(CASE 	WHEN U.CMONCAN = 'S' THEN 
		(case when I.es_anticipo_automatico = 1  then 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
		else 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END)
		end)
	ELSE 
		(case when I.es_anticipo_automatico = 1  then 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2))  END) 
		else 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2)) ELSE 0.00 END) 
		end)
	END) 
ELSE 
	(CASE 	WHEN U.CMONCAN = 'S' THEN 
		(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
	ELSE 
		(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2)) END) 
	END) 
END) AS NHABERS,

(CASE WHEN indicador = 1 THEN	
	(CASE 	WHEN U.CMONCAN = 'D' THEN 
		(case when I.es_anticipo_automatico = 1  then 
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
		else 
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END)
		end)
	ELSE 
		(case when I.es_anticipo_automatico = 1  then
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2)) END) 
		else 
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2)) ELSE 0.00 END) 
		end)
	END) 
ELSE 
	(CASE WHEN U.CMONCAN = 'D' THEN 
		(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
	ELSE 
		(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2)) END) 
	END) 	   
END) AS NDEBED,

(CASE WHEN indicador = 1 THEN	
	(CASE 	WHEN U.CMONCAN = 'D' THEN 
		(case when I.es_anticipo_automatico = 1  then
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
		else 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END)
		end)
	ELSE 
		(case when I.es_anticipo_automatico = 1  then
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE  ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2)) END) 
		else
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2)) ELSE 0.00 END) 
		end)
	END) 
   ELSE 
	(CASE 	WHEN U.CMONCAN = 'D' THEN 
		(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(I.NIMPORCAN)  END)
	ELSE 
		(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2))  END)
	END) 	   
END) AS NHABERD,
   
0 AS NCOMP,
I.CDOCCAN AS CCODDOC,
LPAD(I.CSERCAN,20,'0') AS CSERIE , 
LPAD(I.CNUMCAN,20,'0') AS CNUMERO,
'' AS CNUMFIN,
I.FFECHACAN AS FFECHADOC,
I.CCODRUC,
I.CCODENTI,
CAST(NULL AS DATE) AS FFECHAVEN,
varccodflu AS CCODFLU, ---------------- CODIGO DE FLUJO DEL FORMULARIO 
I.CCODPAGO,  
I.CCODCOS, 
I.CCODCOS2,
' ' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
''::VARCHAR(2) AS CDOC_DC,
''::VARCHAR(20) AS CSER_DC,
''::VARCHAR(20) AS CNUM_DC,
U.CMONCAN AS CMONEDA,
U.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM fin_cobranzapago_integra I
INNER JOIN 
(
SELECT DISTINCT ON(FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN) 
ROW_NUMBER () OVER (ORDER BY  FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN) AS NASIENTO,
count(FFECHACAN)+1 NIDLIN, FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN
from fin_cobranzapago_integra
GROUP BY FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN
) U
ON I.FFECHACAN=U.FFECHACAN AND I.CDOCCAN=U.CDOCCAN AND I.CSERCAN=U.CSERCAN AND I.CNUMCAN = U.CNUMCAN 
   AND I.CCUECAN=U.CCUECAN AND I.CMONCAN=U.CMONCAN AND I.NIMPORCAN=U.NIMPORCAN
ORDER BY I.FFECHACAN,I.CDOCCAN, I.CSERCAN, I.CNUMCAN, I.CCUECAN, I.CMONCAN, I.NIMPORCAN ;



INSERT INTO RESULTADO (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,cmoneda,FFECHACAN,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED
)

SELECT  VARPER as cper,    -- VARPER
VARMES as cmes ,   -- VARMES
VARORI AS ccodori,  -- VARORI
VARMAX + R.NASIENTO AS NASIENTO,
R.NIDLIN AS NIDLIN, ------ CAMBIAR EN EL SELECT CON UN INNER JOIN
R.NTIPCAM AS NTC,
VARPERC AS CCODCUE,
(CASE WHEN indicador = 1 
   THEN	(CASE WHEN R.NIMPPERC &lt; 0 THEN ABS(R.NIMPPERC) ELSE 0.00 END)
   ELSE (CASE WHEN R.NIMPPERC &lt; 0 THEN 0.00 ELSE ABS(R.NIMPPERC) END)
   END ) AS NDEBE,
(CASE WHEN indicador = 1 
   THEN (CASE WHEN R.NIMPPERC &gt;= 0 THEN ABS(R.NIMPPERC) ELSE 0.00 END)
   ELSE (CASE WHEN R.NIMPPERC &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPPERC) END)
   END ) AS NHABER,
R.CGLOSA,
(CASE WHEN indicador = 1 
   THEN
(CASE 	WHEN R.CMONCAN = 'S' 
THEN 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN ABS(R.NIMPPERC) 
ELSE 0.00 END)
ELSE 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN ABS(ROUND(R.NIMPPERC*R.NTIPCAM,2)) 
ELSE 0.00 END) 
END) 
   ELSE 
(CASE 	WHEN R.CMONCAN = 'S' 
THEN 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN 0.00
ELSE ABS(R.NIMPPERC) END)
ELSE 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN 0.00
ELSE ABS(ROUND(R.NIMPPERC*R.NTIPCAM,2)) END) 
END)
   END ) AS NDEBES,
(CASE WHEN indicador = 1 
   THEN
(CASE 	WHEN R.CMONCAN = 'S' 
THEN 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN ABS(R.NIMPPERC) 
ELSE 0.00 END)
ELSE 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN ABS(ROUND(R.NIMPPERC*R.NTIPCAM,2)) 
ELSE 0.00 END) 
END) 
   ELSE 
(CASE 	WHEN R.CMONCAN = 'S' 
THEN 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN 0.00
ELSE ABS(R.NIMPPERC)  END)
ELSE 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN 0.00
ELSE ABS(ROUND(R.NIMPPERC*R.NTIPCAM,2)) END) 
END) 
   END) AS NHABERS,
(CASE WHEN indicador = 1 
   THEN
(CASE 	WHEN R.CMONCAN = 'D' 
THEN 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN ABS(R.NIMPPERC) 
ELSE 0.00 END)
ELSE 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN ABS(ROUND(R.NIMPPERC/R.NTIPCAM,2)) 
ELSE 0.00 END) 
END)
   ELSE 
(CASE 	WHEN R.CMONCAN = 'D' 
THEN 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN 0.00 
ELSE ABS(R.NIMPPERC) END)
ELSE 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN 0.00
ELSE ABS(ROUND(R.NIMPPERC/R.NTIPCAM,2)) END) 
END)
   END) AS NDEBED,
(CASE WHEN indicador = 1 
   THEN
(CASE 	WHEN R.CMONCAN = 'D' 
THEN 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN ABS(R.NIMPPERC) 
ELSE 0.00 END)
ELSE 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN ABS(ROUND(R.NIMPPERC/R.NTIPCAM,2)) 
ELSE 0.00 END) 
END) 
   ELSE 
(CASE 	WHEN R.CMONCAN = 'D' 
THEN 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN 0.00 
ELSE ABS(R.NIMPPERC) END)
ELSE 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN 0.00 
ELSE ABS(ROUND(R.NIMPPERC/R.NTIPCAM,2)) END) 
END) 
   
   END ) AS NHABERD,
0 AS NCOMP,
R.CCODDOC,
R.CSERIE,
R.CNUMERO,
' ' AS CNUMFIN,
R.FFECHADOC,
R.CCODRUC,
R.CCODENTI,
R.FFECHAVEN,
'    ' AS CCODFLU,
' ' AS CCODPAGO,
' ' AS CCODCOS,
' ' AS CCODCOS2,
' ' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
'' AS CDOC_DC,
'' AS CSER_DC,
'' AS CNUM_DC,
R.CMONCAN AS CMONEDA,
R.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM 	(
select 
X.NASIENTO, --- HAY QUE SACAR EL TIPO DE CAMBIO SEGUN LA CUENTA ******* ESTO DEBE VENIR DESDE EL FOX
ROW_NUMBER () OVER (PARTITION BY I.FFECHACAN,I.CDOCCAN,I.CSERCAN,I.CNUMCAN,I.CCUECAN,I.CMONCAN,I.NIMPORCAN ORDER BY I.FFECHACAN)  + W.NIDLIN AS NIDLIN,
I.*,  LPAD(I.CSERIE,20,'0') AS CSERIEA, LPAD(I.CNUMERO,20,'0') AS CNUMEROA
from fin_cobranzapago_integra I
INNER JOIN 
(SELECT *,ROW_NUMBER () OVER (ORDER BY  FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN) AS NASIENTO FROM
(SELECT DISTINCT 
FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN
from fin_cobranzapago_integra) U
) X
ON I.FFECHACAN = X.FFECHACAN AND I.CDOCCAN = X.CDOCCAN AND I.CSERCAN = X.CSERCAN AND I.CNUMCAN = X.CNUMCAN 
AND I.CCUECAN = X.CCUECAN AND I.CMONCAN = X.CMONCAN AND I.NIMPORCAN = X.NIMPORCAN 
INNER JOIN (SELECT NASIENTO, MAX(NIDLIN) AS NIDLIN FROM RESULTADO GROUP BY NASIENTO) W
ON X.NASIENTO+VARMAX = W.NASIENTO
WHERE I.NIMPPERC &lt;&gt;0
) AS R
ORDER BY CPER, CMES, CCODORI, NASIENTO, NIDLIN ;



INSERT INTO RESULTADO (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes,cdestino,ndifauto,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,cmoneda,FFECHACAN,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,
CNUMRE,NTCRE,NBASERES,NBASERED,NIMPRES,NIMPRED)
SELECT  R.CPER,
R.CMES,
R.CCODORI,
R.NASIENTO AS NASIENTO,
D.NIDLIN,
0 AS NTC,
D.CTADIF AS CCODCUE,
0 AS NDEBE,
0 AS NHABER,
'AJUSTE POR DIFERENCIA DE CAMBIO' AS CGLOSA,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &lt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NDEBES,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &gt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NHABERS,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &lt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NDEBED,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &gt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NHABERD,
' ' AS cdes,
'001' AS cdestino,
1 AS NDIFAUTO,
0 AS NCOMP,
'' AS CCODDOC,
'' AS CSERIE,
'' AS CNUMERO,
'' AS CNUMFIN,
CAST(NULL AS DATE) AS FFECHADOC,
'' AS CCODRUC,
'' AS CCODENTI,
CAST(NULL AS DATE) AS FFECHAVEN,
'' AS CCODFLU,
'' AS CCODPAGO,
'' AS CCODCOS,
'' AS CCODCOS2,
'' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
'' AS CDOC_DC,
'' AS CSER_DC,
'' AS CNUM_DC,
R.CMONEDA,
R.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM RESULTADO R
INNER JOIN 
  (SELECT CPER,CMES,CCODORI,NASIENTO, SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, SUM(NDEBED-NHABERD) AS DIF1D, MAX(NIDLIN)+1  AS NIDLIN, 
      (CASE WHEN SUM(NDEBED-NHABERD) + SUM(NDEBES-NHABERS)&gt;0 THEN vardifg ELSE VARDIFP END) AS CTADIF -------------------------------------- VARDIFG -- VARDIFP
      FROM RESULTADO 
      GROUP BY CPER,CMES,CCODORI,NASIENTO
      HAVING SUM(NDEBES-NHABERS) &lt;&gt; 0 OR SUM(NDEBED-NHABERD) &lt;&gt; 0
  ) AS D
 ON R.CPER = D.CPER AND R.CMES = D.CMES AND R.CCODORI = D.CCODORI AND R.NASIENTO = D.NASIENTO AND R.NIDLIN = D.NIDLIN-1

UNION
---************* EL DESTINO 
SELECT  R.CPER,
R.CMES,
R.CCODORI,
R.NASIENTO AS NASIENTO,
D.NIDLIN + 1 AS NIDLIN,
0 AS NTC,
VARDIFPD AS CCODCUE,   ---- VARDIFPD   
0 AS NDEBE,
0 AS NHABER,
'AJUSTE POR DIFERENCIA DE CAMBIO' AS CGLOSA,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &lt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NDEBES,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &gt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NHABERS,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &lt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NDEBED,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &gt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NHABERD,
'S' AS cdes,
'001' AS cdestino,
0 AS NDIFAUTO,
0 AS NCOMP,
'' AS CCODDOC,
'' AS CSERIE,
'' AS CNUMERO,
'' AS CNUMFIN,
CAST(NULL AS DATE) AS FFECHADOC,
'' AS CCODRUC,
'' AS CCODENTI,
CAST(NULL AS DATE) AS FFECHAVEN,
'' AS CCODFLU,
'' AS CCODPAGO,
'' AS CCODCOS,
'' AS CCODCOS2,
'' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
'' AS CDOC_DC,
'' AS CSER_DC,
'' AS CNUM_DC,
R.CMONEDA,
R.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM RESULTADO R
INNER JOIN 
  (SELECT CPER,CMES,CCODORI,NASIENTO, SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, SUM(NDEBED-NHABERD) AS DIF1D, MAX(NIDLIN)+1  AS NIDLIN, 
      (CASE WHEN SUM(NDEBED-NHABERD) + SUM(NDEBES-NHABERS)&gt;0 THEN VARDIFG ELSE VARDIFP END) AS CTADIF --- VARDIFG -- VARDIFP
      FROM RESULTADO 
      GROUP BY CPER,CMES,CCODORI,NASIENTO
      HAVING SUM(NDEBE-NHABER) &lt;0 OR SUM(NDEBES-NHABERS) &lt; 0 OR SUM(NDEBED-NHABERD) &lt; 0
  ) AS D
 ON R.CPER = D.CPER AND R.CMES = D.CMES AND R.CCODORI = D.CCODORI AND R.NASIENTO = D.NASIENTO AND R.NIDLIN = D.NIDLIN-1

UNION
---*************** EL OTRO DESTINO 
SELECT  R.CPER,
R.CMES,
R.CCODORI,
R.NASIENTO AS NASIENTO,
D.NIDLIN + 2 AS NIDLIN,
0 AS NTC,
vardifph AS CCODCUE,  -------- VARDIFPH  
0 AS NDEBE,
0 AS NHABER,
'AJUSTE POR DIFERENCIA DE CAMBIO' AS CGLOSA,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &gt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NDEBES,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &lt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NHABERS,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &gt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NDEBED,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &lt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NHABERD,
'S' AS cdes,
'001' AS cdestino,
0 AS NDIFAUTO,
0 AS NCOMP,
'' AS CCODDOC,
'' AS CSERIE,
'' AS CNUMERO,
'' AS CNUMFIN,
CAST(NULL AS DATE) AS FFECHADOC,
'' AS CCODRUC,
'' AS CCODENTI,
CAST(NULL AS DATE) AS FFECHAVEN,
'' AS CCODFLU,
'' AS CCODPAGO,
'' AS CCODCOS,
'' AS CCODCOS2,
'' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
'' AS CDOC_DC,
'' AS CSER_DC,
'' AS CNUM_DC,
R.CMONEDA,
R.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM RESULTADO R
INNER JOIN 
  (SELECT CPER,CMES,CCODORI,NASIENTO, SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, SUM(NDEBED-NHABERD) AS DIF1D, MAX(NIDLIN)+1  AS NIDLIN, 
      (CASE WHEN SUM(NDEBED-NHABERD) + SUM(NDEBES-NHABERS)&gt;0 THEN VARDIFG ELSE VARDIFP END) AS CTADIF --- VARDIFG -- VARDIFP
      FROM RESULTADO 
      GROUP BY CPER,CMES,CCODORI,NASIENTO
      HAVING SUM(NDEBE-NHABER) &lt;0 OR SUM(NDEBES-NHABERS) &lt; 0 OR SUM(NDEBED-NHABERD) &lt; 0
  ) AS D
 ON R.CPER = D.CPER AND R.CMES = D.CMES AND R.CCODORI = D.CCODORI AND R.NASIENTO = D.NASIENTO AND R.NIDLIN = D.NIDLIN-1
 ORDER BY CPER,CMES,CCODORI,NASIENTO,NIDLIN;

-- insert into r3 select * from resultado;
----  ultimo insert 

insert into cf_diario (cper,cmes,ccodori,nasiento,ffecasi, cmoneda, ccodusu, tregistro, ccodsu)
SELECT DISTINCT ON (CPER,CMES,CCODORI,NASIENTO,FFECHACAN,CMONEDA)
CPER,CMES,CCODORI,NASIENTO,FFECHACAN,CMONEDA,'ADMIN',current_timestamp,varlreg FROM RESULTADO ORDER BY CPER,CMES,CCODORI,NASIENTO;


----otro insert 
INSERT INTO cf_diariol (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes, cdestino,ndifauto,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED,CLEDMCESTA,CLEDMCPER,CLEDMCMES)
select cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes,cdestino,ndifauto,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED,'1',cper,cmes
from resultado 
order by cper, cmes, ccodori, nasiento, nidlin ;


return 1;
END; 
$BODY$
  LANGUAGE plpgsql VOLATILE</value>
  </data>
  <data name="anteriofinventas.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION public.func_guardar_fin_ventas(
	OUT resultado text,
	pjson text)
    RETURNS text AS
$BODY$

declare 
	a_json json;
begin

    /*
    Tipo:   1: Provision
            2: Anulacion
    */

    /*
        Observaciones
        created_at timestamp without time zone,
        updated_at timestamp without time zone,
        se usan o no?
        cual es su finalidad? (En postgres)
    :*/

    -- 0. Truncar tabla
    truncate table fin_ventas;
    a_json = pjson::json;
    -- 1. Importar datos
    INSERT INTO fin_ventas(
        idventas, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodori_p, 
        ccodsu_p, ccodcue_ps, ccodcue_pd, ccodflu, flgctares, flgctaimp, 
        flgctaact, flggencomp, ccodtipent, ffechadoc, ffechaven, ccoddoc, 
        cserie, cnumero, ccodenti, cdesenti, ctipdoc, ccodruc, crazsoc, 
        nbase2, nbase1, nexo, nina, nisc, nigv1, nicbpers, nbase3, ntots, 
        ntc, freffec, crefdoc, crefser, crefnum, cmreg, ndolar, ffechaven2, 
        ccond, ccodcos, ccodcos2, cctabase, cctaicbper, cctaotrib, cctatot, 
        nresp, nporre, nimpres, cserre, cnumre, ffecre, ccodpresu, nigv, 
        cglosa, ccodpago, nperdenre, nbaseres, cctaperc, -- created_at,updated_at, 
	estado, en_ambiente_de, es_con_migracion, ccodcos3,ccodrucanula
    )
    
    select
        idventas, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodori_p, 
        ccodsu_p, ccodcue_ps, ccodcue_pd, ccodflu, flgctares, flgctaimp, 
        flgctaact, flggencomp, ccodtipent,ffechadoc, ffechaven, ccoddoc, 
        lpad(trim(coalesce(cserie,'')),20,'0') as cserie, lpad(trim(coalesce(cnumero,'')),20,'0') as cnumero, trim(ccodenti) as ccodenti, cdesenti, ctipdoc, trim(ccodruc) as ccodruc, crazsoc, 
        coalesce(nbase2,0.00) as nbase2, coalesce(nbase1,0.00) as nbase1, coalesce(nexo,0.00) as nexo, coalesce(nina,0.00) as nina, coalesce(nisc,0.00) as nisc,
        coalesce(nigv1,0.00) as nigv1, coalesce(nicbpers,0.00) as nicbpers, coalesce(nbase3,0.00) as nbase3, coalesce(ntots,0.00) as ntots, 
        coalesce(ntc,0.00) as ntc,  case when freffec='' then null else freffec::date end freffec      , coalesce(crefdoc,'') as crefdoc, coalesce(crefser,'') as crefser, coalesce(crefnum,''), coalesce(cmreg,'') cmreg, ndolar, 
        case when ffechaven2='' then null else ffechaven2::date end ffechaven2 , 
       coalesce(ccond,'') as ccond, coalesce(ccodcos,'') as ccodcos, coalesce(ccodcos2,'') as ccodcos2, coalesce(cctabase,'') as cctabase, coalesce(cctaicbper,'') as cctaicbper, coalesce(cctaotrib,'') as cctaotrib, coalesce(cctatot,'') as cctatot, 
        coalesce(nresp,0) as nresp, coalesce(nporre,0.00) as nporre, coalesce(nimpres,0.00) as nimpres, coalesce(cserre,'') as cserre, coalesce(cnumre,'') as cnumre, 
        case when ffecre='' then null else ffecre::date end ffecre 

        , coalesce(ccodpresu,'') as ccodpresu, coalesce(nigv,0.00) as nigv, 
        coalesce(cglosa, '') as cglosa, coalesce(ccodpago,'') as ccodpago, coalesce(nperdenre,0) as nperdenre, coalesce(nbaseres,0.00) as nbaseres, coalesce(cctaperc,'') as cctaperc, -- current_timestamp as created_at, updated_at, 
        coalesce(estado,'') as estado, coalesce(en_ambiente_de,'') as en_ambiente_de, es_con_migracion, coalesce(ccodcos3,'') as ccodcos3 ,coalesce(ccodrucanula,'') as ccodrucanula
    from json_to_recordset(a_json)
    as t(
        idventas numeric(20,0),
        ccod_empresa character(3),
        cper character(4),
        cmes character(2),
        ccodori character(3),
        ccodsu character(2),
        ccodori_p character(3),
        ccodsu_p character(2),
        ccodcue_ps character(20),
        ccodcue_pd character(20),
        ccodflu character(4),
        flgctares numeric(1,0),
        flgctaimp numeric(1,0),
        flgctaact numeric(1,0),
        flggencomp numeric(1,0),
        ccodtipent character(3),
        ffechadoc date,
        ffechaven date,
        ccoddoc character(2),
        cserie character(20),
        cnumero character(20),
        ccodenti character(11),
        cdesenti character(100),
        ctipdoc character(1),
        ccodruc character(15),
        crazsoc character(100),
        nbase2 numeric(15,2),
        nbase1 numeric(15,2),
        nexo numeric(15,2),
        nina numeric(15,2),
        nisc numeric(15,2),
        nigv1 numeric(15,2),
        nicbpers numeric(15,2),
        nbase3 numeric(15,2),
        ntots numeric(15,2),
        ntc numeric(10,6),
        freffec character(10),
        crefdoc character(2),
        crefser character(6),
        crefnum character(13),
        cmreg character(1),
        ndolar numeric(15,2),
        ffechaven2 character(10),
        ccond character(3),
        ccodcos character(9),
        ccodcos2 character(9),
        cctabase character(20),
        cctaicbper character(20),
        cctaotrib character(20),
        cctatot character(20),
        nresp numeric(1,0),
        nporre numeric(5,2),
        nimpres numeric(15,2),
        cserre character(6),
        cnumre character(13),
        ffecre character(10),
        ccodpresu character(10),
        nigv numeric(5,2),
        cglosa character(80),
        ccodpago character(3),
        nperdenre numeric(1,0),
        nbaseres numeric(15,2),
        cctaperc character(20),
        estado character varying(255),
        en_ambiente_de character varying(255),
        es_con_migracion numeric(1,0),
        ccodcos3 character(15),
        ccodrucanula character(15)
    );
	-- created_at timestamp without time zone,
       -- updated_at timestamp without time zone,
       

    --2. llamar funcion de validar/generar asientos..., debe actualizar campo: resultado_migracion
        -- resultado_migracion se debe completar luego de validar y/o generar el asiento
        -- en vez de reemplazar el codigo en es_con_migracion, se debe agregar el estado en  "resultado_migracion"

	perform fin_ventas_integracion_principal();
    

	/*
        --=================================================
        --=================== SIMULACION =====================
        --==================================================
        --if(tipo = 1)then
            -- ok (1)
            update fin_ventas set resultado_migracion=1 where idventas in (3, 5, 2);            
        --elsif(tipo = 3)then
            -- anulacion (4)
            --update fin_ventas set resultado_migracion=4 where idventas in (3, 5, 2);
        ---end if;

        -- error (2)
        update fin_ventas set resultado_migracion=2, obserror='Falta cuenta contable de igv' where idventas=1;
        update fin_ventas set resultado_migracion=2, obserror='Error de numero de identidad de cliente' where idventas=4;    */   

        

    --3. Informe de importacion    
    select json_agg(json_build_object(
        'idventas', fc.idventas, 'obserror', fc.obserror, 'es_con_migracion', fc.es_con_migracion, 'resultado_migracion', fc.resultado_migracion
    ))::text
    from fin_ventas fc
    into resultado;

    
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION func_guardar_fin_ventas(text)
  OWNER TO postgres;</value>
  </data>
  <data name="anteriorcompras.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION func_guardar_fin_compras(
    OUT resultado text,
    IN pjson text)
  RETURNS text AS
$BODY$
declare 
	a_json json;
begin


    -- 0. Truncar tabla
    truncate table fin_compras;
    a_json = pjson::json;
    -- 1. Importar datos
    INSERT INTO fin_compras(
		    idcompras, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodori_p, 
		    ccodsu_p, ccodcue_ps, ccodcue_pd, ccodflu, flgctares, flgctaimp, 
		    flgctaact, flggencomp, ccodtipent, ffechadoc, fechaven, ccoddoc, 
		    ccoddas, cyeardas, cserie, cnumero, ccodenti, cdesenti, ctipdoc, 
		    ccodruc, crazsoc, ccodclas, nbase1, nigv1, nbase2, nigv2, nbase3, 
		    nigv3, nina, nisc, nicbper, nexo, ntots, cdocnodom, cnumdere, 
		    ffecre, ntc, freffec, crefdoc, crefser, crefnum, cmreg, ndolar, 
		    ffechaven2, ccond, cctabase, cctaicbper, cctaotrib, cctatot, 
		    ccodcos, ccodcos2, nresp, nporre, nimpres, cserre, cnumre, ffecre2, 
		    ccodpresu, nigv, cglosa, nperdenre, nbaseres, cigvxacre, 
		    estado, en_ambiente_de, es_con_migracion, ccodcos3,ccodrucanula
    )
    select
        idcompras, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodori_p, 
        ccodsu_p, ccodcue_ps, ccodcue_pd, ccodflu, flgctares, flgctaimp, 
        flgctaact, flggencomp, ccodtipent,
        case when trim(coalesce(ffechadoc, ''))='' then null else ffechadoc::date end,
        case when trim(coalesce(fechaven, ''))='' then null else fechaven::date end,     
        coalesce(ccoddoc,'') as ccoddoc, 
        coalesce(ccoddas,'') as ccoddas, coalesce(cyeardas,'')as cyeardas, lpad(coalesce(cserie,''),20,'0') as cserie, lpad(coalesce(cnumero,''),20,'0') as cnumero, coalesce(ccodenti,'') as ccodenti, 
	coalesce(cdesenti,'') as cdesenti, coalesce(ctipdoc,'') as ctipdoc, 
        coalesce(ccodruc,'') as ccodruc, coalesce(crazsoc,'') as crazsoc, coalesce(ccodclas,'')as ccodclas, coalesce(nbase1, 0.00), coalesce(nigv1, 0.00) as nigv1, coalesce(nbase2, 0.00) as nbase2, coalesce(nigv2, 0.00) as nigv2, coalesce(nbase3, 0.00) as nbase3, 
        coalesce(nigv3, 0.00) as nigv3, coalesce(nina,0.00) as nina, coalesce(nisc,0.00) as niac, coalesce(nicbper,0.00) as nicbper, coalesce(nexo,0.00) as nexo , coalesce(ntots,0.00) as ntots, coalesce(cdocnodom,'') as cdocnodom, coalesce(cnumdere,'') as cnumdere, 
        case when trim(coalesce(ffecre, ''))='' then null else ffecre::date end,
        ntc, case when trim(coalesce(freffec, ''))='' then null else freffec::date end,
        coalesce(crefdoc,'') as crefdoc, coalesce(crefser,'') as crefser, coalesce(crefnum,'') as crefnum, coalesce(cmreg,'') as cmreg, coalesce(ndolar,0.00) as ndolar, 
        case when trim(coalesce(ffechaven2, ''))='' then null else ffechaven2::date end,
        coalesce(ccond,'') as ccod, coalesce(cctabase,'') as cctabase, coalesce(cctaicbper,'') as cctaicbper, coalesce(cctaotrib,'') as cctaotrib, coalesce(cctatot,'') as cctatot, 
        coalesce(ccodcos,'') as ccodcos, coalesce(ccodcos2,'') as ccodcos2, 
        coalesce(nresp,0.0) as nresp, coalesce(nporre,0.00) as nporre, coalesce(nimpres,0.00) as nimpres, coalesce(cserre,'') as cserre, coalesce(cnumre,'') as cnumre,
        case when trim(coalesce(ffecre2, ''))='' then null else ffecre2::date end, 
        coalesce(ccodpresu,'') as ccodpresu, nigv, coalesce(cglosa,'') as cglosa, coalesce(nperdenre,0.00) as nperdenre, coalesce(nbaseres,0.00) as nbaseres, coalesce(cigvxacre,'') as cigvxacre, 
        estado, en_ambiente_de, es_con_migracion, ccodcos3,coalesce(ccodrucanula,'') as ccodrucanula
    from json_to_recordset(a_json)
    as t(
        idcompras numeric(20,0),
        ccod_empresa character(3),
        cper character(4),
        cmes character(2),
        ccodori character(3),
        ccodsu character(2),
        ccodori_p character(3),
        ccodsu_p character(2),
        ccodcue_ps character(20),
        ccodcue_pd character(20),
        ccodflu character(4),
        flgctares numeric(1,0),
        flgctaimp numeric(1,0),
        flgctaact numeric(1,0),
        flggencomp numeric(1,0),
        ccodtipent character(3),
        ffechadoc text, -- date,
        fechaven text,  -- date,
        ccoddoc character(2),
        ccoddas character(3),
        cyeardas character(4),
        cserie character(20),
        cnumero character(20),
        ccodenti character(11),
        cdesenti character(100),
        ctipdoc character(1),
        ccodruc character(15),
        crazsoc character(100),
        ccodclas character(1),
        nbase1 numeric(15,2),
        nigv1 numeric(15,2),
        nbase2 numeric(15,2),
        nigv2 numeric(15,2),
        nbase3 numeric(15,2),
        nigv3 numeric(15,2),
        nina numeric(15,2),
        nisc numeric(15,2),
        nicbper numeric(15,2),
        nexo numeric(15,2),
        ntots numeric(15,2),
        cdocnodom character(20),
        cnumdere character(15),
        ffecre text, -- date,
        ntc numeric(10,6),
        freffec text, -- date,
        crefdoc character(2),
        crefser character(6),
        crefnum character(13),
        cmreg character(1),
        ndolar numeric(15,2),
        ffechaven2 text, --date,
        ccond character(3),
        cctabase character(10),
        cctaicbper character(10),
        cctaotrib character(10),
        cctatot character(10),
        ccodcos character(9),
        ccodcos2 character(9),
        nresp numeric(1,0),
        nporre numeric(5,2),
        nimpres numeric(15,2),
        cserre character(6),
        cnumre character(13),
        ffecre2 text, --date,
        ccodpresu character(10),
        nigv numeric(5,2),
        cglosa character(50),
        nperdenre numeric(15,2),
        nbaseres numeric(15,2),
        cigvxacre character(1),
        estado character varying(255),
        en_ambiente_de character varying(255),
        es_con_migracion numeric(1,0),
        ccodcos3 character(15),
        ccodrucanula character(15)
    );
	--

    --2. Validar/generar asientos
    perform fin_compras_integracion_principal();
    

    --3. Informe de importacion    
    select json_agg(json_build_object(
        'idcompras', fc.idcompras, 'obserror', fc.obserror, 'es_con_migracion', fc.es_con_migracion, 'resultado_migracion', fc.resultado_migracion
    ))::text
    from fin_compras fc
    into resultado;


    
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;</value>
  </data>
  <data name="txt_personalizado_pdda_ventas.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION public.fin_registro_ventas_integracion_estandar(
	varper character,
	varmes character,
	varori character,
	varccodflu character,
	varpresua integer,
	varpresui integer,
	varpresur integer,
	varsoloventa integer,
	varigv character,
	varlreg character,
	vardifp character,
	vardifpd character,
	vardifph character,
	vardifg character,
	varmax integer,
	varoricob character,
	varlregcont character,
	varresumir integer,
	varmaxcob integer,
	varisc character)
    RETURNS integer
AS $BODY$

			DECLARE  
			RW RECORD;
			OTYC numeric(13,2);
			CONTADOR  numeric(13,2);
			MAXASIENTO   NUMERIC(6,0);
			VPER CHARACTER(4);
			VMES CHARACTER(2);
			VCODORI CHARACTER(3);
			VASIENTO INTEGER;
			VIDLIN INTEGER;
			VNIDLIN INTEGER;
			VMAXIDLIN INTEGER;
			VCODCUE CHARACTER(20);
			VDES CHARACTER(1);
			VDESTINO CHARACTER(3);
			VCODCOS CHARACTER(9);
			NDESTINO INTEGER;

			BEGIN
			DROP TABLE IF EXISTS RESDIF;
			CREATE TEMPORARY TABLE RESDIF(
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			   nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  CCTADIFD  character(20) NOT NULL DEFAULT ''::bpchar, 
			  CCTADIFS character(20) NOT NULL DEFAULT ''::bpchar,
			  DIF1  numeric(15,2) NOT NULL DEFAULT 0, 
			  DIF1S  numeric(15,2) NOT NULL DEFAULT 0, 
			  DIF1D numeric(15,2) NOT NULL DEFAULT 0, 
			  ffechadoc date,
			  ffechaven date,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  cdesenti character(100) NOT NULL DEFAULT ''::bpchar,
			  ctipdoc character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  crazsoc character(150) NOT NULL DEFAULT ''::bpchar,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  freffec date,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ndolar numeric(15,2) NOT NULL DEFAULT 0,   -- cambiado de 10,6  --&gt; 15,2
			  ffechaven2 date,
			  ccond character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  cctabase character(20) NOT NULL DEFAULT ''::bpchar,
			  cctaotrib character(20) NOT NULL DEFAULT ''::bpchar,
			  cctatot character(20) NOT NULL DEFAULT ''::bpchar,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  ffecre date,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  nigv numeric(5,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  cctaperc character varying(20) NOT NULL DEFAULT ''::character varying,
			  incomp character(5) NOT NULL DEFAULT ''::bpchar,
			  lneg character(5) NOT NULL DEFAULT ''::bpchar,
			  vmespd numeric(15,2) NOT NULL DEFAULT 0,
			  nnetd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpd numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  nntc numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseimp numeric(15,2) NOT NULL DEFAULT 0,
			  nbaseimpd numeric(15,2) NOT NULL DEFAULT 0,
			  nresini character(13) NOT NULL DEFAULT ''::bpchar,
			  nresfin character(13) NOT NULL DEFAULT ''::bpchar,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  errores text NOT NULL DEFAULT ''::text,
			  cctacobra character(20) NOT NULL DEFAULT ''::bpchar,
			  flaganalb numeric(1,0) NOT NULL DEFAULT 0,
			  flaganalo numeric(1,0) NOT NULL DEFAULT 0,
			  flaganalt numeric(1,0) NOT NULL DEFAULT 0,
			  flagccosb numeric(1,0) NOT NULL DEFAULT 0,
			  flagccoso numeric(1,0) NOT NULL DEFAULT 0,
			  flagccost numeric(1,0) NOT NULL DEFAULT 0,
			  flagpresub numeric(1,0) NOT NULL DEFAULT 0,
			  flagpresuo numeric(1,0) NOT NULL DEFAULT 0,
			  flagpresut numeric(1,0) NOT NULL DEFAULT 0,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar		  
			 ) on commit drop;

			DROP TABLE IF EXISTS resultado;	
			create temporary table resultado(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0 ,
			  nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			  cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,		  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0		 
			  ) on commit drop;

			DROP TABLE IF EXISTS tmpregcv;	
			create temporary table tmpregcv(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0 ,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,			  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0		  
			  ) on commit drop;

			DROP TABLE IF EXISTS tmpregcv1;	
			create temporary table tmpregcv1(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,			  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0			
			  ) on commit drop;

			DROP TABLE IF EXISTS tmpregcv2;	
			create temporary table tmpregcv2(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0 ,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,			  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0			  
			  ) on commit drop;

			DROP TABLE IF EXISTS tmpregcv3;	
			create temporary table tmpregcv3(
			 cper character(4)  NOT NULL DEFAULT ''::bpchar,
			  cmes character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
			  nasiento numeric(6,0) NOT NULL DEFAULT 0,
			  nidlin numeric(6,0) NOT NULL DEFAULT 0,
			  ntc numeric(10,6) NOT NULL DEFAULT 0,
			  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
			  ndebe numeric(15,2) NOT NULL DEFAULT 0,
			  nhaber numeric(15,2) NOT NULL DEFAULT 0,
			  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
			  ndebes numeric(15,2) NOT NULL DEFAULT 0,
			  nhabers numeric(15,2) NOT NULL DEFAULT 0,
			  ndebed numeric(15,2) NOT NULL DEFAULT 0,
			  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
			  cdes character(1) NOT NULL DEFAULT ''::bpchar,
			  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
			  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
			  najusauto numeric(1,0) NOT NULL DEFAULT 0,
			  cregis character(1) NOT NULL DEFAULT ''::bpchar,
			  ncomp numeric(1,0) NOT NULL DEFAULT 0,
			  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
			  cserie character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
			  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
			  ffechadoc date,
			  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
			  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
			  ffechaven date,
			  nbase1 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2 numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3 numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3 numeric(15,2) NOT NULL DEFAULT 0,
			  nina numeric(15,2) NOT NULL DEFAULT 0,
			  nexo numeric(15,2) NOT NULL DEFAULT 0,
			  nisc numeric(15,2) NOT NULL DEFAULT 0,
			  nivabase numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimp numeric(15,2) NOT NULL DEFAULT 0,
			  ntot numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2s numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3s numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3s numeric(15,2) NOT NULL DEFAULT 0,
			  ninas numeric(15,2) NOT NULL DEFAULT 0,
			  nexos numeric(15,2) NOT NULL DEFAULT 0,
			  niscs numeric(15,2) NOT NULL DEFAULT 0,
			  nivabases numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimps numeric(15,2) NOT NULL DEFAULT 0,
			  ntots numeric(15,2) NOT NULL DEFAULT 0,
			  nbase1d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv1d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase2d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv2d numeric(15,2) NOT NULL DEFAULT 0,
			  nbase3d numeric(15,2) NOT NULL DEFAULT 0,
			  nigv3d numeric(15,2) NOT NULL DEFAULT 0,
			  ninad numeric(15,2) NOT NULL DEFAULT 0,
			  nexod numeric(15,2) NOT NULL DEFAULT 0,
			  niscd numeric(15,2) NOT NULL DEFAULT 0,
			  nivabased numeric(15,2) NOT NULL DEFAULT 0,
			  nivaimpd numeric(15,2) NOT NULL DEFAULT 0,
			  ntotd numeric(15,2) NOT NULL DEFAULT 0,
			  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
			  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
			  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
			  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
			  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
			  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
			  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
			  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
			  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
			  ffechadif date,
			  nresp numeric(1,0) NOT NULL DEFAULT 0,
			  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
			  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
			  nperdenre numeric(1,0) NOT NULL DEFAULT 0,
			  nporre numeric(5,2) NOT NULL DEFAULT 0,
			  ffecre date,
			  cserre character(6) NOT NULL DEFAULT ''::bpchar,
			  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
			  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
			  ntcre numeric(10,6) NOT NULL DEFAULT 0,
			  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
			  nbasered numeric(15,2) NOT NULL DEFAULT 0,
			  nimpres numeric(15,2) NOT NULL DEFAULT 0,
			  nimpred numeric(15,2) NOT NULL DEFAULT 0,
			  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
			  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
			  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
			  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
			  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
			  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
			  freffec date,
			  crefser character(10) NOT NULL DEFAULT ''::bpchar,
			  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
			  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
			  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
			  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
			  ffembdas date,
			  ffregdas date,
			  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
			  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
			  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
			  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
			  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
			  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
			  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
			  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
			  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
			  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
			  nautamo numeric(1,0) NOT NULL DEFAULT 0,
			  ffec_dc date,
			  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
			  CCODISC character(20) NOT NULL DEFAULT ''::bpchar,	 
			  NPORISC numeric(1,0) NOT NULL DEFAULT  0, 
			  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
			  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
			  cdoc_nd character(2) NOT NULL DEFAULT ''::bpchar,
			  cser_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  cnum_nd character(20) NOT NULL DEFAULT ''::bpchar,
			  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
			  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
			  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
			  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
			  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
			  nintext numeric(1,0) NOT NULL DEFAULT 0,
			 nicbpers numeric(15,2) NOT NULL DEFAULT 0,
			 cctaicbper character(20) NOT NULL DEFAULT ''::bpchar,			  
			  nicbper numeric(15,2) NOT NULL DEFAULT 0,
			  nicbperd numeric(15,2) NOT NULL DEFAULT 0,
			  nigv numeric(5,2) NOT NULL DEFAULT 0		  
			    ) on commit drop;		  

			  
			-- modificado Anr 19/08/202
			-- modificado GZP  anr 29/12/2020  se regreso a su estado original  

			insert into  TMPREGCV (
			SELECT
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax AS NASIENTO , 
			1 AS nidlin , 
			NTC, 
			CCTATOT AS CCODCUE, --"121202              "
			(CASE WHEN NTOTS&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
			(CASE WHEN NTOTS&lt; 0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
			 CGLOSA,
			(CASE WHEN NTOTS&gt;=0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBES, 
			(CASE WHEN NTOTS&lt; 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
			(CASE WHEN NTOTS&gt;=0 THEN ABS(ROUND(NTOTS/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED, 
			(CASE WHEN NTOTS&lt; 0 THEN ABS(ROUND(NTOTS/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			('   ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			(' ')::VARCHAR(1) AS CREGIS,
			(CASE WHEN FLAGANALT = 2 THEN 1 ELSE 0 END) AS NCOMP ,
			CCODDOC, 
			CSERIE,
			CNUMERO, 
			CNUMFIN,
			FFECHADOC, 			 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN2,
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD,
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD,
			(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS  ELSE '         ' END)::VARCHAR(9) AS CCODCOS	,
			(CASE WHEN FLAGCCOST&gt;1 THEN CCODCOS2 ELSE '         ' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUA=1 THEN (CASE WHEN FLAGPRESUT&gt;1 THEN CCODPRESU ELSE '          ' END)  ELSE  '          '  END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ' ' ELSE (CASE WHEN FLAGANALT=2 THEN (CASE WHEN CCOND='CON' THEN VARMES ELSE ' ' END) ELSE  ' ' END)  END)::VARCHAR(2)  AS CMESC,
			(CASE WHEN FLAGANALT=2 THEN cmreg ELSE '' END)::VARCHAR(1) AS CMREG,  
			(' ')::VARCHAR(4) AS CCODOCON,
			(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
			CAST(NULL AS DATE) AS FFECHADIF,
			(CASE WHEN FLAGANALT = 2 THEN NRESP ELSE 0 END)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds,
			(CASE WHEN NRESP = 3 THEN 'V' ELSE ' ' END)::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(CASE WHEN NRESP = 3 THEN NPORRE ELSE 0 END)::NUMERIC(5,2) AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 				
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntc ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(10,6) AS NTCRE,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntots ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS NBASERES,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN (CASE WHEN cmreg = 'S' THEN ROUND(NTOTS/NTC,2) ELSE NDOLAR END) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nbasered,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN nimpres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpres,
			(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpred,
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			crefdoc, 
			freffec,
			crefser, 
			crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta, 
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta, 
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,
			00.00 AS nporisc,  		
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			('1')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 	
			 FROM 
			(
			select  distinct on (RV.ccoddoc,RV.cserie,RV.cnumero, RV.cnumfin,RV.ctipdoc,RV.ccodruc,RV.cctatot) 
			Y.nasiento,RV.ntc,Y.cctatot,Y.ntots,RV.cmreg,Y.ndolar,RV.cglosa,RV.flaganalt,Y.ccoddoc,Y.cserie,Y.cnumero,Y.cnumfin,RV.ffechadoc,Y.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.ffechaven2,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.NRESP,RV.NPORRE,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento, ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y
			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot
			) as Z

			 
			 UNION 
			 
			SELECT  
			VARPER AS CPER,  
			VARMES AS CMES,  
			VARORI AS CCODORI,  
			nasiEntO + varmax  AS NASIENTO ,  
			2 AS nidlin ,  
			NTC,  
			VARIGV AS CCODCUE,  --'401111'
			(CASE WHEN NIGV1&lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV1) ELSE  ABS(ROUND(NIGV1/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
			(CASE WHEN NIGV1&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NIGV1) ELSE  ABS(ROUND(NIGV1/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
			CGLOSA,
			(CASE WHEN NIGV1&lt;0   THEN ABS(NIGV1) ELSE 0.00 END)::numeric(15,2) AS NDEBES, 
			(CASE WHEN NIGV1&gt;=0 THEN ABS(NIGV1) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
			(CASE WHEN NIGV1&lt;0   THEN ABS(ROUND(NIGV1/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
			(CASE WHEN NIGV1&gt;=0 THEN ABS(ROUND(NIGV1/NTC,2)) ELSE 0.00 END)::numeric(15,2) AS NHABERD,		
			(' ')::VARCHAR(1) AS CDES,  
			('   ')::VARCHAR(3) AS CDESTINO, 
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			('V')::VARCHAR(1) AS CREGIS,		
			(0)::NUMERIC(1,0) AS NCOMP ,  
			CCODDOC,  
			CSERIE,  
			CNUMERO,  
			CNUMFIN,  
			FFECHADOC,  			 
			CCODRUC,  
			CCODENTI,  
			FFECHAVEN,
			(CASE WHEN CMREG = 'S' THEN ABS(NBASE1) ELSE ABS(ROUND(NBASE1/NTC,2)) END)::numeric(13,2) AS NBASE1,
			(CASE WHEN CMREG = 'S' THEN ABS(NIGV1)  ELSE  ABS(ROUND(NIGV1 /NTC,2))   END)::numeric(13,2) AS NIGV1,  
			(CASE WHEN CMREG = 'S' THEN ABS(NBASE2) ELSE ABS(ROUND(NBASE2/NTC,2)) END)::numeric(13,2) AS NBASE2,  
			(0.00)::NUMERIC(13,2) as NIGV2,  
			(CASE WHEN CMREG = 'S' THEN ABS(NBASE3) ELSE ABS(ROUND(NBASE3/NTC,2)) END)::numeric(13,2) AS NBASE3,  
			(0.00)::NUMERIC(13,2) AS NIGV3,  
			(CASE WHEN CMREG = 'S' THEN ABS(NINA)      ELSE ABS(ROUND(NINA/NTC,2))      END)::numeric(13,2) AS NINA,  
			(CASE WHEN CMREG = 'S' THEN ABS(NEXO)     ELSE ABS(ROUND(NEXO/NTC,2))    END)::numeric(13,2) AS NEXO,  
			(CASE WHEN CMREG = 'S' THEN ABS(NISC)      ELSE ABS(ROUND(NISC/NTC,2))      END)::numeric(13,2) AS NISC,  
			(0.00)::NUMERIC(13,2) AS NIVABASE,  
			(0.00)::NUMERIC(13,2) AS NIVAIMP,  
			(CASE WHEN CMREG = 'S' THEN ABS(NTOTS)   ELSE ABS(NDOLAR)   END)::numeric(13,2) AS NTOT,  
			ABS(NBASE1) AS NBASE1S,  
			ABS(NIGV1)  AS NIGV1S,  
			ABS(NBASE2)::numeric(13,2) AS NBASE2S,  
			(0.00)::NUMERIC(13,2) AS NIGV2S,  
			ABS(NBASE3)::numeric(13,2) AS NBASE3S,  
			(0.00)::NUMERIC(13,2) AS NIGV3S,  
			ABS(NINA) AS NINAS,  
			ABS(NEXO) AS NEXOS,  
			ABS(NISC) AS NISCS,  
			(0.00)::NUMERIC(13,2) AS NIVABASES,  
			(0.00)::NUMERIC(13,2) AS NIVAIMPS,  
			ABS(NTOTS) AS NTOTS,  
			ABS(ROUND(NBASE1/NTC,2)) AS NBASE1D,  
			ABS(ROUND(NIGV1/NTC,2))   AS NIGV1D,  
			ABS(ROUND(NBASE2/NTC,2)) AS NBASE2D,  
			(0.00)::NUMERIC(13,2) AS NIGV2D,  
			ABS(ROUND(NBASE3/NTC,2)) AS NBASE3D,  
			(0.00)::NUMERIC(13,2) AS NIGV3D,   
			ABS(ROUND(NINA/NTC,2)) AS NINAD,    
			ABS(ROUND(NEXO/NTC,2)) AS NEXOD,    
			ABS(ROUND(NISC/NTC,2)) AS NISCD,   
			(0.00)::NUMERIC(13,2) AS NIVABASED,   
			(0.00)::NUMERIC(13,2) AS NIVAIMPD,   
			ABS(ROUND(NTOTS/NTC,2)) AS NTOTD,   
			('')::VARCHAR(4) AS CCODFLU,  
			('')::VARCHAR(3) AS CCODPAGO,  
			('')::VARCHAR(9) AS CCODCOS,  
			('')::VARCHAR(9) AS CCODCOS2,  
			('')::VARCHAR(10) AS CCODPRESU,  
			('')::VARCHAR(4) AS CCODCAM,  
			('')::VARCHAR(4) AS CCODCAM2,  
			('')::VARCHAR(2) AS ccodecpntribcol,  
			('')::VARCHAR(2) AS ccodecpnniifcol,  
			('')::VARCHAR(80) AS CGLOSA2,  
			('')::VARCHAR(2) AS CMESC,  
			('')::VARCHAR(1) AS CMREG,  
			('')::VARCHAR(4) AS CCODOCON,  
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,  
			CAST(NULL AS DATE) AS FFECHADIF,  
			NRESP AS NRESP,  
			(' ')::VARCHAR(2) AS ccodpps,  
			(' ')::VARCHAR(5) AS ccodpds, 
			(CASE WHEN NRESP = 3 THEN 'V' ELSE ' ' END)::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(CASE WHEN NRESP = 3 THEN NPORRE ELSE 0 END)::NUMERIC(5,2) AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 	  
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE, 
			NTC::NUMERIC(10,6) AS ntcre,  
			NTOTS::NUMERIC(13,2) AS nbaseres,  
			(CASE WHEN cmreg = 'S' THEN ROUND(NTOTS/NTC,2) ELSE NDOLAR END)::NUMERIC(13,2) AS nbasered,  
			NIMPRES::NUMERIC(13,2) AS nimpres,  
			(CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END)::NUMERIC(13,2) AS nimpred,  
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			crefdoc, 
			freffec, 
			crefser, 
			crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,  
			VARMES AS clecvmes,  
			VARPER  AS clecvper,  
			('1')::VARCHAR(1) AS cledmcesta,   
			VARMES as cledmcmes,  
			VARPER as cledmcper,  
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc,   
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,   
			00.00 AS nporisc,  
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd,  
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			ABS(NICBPERS)::numeric(13,2) AS NICBPERS,	
			('')::VARCHAR(20) AS CCTAICBPER,
			(CASE WHEN CMREG = 'S' THEN ABS(NICBPERS)  ELSE ABS(ROUND(NICBPERS/NTC,2))      END)::numeric(13,2) AS NICBPER,  
			ABS(ROUND(NICBPERS/NTC,2))::numeric(13,2) AS NICBPERD,
			nigv 
			FROM 
			(
			select  distinct on (RV.ccoddoc,RV.cserie,RV.cnumero,RV.cnumfin,RV.ctipdoc,RV.ccodruc,RV.cctatot) 
			Y.nasiento,RV.ntc,Y.cctatot,Y.ntots,Y.nigv1,Y.nbase1,Y.nbase2,Y.nigv2,Y.nbase3,Y.nigv3,Y.nina,Y.nexo,Y.nisc,
			RV.cmreg,Y.ndolar,RV.cglosa,RV.flaganalt,Y.ccoddoc,Y.cserie,Y.cnumero,Y.cnumfin,RV.ffechadoc,Y.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.NRESP,
			RV.NPORRE,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nicbpers,RV.nigv
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
			from cf_regven_integra
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y

			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot
			) as Z
			-- KMM - 20-12-2024 - pdda-865	
			where abs(coalesce(z.NIGV1,0.00)) &gt; 0.00 
			-- KMM - 20-12-2024 - pdda-865
				

			UNION ALL
			SELECT 
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO , 
			3 AS nidlin ,  
			NTC, 
			CCTABASE AS CCODCUE, --"70111               "
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE1+NBASE2+nina+nexo) ELSE ABS(ROUND((NBASE1+NBASE2+nina+nexo)/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) as NDEBE,
			(CASE WHEN (NBASE1+NBASE2+nina+nexo)&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE1+NBASE2+nina+nexo) ELSE ABS(ROUND((NBASE1+NBASE2+nina+nexo)/NTC,2)) END) ELSE 0.00 END)::numeric(13,2) as NHABER,
			CGLOSA, 
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &lt;0   THEN ABS(NBASE1+NBASE2+nina+nexo) ELSE 0.00 END )::NUMERIC(13,2) AS NDEBES,
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &gt;=0 THEN ABS(NBASE1+NBASE2+nina+nexo) ELSE 0.00 END )::NUMERIC(13,2) AS NHABERS,
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &lt;0   THEN ABS(ROUND((NBASE1+NBASE2+nina+nexo)/NTC,2)) ELSE 0.00 END )::NUMERIC(13,2) AS NDEBED,
			(CASE WHEN (NBASE1+NBASE2+nina+nexo) &gt;=0 THEN ABS(ROUND((NBASE1+NBASE2+nina+nexo)/NTC,2)) ELSE 0.00 END )::NUMERIC(13,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(' ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO,
			(' ')::VARCHAR(1) AS CREGIS, 
			(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN,
			FFECHADOC, 	 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN2, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD, 
			(CASE WHEN FLAGANALB=3 OR FLAGANALB = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALB=3 OR FLAGANALB = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ''  ELSE (CASE WHEN FLAGANALB   =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' 'END) END)::VARCHAR(2) AS CMESC,
			(CASE WHEN FLAGANALB = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE,
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre, 
			(0.00)::NUMERIC(15,2) AS nbaseres, 
			(0.00)::NUMERIC(15,2) AS nbasered, 
			(0.00)::NUMERIC(15,2) AS nimpres, 
			(0.00)::NUMERIC(15,2) AS nimpred, 
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			crefdoc, 
			freffec, 
			crefser, 
			crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta,
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(5) AS ccodisc, 
			00.00 AS nporisc, 
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd,
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 
			FROM 
			(
			select  Y.nasiento,RV.ntc,RV.cctabase,RV.cctatot,RV.ntots,RV.nigv1,RV.nbase1,RV.nbase2,RV.nigv2,RV.nbase3,RV.nigv3,RV.nina,RV.nexo,RV.nisc,
			RV.cmreg,RV.ndolar,RV.cglosa,RV.flaganalt,RV.flaganalb,RV.flaganalo,RV.FLAGCCOSB,RV.flagccoso,RV.FLAGPRESUB,RV.ccoddoc,RV.cserie,RV.cnumero,RV.cnumfin,RV.ffechadoc,RV.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.ffechaven2,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y
			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot 
			) AS Z

			UNION ALL

			SELECT   
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			4 AS nidlin ,   
			NTC, 
			CCTAOTRIB AS CCODCUE, --' vacio '
			(CASE WHEN NBASE3&lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE3) ELSE ABS(ROUND(NBASE3/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
			(CASE WHEN NBASE3&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NBASE3) ELSE ABS(ROUND(NBASE3/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN NBASE3&lt;0  THEN ABS(NBASE3) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
			(CASE WHEN NBASE3&gt;=0 THEN ABS(NBASE3) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
			(CASE WHEN NBASE3&lt;0  THEN ABS(ROUND(NBASE3/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
			(CASE WHEN NBASE3&gt;=0 THEN ABS(ROUND(NBASE3/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(' ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO,
			(' ')::VARCHAR(1) AS CREGIS, 
			(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN, 
			FFECHADOC, 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD, 
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUO&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ''  ELSE (CASE WHEN FLAGANALO =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' ' END)  END)::VARCHAR(2) AS CMESC,
			(CASE WHEN FLAGANALO = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE,
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre, 
			(0.00)::NUMERIC(15,2) AS nbaseres, 
			(0.00)::NUMERIC(15,2) AS nbasered, 
			(0.00)::NUMERIC(15,2) AS nimpres, 
			(0.00)::NUMERIC(15,2) AS nimpred, 
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta,
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(5) AS ccodisc, 
			00.00 AS nporisc, 
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd,
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 	
			FROM 
			(
			select  Y.nasiento,RV.ntc,RV.cctabase,RV.cctatot,RV.CCTAOTRIB,RV.ntots,RV.nigv1,RV.nbase1,RV.nbase2,RV.nigv2,RV.nbase3,RV.nigv3,RV.nina,RV.nexo,RV.nisc,
			RV.cmreg,RV.ndolar,RV.cglosa,RV.flaganalt,RV.flaganalb,RV.flaganalo,RV.FLAGCCOSB,RV.flagccoso,RV.FLAGPRESUB,RV.FLAGPRESUO,RV.ccoddoc,RV.cserie,RV.cnumero,RV.cnumfin,RV.ffechadoc,RV.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y

			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot 
			WHERE Y.NBASE3 &lt;&gt; 0
			) AS Z

			/** cf_regven_integra	WHERE NBASE3 &lt;&gt; 0 **/

			UNION ALL

			SELECT   
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			5 AS nidlin ,   
			NTC, 
			cctaicbper AS CCODCUE, --- 'vacio'
			(CASE WHEN nicbpers&lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(nicbpers) ELSE ABS(ROUND(nicbpers/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
			(CASE WHEN nicbpers&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(nicbpers) ELSE ABS(ROUND(nicbpers/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN nicbpers&lt;0  THEN ABS(nicbpers) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
			(CASE WHEN nicbpers&gt;=0 THEN ABS(nicbpers) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
			(CASE WHEN nicbpers&lt;0  THEN ABS(ROUND(nicbpers/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
			(CASE WHEN nicbpers&gt;=0 THEN ABS(ROUND(nicbpers/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(' ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO,
			(' ')::VARCHAR(1) AS CREGIS, 
			(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN, 
			FFECHADOC, 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD, 
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUO&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ''  ELSE (CASE WHEN FLAGANALO =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' ' END)  END)::VARCHAR(2) AS CMESC,
			(CASE WHEN FLAGANALO = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE,
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre, 
			(0.00)::NUMERIC(15,2) AS nbaseres, 
			(0.00)::NUMERIC(15,2) AS nbasered, 
			(0.00)::NUMERIC(15,2) AS nimpres, 
			(0.00)::NUMERIC(15,2) AS nimpred, 
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta,
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(5) AS ccodisc, 
			00.00 AS nporisc, 
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd,
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 		
			FROM 
			(
			select  Y.nasiento,RV.ntc,RV.cctabase,RV.cctatot,RV.CCTAOTRIB,RV.ntots,RV.nigv1,RV.nbase1,RV.nbase2,RV.nigv2,RV.nbase3,RV.nigv3,RV.nina,RV.nexo,RV.nisc,
			RV.cmreg,RV.ndolar,RV.cglosa,RV.flaganalt,RV.flaganalb,RV.flaganalo,RV.FLAGCCOSB,RV.flagccoso,RV.FLAGPRESUB,RV.FLAGPRESUO,RV.ccoddoc,RV.cserie,RV.cnumero,RV.cnumfin,RV.ffechadoc,RV.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,RV.crefnum,RV.nicbpers,RV.cctaicbper,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar, sum(nicbpers) as nicbpers
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y
			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot 
			WHERE Y.NICBPERS &lt;&gt; 0) AS Z

			UNION ALL

			/* INICIO ISC*/
			SELECT   
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			5 AS nidlin ,   
			NTC, 
			varisc AS CCODCUE, --- 'vacio'
			(CASE WHEN nisc&lt;0  THEN (CASE WHEN CMREG = 'S' THEN ABS(nisc) ELSE ABS(ROUND(nisc/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
			(CASE WHEN nisc&gt;=0 THEN (CASE WHEN CMREG = 'S' THEN ABS(nisc) ELSE ABS(ROUND(nisc/NTC,2))END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN nisc&lt;0  THEN ABS(nisc) ELSE 0.00 END)::numeric(13,2) AS NDEBES,
			(CASE WHEN nisc&gt;=0 THEN ABS(nisc) ELSE 0.00 END)::numeric(13,2) AS NHABERS,
			(CASE WHEN nisc&lt;0  THEN ABS(ROUND(nisc/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NDEBED,
			(CASE WHEN nisc&gt;=0 THEN ABS(ROUND(nisc/NTC,2)) ELSE 0.00 END)::numeric(13,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(' ')::VARCHAR(3) AS CDESTINO,
			(0)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO,
			(' ')::VARCHAR(1) AS CREGIS, 
			(CASE WHEN FLAGANALO = 2 THEN 1 ELSE 0 END) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN, 
			FFECHADOC, 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD, 
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE ' 'END)::VARCHAR(4) AS CCODFLU,
			(CASE WHEN FLAGANALO=3 OR FLAGANALT = 4 THEN '008' ELSE '' END)::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS ELSE '' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSO&gt;1 THEN CCODCOS2 ELSE '' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUO&gt;1 THEN CCODPRESU ELSE '' END) ELSE '' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(CASE WHEN VARSOLOVENTA=1 THEN ''  ELSE (CASE WHEN FLAGANALO =2 THEN (CASE WHEN CCOND ='CON' THEN VARMES ELSE '' END) ELSE ' ' END)  END)::VARCHAR(2) AS CMESC,
			(CASE WHEN FLAGANALO = 2 THEN CMREG ELSE '' END)::VARCHAR(2) AS CMREG,
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO,
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE,
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre, 
			(0.00)::NUMERIC(15,2) AS nbaseres, 
			(0.00)::NUMERIC(15,2) AS nbasered, 
			(0.00)::NUMERIC(15,2) AS nimpres, 
			(0.00)::NUMERIC(15,2) AS nimpred, 
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre, 
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			('1')::VARCHAR(1) AS cledmcesta,
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(5) AS ccodisc, 
			00.00 AS nporisc, 
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd,
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd, 
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			('')::VARCHAR(20) AS CCTAICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv 		
			FROM 
			(
			select  Y.nasiento,RV.ntc,RV.cctabase,RV.cctatot,RV.CCTAOTRIB,RV.ntots,RV.nigv1,RV.nbase1,RV.nbase2,RV.nigv2,RV.nbase3,RV.nigv3,RV.nina,RV.nexo,RV.nisc,
			RV.cmreg,RV.ndolar,RV.cglosa,RV.flaganalt,RV.flaganalb,RV.flaganalo,RV.FLAGCCOSB,RV.flagccoso,RV.FLAGPRESUB,RV.FLAGPRESUO,RV.ccoddoc,RV.cserie,RV.cnumero,
			RV.cnumfin,RV.ffechadoc,RV.ccodruc,
			RV.ccodenti,RV.ffechaven,RV.flagccost,RV.ccodcos,RV.ccodcos2,RV.flagpresut,RV.ccodpresu,RV.ccond,RV.nimpres,RV.crefdoc,RV.freffec,RV.crefser,
			RV.crefnum,RV.nicbpers,RV.cctaicbper,RV.nigv 
			from cf_regven_integra RV
			inner join
			(
			select  nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc,cctatot,
			sum(nbase1) as nbase1,sum(nigv1) as nigv1,sum(nbase2) as nbase2,sum(nigv2) as nigv2,sum(nbase3) as nbase3,
			sum(nigv3) as nigv3,sum(nina) as nina,sum(nisc) as nisc,sum(nexo) as nexo,sum(ntots) as ntots, sum(ndolar) as ndolar, sum(nicbpers) as nicbpers
			from cf_regven_integra 
			group by nasiento,ccoddoc,cserie,cnumero,cnumfin,ctipdoc,ccodruc, cctatot
			) as Y
			ON RV.ccoddoc=Y.ccoddoc AND RV.cserie=Y.cserie AND RV.cnumero=Y.cnumero AND RV.cnumfin=Y.cnumfin AND RV.ctipdoc=Y.ctipdoc AND RV.ccodruc=Y.ccodruc AND RV.cctatot=Y.cctatot 
			WHERE Y.NISC &lt;&gt; 0) AS Z

			/*FIN DE ISC */  

			order by cper, cmes, ccodori, nasiento, nidlin
			) ;  ----fin del insert

			RAISE NOTICE 'PROCESO RESDIF';

			INSERT INTO RESDIF( 

			SELECT  T.CCODORI, 
			T.NIDLIN, 
			(case when R.CMREG = 'S' then (case when T.DIF1D&gt;0 then VARDIFG else  VARDIFP end) else ' ' end)::varchar(20) as CCTADIFD, 
			(case when R.CMREG = 'D' then (case when T.DIF1S&gt;0 then VARDIFG else  VARDIFP end) else ' ' end)::varchar(20) as CCTADIFS, 
			T.DIF1, 
			T.DIF1S, 
			T.DIF1D, 
			R.*
			FROM (select distinct on (ccoddoc, cserie, cnumero) ffechadoc, ffechaven, ccoddoc, cserie, cnumero, ccodenti, cdesenti, 
			       ctipdoc, ccodruc, crazsoc, nbase2, nbase1, nexo, nina, nisc, 
			       nigv1, nbase3, ntots, ntc, freffec, crefdoc, crefser, crefnum, 
			       cmreg, ndolar, ffechaven2, ccond, ccodcos, ccodcos2, cctabase, 
			       cctaotrib, cctatot, nresp, nporre, nimpres, cserre, cnumre, ffecre, 
			       ccodpresu, nigv, cglosa, ccodpago, nperdenre, nbaseres, cctaperc, 
			       incomp, lneg, vmespd, nnetd, nimpd, nbase2d, nigv2d, nbase3d, 
			       nigv3d, ninad, niscd, nexod, ntotd, nntc, nbaseimp, nbaseimpd, 
			       nresini, nresfin, nigv2, nigv3, errores, cctacobra, flaganalb, 
			       flaganalo, flaganalt, flagccosb, flagccoso, flagccost, flagpresub, 
			       flagpresuo, flagpresut, nasiento, cnumfin, nicbpers, cctaicbper  from cf_regven_integra order by ccoddoc, cserie, cnumero) R 
			INNER JOIN 
			(
			SELECT 
			CCODRUC, CCODDOC, CSERIE,CNUMERO,CPER, CMES, CCODORI,NASIENTO,
			SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, 
			SUM(NDEBED-NHABERD) AS DIF1D, MAX(NIDLIN)  AS NIDLIN 
			FROM tmpregcv 
			GROUP BY CCODRUC, CCODDOC, CSERIE,CNUMERO,CPER, CMES, CCODORI,NASIENTO 
			HAVING SUM(NDEBE-NHABER) &lt;&gt;0 OR SUM(NDEBES-NHABERS) &lt;&gt; 0 OR SUM(NDEBED	-NHABERD) &lt;&gt; 0
			) AS T 
			 ON R.CCODRUC = T.CCODRUC AND R.CCODDOC = T.CCODDOC AND R.CSERIE = T.CSERIE AND R.CNUMERO = T.CNUMERO 
			);

			SELECT COUNT(*) AS CONTADOR FROM RESDIF INTO CONTADOR;

			IF CONTADOR &gt; 0 THEN 
			BEGIN

			RAISE NOTICE 'PROCESO TMPREGCV1 ingreso al IF contador';

			INSERT INTO TMPREGCV1(
			SELECT 
			VARPER AS CPER,
			VARMES AS CMES,
			VARORI AS CCODORI,
			nasiEntO + varmax  AS NASIENTO,
			(NIDLIN + 1) AS nidlin ,  
			(0.00)::numeric(10,6) AS NTC,
			(CASE WHEN TRIM(CCTADIFD)='' THEN (CASE WHEN TRIM(CCTADIFS)='' THEN '' ELSE CCTADIFS END) ELSE CCTADIFD END)::VARCHAR(20) AS CCODCUE,
			(0.00)::numeric(13,2) AS NDEBE,
			(0.00)::numeric(13,2) AS NHABER,
			CGLOSA,
			(CASE WHEN CMREG='D' AND DIF1S &lt; 0 THEN ABS(DIF1S)  ELSE 0.00  END)::NUMERIC(15,2) AS NDEBES,
			(CASE WHEN CMREG='D' AND DIF1S &gt; 0 THEN ABS(DIF1S)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERS,
			(CASE WHEN CMREG='S' AND DIF1d &lt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NDEBED,
			(CASE WHEN CMREG='S' AND DIF1d &gt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERD,
			(' ')::VARCHAR(1) AS CDES,
			(CASE WHEN DIF1S+DIF1D &gt; 0 THEN '   ' ELSE '001' END)::VARCHAR(3) AS CDESTINO,
			(1)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			(' ')::VARCHAR(1) AS CREGIS,
			(0)::NUMERIC(1,0) AS NCOMP,
			CCODDOC,
			CSERIE,
			CNUMERO,
			CNUMFIN,
			FFECHADOC, 
			CCODRUC,
			CCODENTI,
			FFECHAVEN,
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD,
			('')::VARCHAR(4) AS CCODFLU,
			('')::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS  ELSE ' ' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE ' ' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE ' ' END) ELSE ' ' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(' ')::VARCHAR(2) AS CMESC, 
			(' ')::VARCHAR(1) AS CMREG, 
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre,
			(0.00)::NUMERIC(15,2) AS nbaseres,
			(0.00)::NUMERIC(15,2) AS nbasered,
			(0.00)::NUMERIC(15,2) AS nimpres,
			(0.00)::NUMERIC(15,2) AS nimpred,
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre,
			('1')::VARCHAR(1) AS clecvesta, 
			VARMES AS clecvmes,
			VARPER  AS clecvper,
			1 AS cledmcesta,
			VARMES as cledmcmes,
			VARPER as cledmcper,
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,  
			00.00 AS nporisc,  
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd,
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			(' ')::VARCHAR(20) AS cctaicbper,	
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS nigv
			FROM RESDIF
			);

			-- preguntar esta linea 
			 DELETE FROM RESDIF WHERE DIF1S &gt; 0 OR DIF1D &gt; 0;

			SELECT COUNT(*) AS CONTADOR FROM RESDIF WHERE DIF1S &lt; 0 OR DIF1D &lt; 0 INTO CONTADOR;

			IF CONTADOR &gt; 0 THEN 
			BEGIN 
			RAISE NOTICE 'PROCESO TMPREGCV2 ingreso al IF contador';
			INSERT INTO TMPREGCV2(
			SELECT 
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			(NIDLIN + 2) AS nidlin ,   
			(0.00)::numeric(10,6) AS NTC,
			vardifpD AS CCODCUE, 
			(0.00)::numeric(13,2) AS NDEBE,
			(0.00)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN CMREG='D' AND DIF1S &lt; 0 THEN ABS(DIF1S)  ELSE 0.00  END)::NUMERIC(15,2) AS NDEBES,
			(CASE WHEN CMREG='D' AND DIF1S &gt; 0 THEN ABS(DIF1S)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERS,
			(CASE WHEN CMREG='S' AND DIF1d &lt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NDEBED,
			(CASE WHEN CMREG='S' AND DIF1d &gt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERD,
			('S')::VARCHAR(1) AS CDES,
			(CASE WHEN DIF1S+DIF1D &gt; 0 THEN '   ' ELSE '001' END)::VARCHAR(3) AS CDESTINO,
			(1)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			(' ')::VARCHAR(1) AS CREGIS,
			(0)::NUMERIC(1,0) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN,
			FFECHADOC, 	 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD,
			('')::VARCHAR(4) AS CCODFLU,
			('')::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS  ELSE ' ' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE ' ' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE ' ' END) ELSE ' ' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(' ')::VARCHAR(2) AS CMESC, 
			(' ')::VARCHAR(1) AS CMREG, 
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre,
			(0.00)::NUMERIC(15,2) AS nbaseres,
			(0.00)::NUMERIC(15,2) AS nbasered,
			(0.00)::NUMERIC(15,2) AS nimpres,
			(0.00)::NUMERIC(15,2) AS nimpred,
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom, 
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre,
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			1 AS cledmcesta, 
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,  
			00.00 AS nporisc,  
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd,
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			(' ')::VARCHAR(20) AS cctaicbper,
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) as nigv
			FROM resdif WHERE dif1s &lt; 0 or dif1d &lt; 0
			UNION all 
			SELECT 
			VARPER AS CPER, 
			VARMES AS CMES, 
			VARORI AS CCODORI, 
			nasiEntO + varmax  AS NASIENTO, 
			(NIDLIN + 3) AS nidlin , 
			(0.00)::numeric(10,6) AS NTC,
			vardifpH AS CCODCUE, 
			(0.00)::numeric(13,2) AS NDEBE,
			(0.00)::numeric(13,2) AS NHABER,
			CGLOSA, 
			(CASE WHEN CMREG='D' AND DIF1S &gt; 0 THEN ABS(DIF1S)  ELSE 0.00  END)::NUMERIC(15,2) AS NDEBES,
			(CASE WHEN CMREG='D' AND DIF1S &lt; 0 THEN ABS(DIF1S)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERS,
			(CASE WHEN CMREG='S' AND DIF1d &gt;0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NDEBED,
			(CASE WHEN CMREG='S' AND DIF1d &lt; 0 THEN ABS(DIF1D)  ELSE 0.00 END)::NUMERIC(15,2) AS NHABERD,
			('S')::VARCHAR(1) AS CDES,
			(CASE WHEN DIF1S+DIF1D &gt; 0 THEN '   ' ELSE '001' END)::VARCHAR(3) AS CDESTINO, 
			(1)::NUMERIC(1,0) AS NDIFAUTO, 
			(0)::NUMERIC(1,0) AS NAJUSAUTO, 
			(' ')::VARCHAR(1) AS CREGIS,
			(0)::NUMERIC(1,0) AS NCOMP,
			CCODDOC, 
			CSERIE, 
			CNUMERO, 
			CNUMFIN,
			FFECHADOC, 		 
			CCODRUC, 
			CCODENTI, 
			FFECHAVEN, 
			(0.00)::NUMERIC(13,2) AS NBASE1, 
			(0.00)::NUMERIC(13,2) AS NIGV1, 
			(0.00)::NUMERIC(13,2) AS NBASE2, 
			(0.00)::NUMERIC(13,2) AS NIGV2, 
			(0.00)::NUMERIC(13,2) AS NBASE3, 
			(0.00)::NUMERIC(13,2) AS NIGV3, 
			(0.00)::NUMERIC(13,2) AS NINA, 
			(0.00)::NUMERIC(13,2) AS NEXO, 
			(0.00)::NUMERIC(13,2) AS NISC, 
			(0.00)::NUMERIC(13,2) AS NIVABASE, 
			(0.00)::NUMERIC(13,2) AS NIVAIMP, 
			(0.00)::NUMERIC(13,2) AS NTOT, 
			(0.00)::NUMERIC(13,2) AS NBASE1S, 
			(0.00)::NUMERIC(13,2) AS NIGV1S, 
			(0.00)::NUMERIC(13,2) AS NBASE2S, 
			(0.00)::NUMERIC(13,2) AS NIGV2S, 
			(0.00)::NUMERIC(13,2) AS NBASE3S, 
			(0.00)::NUMERIC(13,2) AS NIGV3S, 
			(0.00)::NUMERIC(13,2) AS NINAS, 
			(0.00)::NUMERIC(13,2) AS NEXOS, 
			(0.00)::NUMERIC(13,2) AS NISCS, 
			(0.00)::NUMERIC(13,2) AS NIVABASES, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
			(0.00)::NUMERIC(13,2) AS NTOTS, 
			(0.00)::NUMERIC(13,2) AS NBASE1D, 
			(0.00)::NUMERIC(13,2) AS NIGV1D, 
			(0.00)::NUMERIC(13,2) AS NBASE2D, 
			(0.00)::NUMERIC(13,2) AS NIGV2D, 
			(0.00)::NUMERIC(13,2) AS NBASE3D, 
			(0.00)::NUMERIC(13,2) AS NIGV3D, 
			(0.00)::NUMERIC(13,2) AS NINAD, 
			(0.00)::NUMERIC(13,2) AS NEXOD, 
			(0.00)::NUMERIC(13,2) AS NISCD, 
			(0.00)::NUMERIC(13,2) AS NIVABASED, 
			(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
			(0.00)::NUMERIC(13,2) AS NTOTD,
			('')::VARCHAR(4) AS CCODFLU,
			('')::VARCHAR(3) AS CCODPAGO,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS  ELSE ' ' END)::VARCHAR(9) AS CCODCOS,
			(CASE WHEN FLAGCCOSB&gt;1 THEN CCODCOS2 ELSE ' ' END)::VARCHAR(9) AS CCODCOS2,
			(CASE WHEN VARPRESUR=1 THEN (CASE WHEN FLAGPRESUB&gt;1 THEN CCODPRESU ELSE ' ' END) ELSE ' ' END)::VARCHAR(10) AS CCODPRESU,
			(' ')::VARCHAR(4) AS CCODCAM, 
			(' ')::VARCHAR(4) AS CCODCAM2, 
			(' ')::VARCHAR(2) AS ccodecpntribcol, 
			(' ')::VARCHAR(2) AS ccodecpnniifcol, 
			(' ')::VARCHAR(80) AS CGLOSA2,
			(' ')::VARCHAR(2) AS CMESC, 
			(' ')::VARCHAR(1) AS CMREG, 
			(' ')::VARCHAR(4) AS CCODOCON, 
			(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
			CAST(NULL AS DATE) AS FFECHADIF, 
			(0.00)::NUMERIC(1,0) AS NRESP, 
			(' ')::VARCHAR(2) AS ccodpps, 
			(' ')::VARCHAR(5) AS ccodpds, 
			(' ')::VARCHAR(1) AS CREGISRE, 
			(0.00)::NUMERIC(1,0) AS nperdenre, 
			(0.00)::NUMERIC(1,0)AS nporre, 
			CAST(NULL AS DATE) AS FFECRE, 
			(' ')::VARCHAR(6)  AS CSERRE, 
			(' ')::VARCHAR(13) AS CNUMRE, 
			(' ')::VARCHAR(15) AS CNUMDERE,
			(0.00)::NUMERIC(10,6) AS ntcre,
			(0.00)::NUMERIC(15,2) AS nbaseres,
			(0.00)::NUMERIC(15,2) AS nbasered,
			(0.00)::NUMERIC(15,2) AS nimpres,
			(0.00)::NUMERIC(15,2) AS nimpred,
			(' ')::VARCHAR(8) AS cpdbdetcod, 
			(' ')::VARCHAR(2) AS ccodretran, 
			(' ')::VARCHAR(2) AS ccodtopdet, 
			(0)::NUMERIC(1,0) AS npagdetra, 
			(' ')::VARCHAR(20) AS cdocnodom,
			(' ')::VARCHAR(2) AS crefdoc, 
			CAST(NULL AS DATE) AS freffec, 
			(' ')::VARCHAR(10) AS crefser, 
			(' ')::VARCHAR(13) AS crefnum, 
			(' ')::VARCHAR(3) AS ccoddas, 
			(' ')::VARCHAR(4) AS cyeardas, 
			(' ')::VARCHAR(6) AS ccorrdas, 
			CAST(NULL AS DATE) AS ffembdas, 
			CAST(NULL AS DATE) AS ffregdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdas, 
			(0.00)::NUMERIC(15,2)  AS nfobdad, 
			(0.00)::NUMERIC(6,0)  AS nlecorre,
			('1')::VARCHAR(1) AS clecvesta,
			VARMES AS clecvmes, 
			VARPER  AS clecvper, 
			1 AS cledmcesta, 
			VARMES as cledmcmes, 
			VARPER as cledmcper, 
			(0.00)::NUMERIC(6,0) AS nlecorrere, 
			(0.00)::NUMERIC(1,0) as nautamo, 
			CAST(NULL AS DATE) as ffec_dc, 
			(' ')::VARCHAR(2) AS cdoc_dc, 
			(' ')::VARCHAR(20) AS cser_dc, 
			(' ')::VARCHAR(20) AS cnum_dc, 
			(' ')::VARCHAR(20) AS ccodisc,  
			00.00 AS nporisc,  
			(' ')::VARCHAR(1) AS CCODCLAS, 
			(' ')::VARCHAR(2) AS ccodtipren, 
			(' ')::VARCHAR(2) AS cdoc_nd, 
			(' ')::VARCHAR(20) AS cser_nd, 
			(' ')::VARCHAR(20) AS cnum_nd, 
			(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
			(0.00)::NUMERIC(15,2) AS nrennet_nd, 
			(0.00)::NUMERIC(15,2) AS nimpret_nd, 
			(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
			(0.00)::NUMERIC(15,2) AS ntasret_nd,
			(' ')::VARCHAR(3)  AS ccodmon, 
			(0.00)::NUMERIC(5,3) AS ntc_nd, 
			(0.00)::NUMERIC(1,0) AS nintext,
			(0.00)::NUMERIC(13,2) AS NICBPERS,
			(' ')::VARCHAR(20) AS cctaicbper,	
			(0.00)::NUMERIC(13,2) AS NICBPER,
			(0.00)::NUMERIC(13,2) AS NICBPERD,
			(0.00)::NUMERIC(5,2) AS  nigv	
			FROM resdif WHERE dif1s &lt; 0 or dif1d &lt; 0
			);

			END;
			END IF;

			END;
			END IF ;

			INSERT INTO TMPREGCV(
			SELECT * FROM TMPREGCV1
			UNION ALL
			SELECT * FROM TMPREGCV2
			);

			/******INICIO MODIFICACION**************/
			insert into resultado (
			select cper,cmes,ccodori,nasiento,
			  row_number() over (PARTITION BY CPER,CMES,CCODORI,NASIENTO ORDER BY NIDLIN) as nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes,cdestino,
			  ndifauto,najusauto,cregis,ncomp,ccoddoc,cserie,
			  cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,nbase1,nigv1,nbase2,nigv2,nbase3,nigv3,nina,nexo,nisc,nivabase,nivaimp,ntot,nbase1s,nigv1s,nbase2s,nigv2s,nbase3s,
			  nigv3s,ninas,nexos,niscs,nivabases,nivaimps,ntots,nbase1d,nigv1d,nbase2d,nigv2d,nbase3d,nigv3d,ninad,nexod,niscd,nivabased,nivaimpd,ntotd,ccodflu,ccodpago,ccodcos,
			  ccodcos2,ccodpresu,ccodcam,ccodcam2,ccodecpntribcol,ccodecpnniifcol,cglosa2,cmesc,cmreg,ccodocon,ndiferido,ffechadif,nresp,ccodpps,ccodpds,cregisre,nperdenre,
			  nporre,ffecre,cserre,cnumre,cnumdere,ntcre,nbaseres,nbasered,nimpres,nimpred,cpdbdetcod,ccodretran,ccodtopdet,npagdetra,cdocnodom,crefdoc,freffec,crefser,crefnum,
			  ccoddas,cyeardas,ccorrdas,ffembdas,ffregdas,nfobdas,nfobdad,nlecorre,clecvesta,clecvmes,clecvper,cledmcesta,cledmcmes,cledmcper,nlecorrere,nautamo,ffec_dc,cdoc_dc,
			  cser_dc,cnum_dc,CCODISC,NPORISC,ccodclas,ccodtipren,cdoc_nd,cser_nd,cnum_nd,nrenbru_nd,nrennet_nd,nimpret_nd,ndedcos_nd,ntasret_nd,ccodmon,ntc_nd,nintext,
			  nicbpers,cctaicbper,nicbper,nicbperd,nigv 
			from tmpregcv ORDER BY CPER,CMES,CCODORI,NASIENTO,NIDLIN
			);

			/******FIN MODIFICACION******/

			IF VARSOLOVENTA = 0 THEN
			BEGIN
				RAISE NOTICE 'ENTRO AL PRCOCESO tmpregcv3 ';

				INSERT INTO tmpregcv3(
				SELECT  
				VARPER AS CPER, 
				VARMES AS CMES, 
				VARORICOB AS CCODORI,
				NASIENTO + varmaxCOB AS NASIENTO , 
				1 AS nidlin , 
				NTC, 
				CCTACOBRA AS CCODCUE, 
				(CASE WHEN NTOTS &gt;= 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(NDOLAR) END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
				(CASE WHEN NTOTS &lt;  0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(NDOLAR) END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
				CGLOSA,
				(CASE WHEN NTOTS &gt;= 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBES, 
				(CASE WHEN NTOTS &lt; 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
				(CASE WHEN NTOTS &gt;= 0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NDOLAR) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
				(CASE WHEN NTOTS &lt;  0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NDOLAR) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
				(' ')::VARCHAR(1) AS CDES,
				('   ')::VARCHAR(3) AS CDESTINO,
				(0)::NUMERIC(1,0) AS NDIFAUTO, 
				(0)::NUMERIC(1,0) AS NAJUSAUTO, 
				(' ')::VARCHAR(1) AS CREGIS,
				(0)::NUMERIC(1,0) AS NCOMP ,
				CCODDOC, 
				CSERIE,
				CNUMERO, 
				CNUMFIN,
				FFECHADOC, 			 
				CCODRUC, 
				CCODENTI, 
				FFECHAVEN,
				(0.00)::NUMERIC(13,2) AS NBASE1, 
				(0.00)::NUMERIC(13,2) AS NIGV1, 
				(0.00)::NUMERIC(13,2) AS NBASE2, 
				(0.00)::NUMERIC(13,2) AS NIGV2, 
				(0.00)::NUMERIC(13,2) AS NBASE3, 
				(0.00)::NUMERIC(13,2) AS NIGV3, 
				(0.00)::NUMERIC(13,2) AS NINA, 
				(0.00)::NUMERIC(13,2) AS NEXO, 
				(0.00)::NUMERIC(13,2) AS NISC, 
				(0.00)::NUMERIC(13,2) AS NIVABASE, 
				(0.00)::NUMERIC(13,2) AS NIVAIMP, 
				(0.00)::NUMERIC(13,2) AS NTOT, 
				(0.00)::NUMERIC(13,2) AS NBASE1S, 
				(0.00)::NUMERIC(13,2) AS NIGV1S, 
				(0.00)::NUMERIC(13,2) AS NBASE2S, 
				(0.00)::NUMERIC(13,2) AS NIGV2S, 
				(0.00)::NUMERIC(13,2) AS NBASE3S, 
				(0.00)::NUMERIC(13,2) AS NIGV3S, 
				(0.00)::NUMERIC(13,2) AS NINAS, 
				(0.00)::NUMERIC(13,2) AS NEXOS, 
				(0.00)::NUMERIC(13,2) AS NISCS, 
				(0.00)::NUMERIC(13,2) AS NIVABASES, 
				(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
				(0.00)::NUMERIC(13,2) AS NTOTS, 
				(0.00)::NUMERIC(13,2) AS NBASE1D, 
				(0.00)::NUMERIC(13,2) AS NIGV1D, 
				(0.00)::NUMERIC(13,2) AS NBASE2D, 
				(0.00)::NUMERIC(13,2) AS NIGV2D, 
				(0.00)::NUMERIC(13,2) AS NBASE3D, 
				(0.00)::NUMERIC(13,2) AS NIGV3D, 
				(0.00)::NUMERIC(13,2) AS NINAD, 
				(0.00)::NUMERIC(13,2) AS NEXOD,
				(0.00)::NUMERIC(13,2) AS NISCD, 
				(0.00)::NUMERIC(13,2) AS NIVABASED, 
				(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
				(0.00)::NUMERIC(13,2) AS NTOTD,
				(CASE WHEN FLAGANALCOB=3 OR FLAGANALCOB = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
				(CASE WHEN FLAGANALCOB=3 OR FLAGANALCOB = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
				(' ')::VARCHAR(9) AS CCODCOS,
				(' ')::VARCHAR(9) AS CCODCOS2,
				(' ')::VARCHAR(10) AS CCODPRESU,
				(' ')::VARCHAR(4) AS CCODCAM, 
				(' ')::VARCHAR(4) AS CCODCAM2, 
				(' ')::VARCHAR(2) AS ccodecpntribcol, 
				(' ')::VARCHAR(2) AS ccodecpnniifcol, 
				(' ')::VARCHAR(80) AS CGLOSA2,
				(' ')::VARCHAR(2)  AS CMESC,
				(' ')::VARCHAR(1) AS CMREG,  
				(' ')::VARCHAR(4) AS CCODOCON,
				(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
				CAST(NULL AS DATE) AS FFECHADIF,
				(0)::NUMERIC(1,0) AS NRESP,
				(' ')::VARCHAR(2) AS ccodpps, 
				(' ')::VARCHAR(5) AS ccodpds,
				(' ')::VARCHAR(1) AS CREGISRE, 
				(0.00)::NUMERIC(1,0) AS nperdenre, 
				(0.00)::NUMERIC(1,0)AS nporre, 
				CAST(NULL AS DATE) AS FFECRE, 				
				(' ')::VARCHAR(6)  AS CSERRE, 
				(' ')::VARCHAR(13) AS CNUMRE, 
				(' ')::VARCHAR(15) AS CNUMDERE,
				(0.00)::NUMERIC(10,6) AS NTCRE,
				(0.00)::NUMERIC(15,2) AS NBASERES,
				(0.00)::NUMERIC(15,2) AS nbasered,
				(0.00)::NUMERIC(15,2) AS nimpres,
				(0.00) AS nimpred,
				(' ')::VARCHAR(8) AS cpdbdetcod, 
				(' ')::VARCHAR(2) AS ccodretran, 
				(' ')::VARCHAR(2) AS ccodtopdet, 
				(0)::NUMERIC(1,0) AS npagdetra, 
				(' ')::VARCHAR(20) AS cdocnodom, 
				(' ')::VARCHAR(2) AS crefdoc, 
				CAST(NULL AS DATE) AS freffec,
				(' ')::VARCHAR(10) AS crefser, 
				(' ')::VARCHAR(13) AS crefnum, 
				(' ')::VARCHAR(3) AS ccoddas, 
				(' ')::VARCHAR(4) AS cyeardas, 
				(' ')::VARCHAR(6) AS ccorrdas, 
				CAST(NULL AS DATE) AS ffembdas, 
				CAST(NULL AS DATE) AS ffregdas, 
				(0.00)::NUMERIC(15,2)  AS nfobdas, 
				(0.00)::NUMERIC(15,2)  AS nfobdad, 
				(0.00)::NUMERIC(6,0)  AS nlecorre, 
				('1')::VARCHAR(1) AS clecvesta, 
				VARMES AS clecvmes, 
				VARPER  AS clecvper, 
				('1')::VARCHAR(1) AS cledmcesta, 
				VARMES as cledmcmes, 
				VARPER as cledmcper, 
				(0.00)::NUMERIC(6,0) AS nlecorrere, 
				(0.00)::NUMERIC(1,0) as nautamo, 
				CAST(NULL AS DATE) as ffec_dc, 
				(' ')::VARCHAR(2) AS cdoc_dc, 
				(' ')::VARCHAR(20) AS cser_dc, 
				(' ')::VARCHAR(20) AS cnum_dc, 
				(' ')::VARCHAR(20) AS ccodisc,
				00.00 AS nporisc,  		
				(' ')::VARCHAR(1) AS CCODCLAS, 
				(' ')::VARCHAR(2) AS ccodtipren, 
				(' ')::VARCHAR(2) AS cdoc_nd, 
				(' ')::VARCHAR(20) AS cser_nd, 
				(' ')::VARCHAR(20) AS cnum_nd, 
				(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
				(0.00)::NUMERIC(15,2) AS nrennet_nd, 
				(0.00)::NUMERIC(15,2) AS nimpret_nd, 
				(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
				(0.00)::NUMERIC(15,2) AS ntasret_nd, 
				('1')::VARCHAR(3)  AS ccodmon, 
				(0.00)::NUMERIC(5,3) AS ntc_nd, 
				(0.00)::NUMERIC(1,0) AS nintext,
				(0.00)::NUMERIC(13,2) AS NICBPERS,
				(' ')::VARCHAR(20) AS cctaicbper,	
				(0.00)::NUMERIC(13,2) AS NICBPER,
				(0.00)::NUMERIC(13,2) AS NICBPERD ,
				(0.00)::NUMERIC(5,2) AS nigv
				FROM 
				(select z.*, P.NANACUE AS FLAGANALCOB, P.Nafecos AS FLAGCCOSCOB, P.Nafepre AS FLAGPRESUCOB, ROW_NUMBER () OVER (ORDER BY Z.CCODDOC, Z.CSERIE, Z.CNUMERO)::NUMERIC(6,0) AS  NASIENTO 
				from(select CCODRUC,CCODENTI,CCODDOC,CSERIE,CNUMERO,CNUMFIN,FFECHADOC,FFECHAVEN,ntc,cctatot,cctacobra,cmreg,nigv,cglosa,sum(ntots) ntots, sum(ndolar) ndolar, sum(nimpres) nimpres
				from cf_regven_integra
				WHERE CCOND = 'CON' AND NTOTS &lt;&gt; 0
				group by CCODRUC,CCODENTI,CCODDOC,CSERIE,CNUMERO,CNUMFIN,FFECHADOC,FFECHAVEN,ntc,cctatot,cctacobra,cmreg,nigv,cglosa) Z
				inner join CF_PLAN  P
				ON Z.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER ) C

				--order by nasiento 

				/*
				(SELECT 
				R.*, P.NANACUE AS FLAGANALCOB, P.Nafecos AS FLAGCCOSCOB, P.Nafepre AS FLAGPRESUCOB, 
				ROW_NUMBER () OVER (ORDER BY CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB 
				FROM cf_regven_integra R 
				INNER JOIN CF_PLAN  P 
				ON R.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER 
				WHERE ccond = 'CON' AND NTOTS&lt;&gt;0) C
				*/

				UNION ALL 
				SELECT 
				VARPER AS CPER, 
				VARMES AS CMES, 
				VARORICOB AS CCODORI,
				NASIENTO + varmaxCOB AS NASIENTO , 
				2 AS nidlin , 
				NTC, 
				CCTATOT AS CCODCUE, 
				(CASE WHEN NTOTS  &lt; 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(NDOLAR) END) ELSE 0.00 END)::numeric(13,2) AS NDEBE,
				(CASE WHEN NTOTS &gt;= 0 THEN (CASE WHEN CMREG = 'S' THEN ABS(NTOTS) ELSE  ABS(NDOLAR) END) ELSE 0.00 END)::numeric(13,2) AS NHABER,
				CGLOSA,
				(CASE WHEN NTOTS &lt;  0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NDEBES, 
				(CASE WHEN NTOTS &gt;= 0 THEN ABS(NTOTS) ELSE 0.00 END)::numeric(15,2) AS NHABERS,
				(CASE WHEN NTOTS &lt;  0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NDOLAR) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NDEBED,
				(CASE WHEN NTOTS &gt;= 0 THEN (CASE WHEN CMREG = 'D' THEN ABS(NDOLAR) ELSE ABS(ROUND(NTOTS/NTC,2)) END) ELSE 0.00 END)::numeric(15,2) AS NHABERD,
				(' ')::VARCHAR(1) AS CDES,
				('   ')::VARCHAR(3) AS CDESTINO,
				(0)::NUMERIC(1,0) AS NDIFAUTO, 
				(0)::NUMERIC(1,0) AS NAJUSAUTO, 
				(' ')::VARCHAR(1) AS CREGIS,
				(0)::NUMERIC(1,0) AS NCOMP ,
				CCODDOC, 
				CSERIE,
				CNUMERO, 
				CNUMFIN,
				FFECHADOC, 			 
				CCODRUC, 
				CCODENTI, 
				FFECHAVEN,
				(0.00)::NUMERIC(13,2) AS NBASE1, 
				(0.00)::NUMERIC(13,2) AS NIGV1, 
				(0.00)::NUMERIC(13,2) AS NBASE2, 
				(0.00)::NUMERIC(13,2) AS NIGV2, 
				(0.00)::NUMERIC(13,2) AS NBASE3, 
				(0.00)::NUMERIC(13,2) AS NIGV3, 
				(0.00)::NUMERIC(13,2) AS NINA, 
				(0.00)::NUMERIC(13,2) AS NEXO, 
				(0.00)::NUMERIC(13,2) AS NISC, 
				(0.00)::NUMERIC(13,2) AS NIVABASE, 
				(0.00)::NUMERIC(13,2) AS NIVAIMP, 
				(0.00)::NUMERIC(13,2) AS NTOT, 
				(0.00)::NUMERIC(13,2) AS NBASE1S, 
				(0.00)::NUMERIC(13,2) AS NIGV1S, 
				(0.00)::NUMERIC(13,2) AS NBASE2S, 
				(0.00)::NUMERIC(13,2) AS NIGV2S, 
				(0.00)::NUMERIC(13,2) AS NBASE3S, 
				(0.00)::NUMERIC(13,2) AS NIGV3S, 
				(0.00)::NUMERIC(13,2) AS NINAS, 
				(0.00)::NUMERIC(13,2) AS NEXOS, 
				(0.00)::NUMERIC(13,2) AS NISCS, 
				(0.00)::NUMERIC(13,2) AS NIVABASES, 
				(0.00)::NUMERIC(13,2) AS NIVAIMPS, 
				(0.00)::NUMERIC(13,2) AS NTOTS,
				(0.00)::NUMERIC(13,2) AS NBASE1D, 
				(0.00)::NUMERIC(13,2) AS NIGV1D, 
				(0.00)::NUMERIC(13,2) AS NBASE2D, 
				(0.00)::NUMERIC(13,2) AS NIGV2D, 
				(0.00)::NUMERIC(13,2) AS NBASE3D, 
				(0.00)::NUMERIC(13,2) AS NIGV3D, 
				(0.00)::NUMERIC(13,2) AS NINAD, 
				(0.00)::NUMERIC(13,2) AS NEXOD,
				(0.00)::NUMERIC(13,2) AS NISCD, 
				(0.00)::NUMERIC(13,2) AS NIVABASED, 
				(0.00)::NUMERIC(13,2) AS NIVAIMPD, 
				(0.00)::NUMERIC(13,2) AS NTOTD,
				(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN VARCCODFLU ELSE '    ' END)::VARCHAR(4) AS CCODFLU,
				(CASE WHEN FLAGANALT=3 OR FLAGANALT = 4 THEN '008' ELSE '   ' END)::VARCHAR(3) AS CCODPAGO,
				(' ')::VARCHAR(9) AS CCODCOS	,
				(' ')::VARCHAR(9) AS CCODCOS2,
				(' ')::VARCHAR(10) AS CCODPRESU,
				(' ')::VARCHAR(4) AS CCODCAM, 
				(' ')::VARCHAR(4) AS CCODCAM2, 
				(' ')::VARCHAR(2) AS ccodecpntribcol, 
				(' ')::VARCHAR(2) AS ccodecpnniifcol, 
				(' ')::VARCHAR(80) AS CGLOSA2,
				(CASE WHEN VARSOLOVENTA=1 THEN ' ' ELSE (CASE WHEN FLAGANALT=2 THEN (CASE WHEN CCOND='CON' THEN VARMES ELSE ' ' END) ELSE  ' ' END)  END)::VARCHAR(2)  AS CMESC,
				(CASE WHEN FLAGANALT=2 THEN cmreg ELSE '' END)::VARCHAR(1) AS CMREG,  
				(' ')::VARCHAR(4) AS CCODOCON,
				(0.00)::NUMERIC(1,0) AS NDIFERIDO, 
				CAST(NULL AS DATE) AS FFECHADIF,
				(0)::NUMERIC(1,0) AS NRESP,
				(' ')::VARCHAR(2) AS ccodpps, 
				(' ')::VARCHAR(5) AS ccodpds,
				(' ')::VARCHAR(1) AS CREGISRE, 
				(0.00)::NUMERIC(1,0) AS nperdenre, 
				(0.00)::NUMERIC(1,0)AS nporre, 
				CAST(NULL AS DATE) AS FFECRE, 				
				(' ')::VARCHAR(6)  AS CSERRE, 
				(' ')::VARCHAR(13) AS CNUMRE, 
				(' ')::VARCHAR(15) AS CNUMDERE,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntc ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(10,6) AS NTCRE,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN ntots ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS NBASERES,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN nimpres&lt;&gt;0 THEN (CASE WHEN cmreg = 'S' THEN ROUND(NTOTS/NTC,2) ELSE NDOLAR END) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nbasered,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN nimpres ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpres,
				(CASE WHEN FLAGANALT = 2 THEN (CASE WHEN NIMPRES&lt;&gt;0 THEN ROUND(NIMPRES/NTC,2) ELSE 0.00 END) ELSE 0.00 END)::NUMERIC(15,2) AS nimpred,
				(' ')::VARCHAR(8) AS cpdbdetcod, 
				(' ')::VARCHAR(2) AS ccodretran, 
				(' ')::VARCHAR(2) AS ccodtopdet, 
				(0)::NUMERIC(1,0) AS npagdetra, 
				(' ')::VARCHAR(20) AS cdocnodom, 
				(' ')::VARCHAR(2) AS crefdoc, 
				CAST(NULL AS DATE) AS freffec,
				(' ')::VARCHAR(10) AS crefser, 
				(' ')::VARCHAR(13) AS crefnum, 
				(' ')::VARCHAR(3) AS ccoddas, 
				(' ')::VARCHAR(4) AS cyeardas, 
				(' ')::VARCHAR(6) AS ccorrdas, 
				CAST(NULL AS DATE) AS ffembdas, 
				CAST(NULL AS DATE) AS ffregdas, 
				(0.00)::NUMERIC(15,2)  AS nfobdas, 
				(0.00)::NUMERIC(15,2)  AS nfobdad, 
				(0.00)::NUMERIC(6,0)  AS nlecorre, 
				('1')::VARCHAR(1) AS clecvesta, 
				VARMES AS clecvmes, 
				VARPER  AS clecvper, 
				('1')::VARCHAR(1) AS cledmcesta, 
				VARMES as cledmcmes, 
				VARPER as cledmcper, 
				(0.00)::NUMERIC(6,0) AS nlecorrere, 
				(0.00)::NUMERIC(1,0) as nautamo, 
				FFECHADOC as ffec_dc, 
				CCODDOC::VARCHAR(2) AS cdoc_dc, 
				CSERIE::VARCHAR(20) AS cser_dc, 
				CNUMERO::VARCHAR(20) AS cnum_dc, 
				(' ')::VARCHAR(20) AS ccodisc,
				00.00 AS nporisc,  		
				(' ')::VARCHAR(1) AS CCODCLAS, 
				(' ')::VARCHAR(2) AS ccodtipren, 
				(' ')::VARCHAR(2) AS cdoc_nd, 
				(' ')::VARCHAR(20) AS cser_nd, 
				(' ')::VARCHAR(20) AS cnum_nd, 
				(0.00)::NUMERIC(15,2) AS nrenbru_nd, 
				(0.00)::NUMERIC(15,2) AS nrennet_nd, 
				(0.00)::NUMERIC(15,2) AS nimpret_nd, 
				(0.00)::NUMERIC(15,2) AS ndedcos_nd, 
				(0.00)::NUMERIC(15,2) AS ntasret_nd, 
				('1')::VARCHAR(3)  AS ccodmon, 
				(0.00)::NUMERIC(5,3) AS ntc_nd, 
				(0.00)::NUMERIC(1,0) AS nintext,
				(0.00)::NUMERIC(13,2) AS NICBPERS,
				(' ')::VARCHAR(20) AS cctaicbper,	
				(0.00)::NUMERIC(13,2) AS NICBPER,
				(0.00)::NUMERIC(13,2) AS NICBPERD,
				(0.00)::NUMERIC(5,2) as nigv
				FROM 
				(select z.*, P.NANACUE AS FLAGANALT, P.Nafecos AS FLAGCCOST, P.Nafepre AS FLAGPRESUT, ROW_NUMBER () OVER (ORDER BY Z.CCODDOC, Z.CSERIE, Z.CNUMERO)::NUMERIC(6,0) AS  NASIENTO
				from(select CCODRUC,CCODENTI,CCODDOC,CSERIE,CNUMERO,CNUMFIN,FFECHADOC,FFECHAVEN,ntc,cctatot,cctacobra,cmreg,nigv,cglosa,CCOND,sum(ntots) ntots, sum(ndolar) ndolar, sum(nimpres) nimpres
				from cf_regven_integra
				WHERE CCOND = 'CON' AND NTOTS &lt;&gt; 0
				group by CCODRUC,CCODENTI,CCODDOC,CSERIE,CNUMERO,CNUMFIN,FFECHADOC,FFECHAVEN,ntc,cctatot,cctacobra,cmreg,nigv,cglosa,CCOND) Z
				inner join CF_PLAN  P 
				ON Z.CCTATOT = P.CCODCUE AND P.CPER = VARPER) C

				/*
				(SELECT R.*, P.NANACUE AS FLAGANALCOB, P.nafecos AS FLAGCCOSCOB, P.nafepre AS FLAGPRESUCOB, 
				ROW_NUMBER () OVER (ORDER BY CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB 
				FROM cf_regven_integra R
				INNER JOIN CF_PLAN  P 
				ON R.CCTACOBRA = P.CCODCUE AND P.CPER = VARPER 
				WHERE ccond = 'CON' AND NTOTS&lt;&gt;0) C

				*/
				);
				END;
			END IF;

			RAISE NOTICE 'PROCESO creando el archivo resultado';

			-- insertando resultado final
			IF VARSOLOVENTA = 0 THEN 
				BEGIN 
					INSERT INTO RESULTADO (SELECT * FROM TMPREGCV3);
				END;
			END IF ;

			-- INSERT INTO PRUEBAVEN SELECT * FROM RESULTADO;

			-- INSERTANDO AL DIARIO Y AL DIARIOL
			insert into cf_diario(cper,cmes,ccodori,nasiento,ffecasi,cmoneda,ccodusu,tregistro,ccodsu,ntcblo,ccodbas,nidreg,nidlin)
			SELECT  distinct VARPER,VARMES,VARORI, nasiEntO + varmax AS NASIENTO , 
			ffechadoc as ffecasi,
			cmreg as cmoneda,
			'ADMIN' AS ccodusu,
			current_timestamp as tregistro,
			VARLREG as ccodsu,
			(0.00)::NUMERIC(1,0)  as ntcblo, 
			(' ')::VARCHAR(10) as ccodbas,
			(0.00)::NUMERIC(15,0) as nidreg, 
			(0.00)::numeric(6,0)  as nidlin 
			 from cf_regven_integra;
			 

			IF varsoloventa = 0 THEN 
				BEGIN
					insert into cf_diario(cper,cmes,ccodori,nasiento,ffecasi,cmoneda,ccodusu,tregistro,ccodsu,ntcblo,ccodbas,nidreg,nidlin)
					SELECT  distinct VARPER,VARMES,VARORIcob, nasiEntOcob + varmaxcob AS NASIENTO , 
					ffechadoc as ffecasi,
					cmreg as cmoneda,
					'ADMIN' AS ccodusu,
					current_timestamp as tregistro,
					VARLREGCONT as ccodsu,
					(0.00)::NUMERIC(1,0)  as ntcblo, 
					(' ')::VARCHAR(10) as ccodbas,
					(0.00)::NUMERIC(15,0) as nidreg, 
					(0.00)::numeric(6,0)  as nidlin 
					--from  (SELECT R.*, ROW_NUMBER () OVER (ORDER BY CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB 
					from  (SELECT  ffechadoc, cmreg, CCODDOC, CSERIE, CNUMERO, ROW_NUMBER () OVER (ORDER BY CCODDOC, CSERIE, CNUMERO)::NUMERIC(6,0) AS  NASIENTOCOB   -- KMM - 21-08-2024 - cpe-Integracioin
					FROM cf_regven_integra R
					--WHERE ccond = 'CON' AND NTOTS&lt;&gt;0 )  C;
					WHERE ccond = 'CON' AND NTOTS&lt;&gt;0 group by ffechadoc, cmreg, cCODDOC, CSERIE, CNUMERO )  C; -- KMM - 21-08-2024 - cpe-Integracioin
				END;
			 END IF;

			--resultado_prueba
			INSERT INTO cf_diariol(cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,
			nhaberd,cdes,cdestino,ndifauto,najusauto,cregis,ncomp,ccoddoc,
			cserie,
			cnumero,
			cnumfin,
			ffechadoc,
			ccodruc,
			ccodenti,
			ffechaven,
			nbase1,
			nigv1,
			nbase2,
			nigv2,
			nbase3,
			nigv3,
			nina,
			nexo,
			nisc,
			nivabase,
			nivaimp,
			ntot,
			nbase1s,
			nigv1s,
			nbase2s,
			nigv2s,
			nbase3s,
			nigv3s,
			ninas,
			nexos,
			niscs,
			nivabases,
			nivaimps,
			ntots,
			nbase1d,
			nigv1d,
			nbase2d,
			nigv2d,
			nbase3d,
			nigv3d,
			ninad,
			nexod,
			niscd,
			nivabased,
			nivaimpd,
			ntotd,
			ccodclas,
			ccodflu,
			ccodpago,
			ccodcos,
			ccodcos2,
			ccodpresu,
			ccodcam,
			ccodcam2,
			ccodecpntribcol,
			ccodecpnniifcol,
			cglosa2,
			cmesc,
			cmreg,
			ccodocon,
			ndiferido,
			ffechadif,
			nresp,
			ccodpps,
			ccodpds,
			cregisre,
			nperdenre,
			nporre,
			ffecre,
			cserre,
			cnumre,
			cnumdere,
			ntcre,
			nbaseres,
			nbasered,
			nimpres,
			nimpred,
			cpdbdetcod,
			ccodretran,
			ccodtopdet,
			npagdetra,
			cdocnodom,
			ccodtipren,
			crefdoc,
			freffec,
			crefser,
			crefnum,
			ccoddas,
			cyeardas,
			ccorrdas,
			ffembdas,
			ffregdas,
			nfobdas,
			nfobdad,
			nlecorre,
			clecvesta,
			clecvmes,
			clecvper,
			cledmcesta,
			cledmcmes,
			cledmcper,
			nlecorrere,
			nautamo,
			ffec_dc,
			cdoc_dc,
			cser_dc,
			cnum_dc,
			cdoc_nd,
			cser_nd,
			cnum_nd,
			nrenbru_nd,
			nrennet_nd,
			nimpret_nd,
			ndedcos_nd,
			ntasret_nd,
			ccodmon,
			ntc_nd,
			nintext,
			NICBPER,
			NICBPERS,
			NICBPERD,
			npigv
			  ) 
			  
			SELECT   cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,
			nhaberd,cdes,cdestino,ndifauto,najusauto,cregis,ncomp,ccoddoc,cserie,cnumero,cnumfin,
			ffechadoc,ccodruc,ccodenti,ffechaven,nbase1,nigv1,nbase2,nigv2,nbase3,nigv3,nina,nexo,
			nisc,nivabase,nivaimp,ntot,nbase1s,nigv1s,nbase2s,nigv2s,nbase3s,nigv3s,ninas,nexos,
			niscs,nivabases,nivaimps,ntots,nbase1d,nigv1d,nbase2d,nigv2d,nbase3d,nigv3d,ninad,nexod,
			niscd,nivabased,nivaimpd,ntotd,ccodclas,ccodflu,ccodpago,ccodcos,ccodcos2,ccodpresu,ccodcam,
			ccodcam2,ccodecpntribcol,ccodecpnniifcol,cglosa2,cmesc,cmreg,ccodocon,ndiferido,ffechadif,
			nresp,ccodpps,ccodpds,cregisre,nperdenre,nporre,ffecre,cserre,cnumre,cnumdere,ntcre,nbaseres,
			nbasered,nimpres,nimpred,cpdbdetcod,ccodretran,ccodtopdet,npagdetra,cdocnodom,ccodtipren,
			crefdoc,freffec,crefser,crefnum,ccoddas,cyeardas,ccorrdas,ffembdas,ffregdas,nfobdas,nfobdad,
			nlecorre,clecvesta,clecvmes,clecvper,cledmcesta,cledmcmes,cledmcper,nlecorrere,nautamo,ffec_dc,
			cdoc_dc,cser_dc,cnum_dc,cdoc_nd,cser_nd,cnum_nd,nrenbru_nd,nrennet_nd,nimpret_nd,ndedcos_nd,
			ntasret_nd,ccodmon,ntc_nd,nintext,nicbper,nicbpers,nicbperd,nigv
			 FROM RESULTADO;

			return 1;
				end; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
</value>
  </data>
  <data name="txt_cobra04fm.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION fin_importar_cobranzafondo_integrador(
    varper character,
    varmes character,
    varori character,
    varccodflu character,
    varlreg character,
    vardifp character,
    vardifpd character,
    vardifph character,
    vardifg character,
    varmax integer,
    indicador integer,
    varperc character)
  RETURNS integer AS
$BODY$
	
DECLARE  
	RW RECORD;	
BEGIN

DROP TABLE IF EXISTS resultado;
create temporary table resultado(
  cper character(4)  NOT NULL DEFAULT ''::bpchar,
  cmes character(2) NOT NULL DEFAULT ''::bpchar,
  ccodori character(3) NOT NULL DEFAULT ''::bpchar,
  nasiento numeric(6,0) NOT NULL DEFAULT 0,
  nidlin numeric(6,0) NOT NULL DEFAULT 0,
  ntc numeric(10,6) NOT NULL DEFAULT 0,
  ccodcue character(20) NOT NULL DEFAULT ''::bpchar,
  ndebe numeric(15,2) NOT NULL DEFAULT 0,
  nhaber numeric(15,2) NOT NULL DEFAULT 0,
  cglosa character varying(80) NOT NULL DEFAULT ''::character varying,
  ndebes numeric(15,2) NOT NULL DEFAULT 0,
  nhabers numeric(15,2) NOT NULL DEFAULT 0,
  ndebed numeric(15,2) NOT NULL DEFAULT 0,
  nhaberd numeric(15,2) NOT NULL DEFAULT 0,
  cdes character(1) NOT NULL DEFAULT ''::bpchar,
  cdestino character(3) NOT NULL DEFAULT ''::bpchar,
  ndifauto numeric(1,0) NOT NULL DEFAULT 0,
  najusauto numeric(1,0) NOT NULL DEFAULT 0,
  cregis character(1) NOT NULL DEFAULT ''::bpchar,
  ncomp numeric(1,0) NOT NULL DEFAULT 0,
  ccoddoc character(2) NOT NULL DEFAULT ''::bpchar,
  cserie character(20) NOT NULL DEFAULT ''::bpchar,
  cnumero character(20) NOT NULL DEFAULT ''::bpchar,
  cnumfin character(20) NOT NULL DEFAULT ''::bpchar,
  ffechadoc date,
  ccodruc character(15) NOT NULL DEFAULT ''::bpchar,
  ccodenti character(11) NOT NULL DEFAULT ''::bpchar,
  ffechaven date,
  ccodflu character(4) NOT NULL DEFAULT ''::bpchar,
  ccodpago character(3) NOT NULL DEFAULT ''::bpchar,
  ccodcos character(9) NOT NULL DEFAULT ''::bpchar,
  ccodcos2 character(9) NOT NULL DEFAULT ''::bpchar,
  ccodpresu character(10) NOT NULL DEFAULT ''::bpchar,
  ccodcam character(4) NOT NULL DEFAULT ''::bpchar,
  ccodcam2 character(4) NOT NULL DEFAULT ''::bpchar,
  ccodecpntribcol character(2) NOT NULL DEFAULT ''::bpchar,
  ccodecpnniifcol character(2) NOT NULL DEFAULT ''::bpchar,
  cglosa2 character varying(80) NOT NULL DEFAULT ''::character varying,
  cmesc character(2) NOT NULL DEFAULT ''::bpchar,
  cmreg character(1) NOT NULL DEFAULT ''::bpchar,
  ccodocon character(4) NOT NULL DEFAULT ''::bpchar,
  ndiferido numeric(1,0) NOT NULL DEFAULT 0,
  ffechadif date,
  nresp numeric(1,0) NOT NULL DEFAULT 0,
  ccodpps character(2) NOT NULL DEFAULT ''::bpchar,
  ccodpds character(5) NOT NULL DEFAULT ''::bpchar,
  cregisre character(1) NOT NULL DEFAULT ''::bpchar,
  nperdenre numeric(1,0) NOT NULL DEFAULT 0, 
  nporre numeric(5,2) NOT NULL DEFAULT 0,
  ffecre date,
  cserre character(6) NOT NULL DEFAULT ''::bpchar,
  cnumre character(13) NOT NULL DEFAULT ''::bpchar,
  cnumdere character(15) NOT NULL DEFAULT ''::bpchar,
  ntcre numeric(10,6) NOT NULL DEFAULT 0,
  nbaseres numeric(15,2) NOT NULL DEFAULT 0,
  nbasered numeric(15,2) NOT NULL DEFAULT 0,
  nimpres numeric(15,2) NOT NULL DEFAULT 0,
  nimpred numeric(15,2) NOT NULL DEFAULT 0,
  cpdbdetcod character(8) NOT NULL DEFAULT ''::bpchar,
  ccodretran character(2) NOT NULL DEFAULT ''::bpchar,
  ccodtopdet character(2) NOT NULL DEFAULT ''::bpchar,
  npagdetra numeric(1,0) NOT NULL DEFAULT 0,
  cdocnodom character(20) NOT NULL DEFAULT ''::bpchar,
  crefdoc character(2) NOT NULL DEFAULT ''::bpchar,
  freffec date,
  crefser character(10) NOT NULL DEFAULT ''::bpchar,
  crefnum character(13) NOT NULL DEFAULT ''::bpchar,
  ccoddas character(3) NOT NULL DEFAULT ''::bpchar,
  cyeardas character(4) NOT NULL DEFAULT ''::bpchar,
  ccorrdas character(6) NOT NULL DEFAULT ''::bpchar,
  ffembdas date,
  ffregdas date,
  nfobdas numeric(15,2) NOT NULL DEFAULT 0,
  nfobdad numeric(15,2) NOT NULL DEFAULT 0,
  nlecorre numeric(6,0) NOT NULL DEFAULT 0,
  clecvesta character(1) NOT NULL DEFAULT ''::bpchar,
  clecvmes character(2) NOT NULL DEFAULT ''::bpchar,
  clecvper character(4) NOT NULL DEFAULT ''::bpchar,
  cledmcesta character(1) NOT NULL DEFAULT ''::bpchar,
  cledmcmes character(2) NOT NULL DEFAULT ''::bpchar,
  cledmcper character(4) NOT NULL DEFAULT ''::bpchar,
  nlecorrere numeric(6,0) NOT NULL DEFAULT 0,
  nautamo numeric(1,0) NOT NULL DEFAULT 0,
  ffec_dc date,
  cdoc_dc character(2) NOT NULL DEFAULT ''::bpchar,
  cser_dc character(20) NOT NULL DEFAULT ''::bpchar,
  cnum_dc character(20) NOT NULL DEFAULT ''::bpchar,
  ccodclas character(1) NOT NULL DEFAULT ''::bpchar,
  ccodtipren character(2) NOT NULL DEFAULT ''::bpchar,
  nrenbru_nd numeric(15,2) NOT NULL DEFAULT 0,
  nrennet_nd numeric(15,2) NOT NULL DEFAULT 0,
  nimpret_nd numeric(15,2) NOT NULL DEFAULT 0,
  ndedcos_nd numeric(15,2) NOT NULL DEFAULT 0,
  ntasret_nd numeric(6,2) NOT NULL DEFAULT 0,
  ccodmon character(3) NOT NULL DEFAULT ''::bpchar,
  ntc_nd numeric(5,3) NOT NULL DEFAULT 0,
  nintext numeric(1,0) NOT NULL DEFAULT 0,
  cmoneda character(1) NOT NULL DEFAULT ''::bpchar,
  FFECHACAN date
  ) on commit drop;

/*
-- CPE-3321  ANR 15/08/2023
DROP TABLE IF EXISTS Diariol;

Create temp table Diariol as 
select 	dl.cper,dl.cmes,
	dl.ntc,
	dl.ccodcue,
	dl.CCODDOC,
	dl.CSERIE,
	dl.CNUMERO,
	dl.CNUMFIN,
	dl.FFECHADOC,
	dl.CCODRUC,
	dl.CCODENTI,
	dl.FFECHAVEN,
	dl.CMREG,
	dl.NRESP,
	dl.CCODPPS,
	dl.NPERDENRE,
	dl.NPORRE,
	dl.ncomp
 from cf_diariol dl where cper = varper and NCOMP = 1;
 -- CPE-3321  ANR 15/08/2023
*/
VARMAX = VARMAX-1;

/*  ESTE SELECT NOS DA COMO RESULTADO LA CANCELACIÓN DE TODOS LOS DOCUMENTOS QUE ESTAN EN EL EXCEL -- HABER */
INSERT INTO RESULTADO (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,cmoneda,FFECHACAN,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED)
	
SELECT  VARPER as cper,    -- VARPER
	VARMES as cmes ,   -- VARMES
	VARORI AS ccodori,  -- VARORI
	VARMAX + R.NASIENTO AS NASIENTO,
	R.NIDLIN, 
	DL.NTIPCAM as NTC,
	DL.CCODCUE,
(CASE WHEN indicador = 1 THEN
	(CASE WHEN R.CMONCAN = 'S' THEN 		
			(CASE WHEN R.NIMPORTES &lt; 0 THEN ABS(R.NIMPORTES) ELSE 0.00 END)
	ELSE 	
			(CASE WHEN R.NIMPORTED &lt; 0 THEN ABS(R.NIMPORTED) ELSE 0.00 END)		
	END)
ELSE 
	(CASE WHEN R.CMONCAN = 'S' THEN 
		(CASE WHEN R.NIMPORTES &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
	ELSE 
		(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	END)	
END ) AS NDEBE,

(CASE WHEN indicador = 1  THEN
	(CASE WHEN R.CMONCAN = 'S'  THEN 	   
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN  ABS(R.NIMPORTES) ELSE 0.00 END)	    
	ELSE 	  
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN ABS(R.NIMPORTED) ELSE 0.00 END)
	END)
ELSE 
	(CASE WHEN R.CMONCAN = 'S' THEN 
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
	ELSE 
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	END)
 END) AS NHABER, 
   
R.CGLOSA,
(CASE WHEN indicador = 1  THEN    ------ fecha : 24/02/2025 tema anticipos para colegio de contadores
		(CASE 	WHEN R.CMONCAN = 'S'  THEN			
				(CASE WHEN R.NIMPORTES &lt; 0 THEN ABS(R.NIMPORTES) ELSE 0.00 END)
		ELSE 			
				(CASE WHEN R.NIMPORTED &lt; 0 THEN ABS(ROUND(R.NIMPORTED*DL.NTIPCAM,2)) ELSE 0.00 END) 
		END) 
ELSE 
		(CASE 	WHEN R.CMONCAN = 'S' THEN 
			(CASE WHEN R.NIMPORTES &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTES) END)
		ELSE 
			(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00 ELSE ABS(ROUND(R.NIMPORTED*DL.NTIPCAM,2)) END) 
		END) 	   
END ) AS NDEBES,
	   
(CASE WHEN indicador = 1 THEN
	(CASE 	WHEN R.CMONCAN = 'S' THEN 
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN ABS(R.NIMPORTES) ELSE 0.00 END)
	ELSE 
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN ABS(ROUND(R.NIMPORTED*DL.NTIPCAM,2)) ELSE 0.00 END)  
	END) 
 ELSE 
	(CASE 	WHEN R.CMONCAN = 'S'  THEN 
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTES)  END)
	ELSE 
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(ROUND(R.NIMPORTED*DL.NTIPCAM,2)) END) 
	END) 
   END) AS NHABERS,
(CASE WHEN indicador = 1  THEN
	(CASE 	WHEN R.CMONCAN = 'D' THEN 		
			(CASE WHEN R.NIMPORTED &lt; 0 THEN ABS(R.NIMPORTED) ELSE 0.00 END)
	ELSE 		
			(CASE WHEN R.NIMPORTES &lt; 0 THEN  CASE WHEN DL.NTIPCAM &gt; 0 THEN ABS(ROUND(R.NIMPORTES/ DL.NTIPCAM,2)) ELSE 0.00 END ELSE 0.00 END) 
	END)
ELSE 
	(CASE 	WHEN R.CMONCAN = 'D' THEN 
		(CASE WHEN R.NIMPORTED &lt; 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	ELSE 
		(CASE WHEN R.NIMPORTES &lt; 0 THEN 0.00 ELSE CASE WHEN DL.NTIPCAM &gt; 0 THEN ABS(ROUND(R.NIMPORTES/DL.NTIPCAM,2)) ELSE 0.00 END   END) END)
END) AS NDEBED,

(CASE WHEN indicador = 1 THEN
	(CASE 	WHEN R.CMONCAN = 'D' THEN 		
			(CASE WHEN R.NIMPORTED &gt;= 0 THEN ABS(R.NIMPORTED) ELSE 0.00 END)
	ELSE 		
			(CASE WHEN R.NIMPORTES &gt; 0 THEN CASE WHEN DL.NTIPCAM &gt; 0 THEN ABS(ROUND(R.NIMPORTES/DL.NTIPCAM,2)) ELSE 0.00 END ELSE 0.00 END) 
	END) 
ELSE 
	(CASE 	WHEN R.CMONCAN = 'D' THEN 
		(CASE WHEN R.NIMPORTED &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPORTED) END)
	ELSE 
		(CASE WHEN R.NIMPORTES &gt;= 0 THEN 0.00 ELSE CASE WHEN DL.NTIPCAM &gt; 0 THEN ABS(ROUND(R.NIMPORTES/DL.NTIPCAM,2)) ELSE 0.00 END END) 
	END) 
	   
END ) AS NHABERD,

	case when pl.nanacue = 2 then 1 else 0 end AS NCOMP,
	DL.CCODDOC,
	DL.CSERIE,
	DL.CNUMERO,
	'' as CNUMFIN,
	DL.FFECHADOC,
	DL.CCODRUC,
	DL.CCODENTI,
	DL.FFECHAVEN,
	'    ' AS CCODFLU,
	R.CCODPAGO,
	R.CCODCOS,
	R.CCODCOS2,
	dl.cmoncan as CMREG,
	R.FFECHACAN AS FFEC_DC,
	R.CDOCCAN AS CDOC_DC,
	R.CSERCAN AS CSER_DC,
	R.CNUMCAN AS CNUM_DC,
	R.CMONCAN as CMONEDA,
	R.FFECHACAN,
	0 as NRESP,
	'' as CCODPPS,
	DL.NPERDENRE,
	DL.NPORRE,
	R.FFECRE,
	(CASE WHEN R.CSERRE = '' THEN ' ' ELSE  R.CSERRE END) AS CSERRE,
	R.CNUMRE,
	R.NTIPCAM AS NTCRE,
	(CASE WHEN R.NIMPORTES &lt;&gt; 0 
	THEN R.NIMPORTES 
	ELSE 
	(CASE WHEN R.NIMPORTED &lt;&gt; 0 THEN ROUND(R.NIMPORTED*R.NTIPCAM,2) ELSE 0 END) 
	END) AS NBASERES,
	(CASE WHEN R.NIMPORTED &lt;&gt;0
	THEN R.NIMPORTED
	ELSE 
	(CASE WHEN R.NIMPORTES &lt;&gt; 0 THEN ROUND(R.NIMPORTES/R.NTIPCAM,2) ELSE 0 END)
	END) AS NBASERED,
	(CASE   WHEN R.NIMPORTES &lt;&gt; 0 AND R.NIMPPERC &lt;&gt; 0 THEN R.NIMPPERC
	WHEN R.NIMPORTED &lt;&gt; 0 AND R.NIMPPERC &lt;&gt; 0 THEN ROUND(R.NIMPPERC*R.NTIPCAM,2)
	ELSE 0
	END) AS NIMPRES,
	(CASE   WHEN R.NIMPORTES &lt;&gt; 0 AND R.NIMPPERC &lt;&gt; 0 THEN ROUND(R.NIMPPERC/R.NTIPCAM,2)
	WHEN R.NIMPORTED &lt;&gt; 0 AND R.NIMPPERC &lt;&gt; 0 THEN R.NIMPPERC
	ELSE 0
	END) AS NIMPRED
FROM fin_cobranza_integra_fn DL 
INNER JOIN ( select X.NASIENTO, --- HAY QUE SACAR EL TIPO DE CAMBIO SEGUN LA CUENTA ******* ESTO DEBE VENIR DESDE EL FOX
				ROW_NUMBER () OVER (PARTITION BY I.FFECHACAN,I.CDOCCAN,I.CSERCAN,I.CNUMCAN,I.CCUECAN,I.CMONCAN,I.NIMPORCAN ORDER BY I.FFECHACAN) AS NIDLIN,
				I.*,  LPAD(I.CSERIE,20,'0') AS CSERIEA, LPAD(I.CNUMERO,20,'0') AS CNUMEROA
			from fin_cobranza_integra_fn I
			INNER JOIN (SELECT *,ROW_NUMBER () OVER (ORDER BY  FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN) AS NASIENTO 
							FROM (SELECT DISTINCT FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN
									from fin_cobranza_integra_fn) U
			) X
			ON I.FFECHACAN = X.FFECHACAN AND I.CDOCCAN = X.CDOCCAN AND I.CSERCAN = X.CSERCAN AND I.CNUMCAN = X.CNUMCAN 
				AND I.CCUECAN = X.CCUECAN AND I.CMONCAN = X.CMONCAN AND I.NIMPORCAN = X.NIMPORCAN
) AS R ON DL.CCODCUE = R.CCODCUE AND DL.CCODRUC = R.CCODRUC AND DL.CCODDOC = R.CCODDOC AND DL.CSERIE = R.CSERIEA AND DL.CNUMERO = R.CNUMEROA --AND DL.NCOMP = 1
inner join cf_plan pl on pl.cper = VARPER and dl.ccodcue = pl.ccodcue 
--WHERE CPER = VARPER -----VARPER
ORDER BY CPER, CMES, CCODORI, NASIENTO, NIDLIN ;


--UNION
/* ESTE SELECT NOS DA COMO RESULTADO EL PAGO TOTAL QUE SE REALIZA  */
INSERT INTO RESULTADO (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,cmoneda,FFECHACAN,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED
)

SELECT DISTINCT ON (I.FFECHACAN,I.CDOCCAN,I.CSERCAN,I.CNUMCAN,I.CCUECAN,I.CMONCAN,I.NIMPORCAN)
	VARPER 	AS CPER,  --- VARPER
	VARMES 	AS CMES,  --- VARMES
	VARORI 	AS CCODORI, --VARORI
	VARMAX + U.NASIENTO AS NASIENTO,
	U.NIDLIN,
	I.NTIPCAM AS NTC,
	I.CCUECAN AS CCODCUE,
	(CASE WHEN indicador = 1 THEN		
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END) 
	ELSE 
		(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END) 
		
	END) AS NDEBE,
	   
	(CASE WHEN indicador = 1 THEN	
			(CASE WHEN I.NIMPORCAN &lt;  0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END) 
	ELSE 
		(CASE WHEN I.NIMPORCAN &lt;  0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END) 	
	END) AS NHABER,
	   
	I.CGLOSA,
	
	(CASE WHEN indicador = 1  THEN	
		(CASE 	WHEN U.CMONCAN = 'S' THEN 
				(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END)
		ELSE 
				(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2)) ELSE 0.00 END) 
		END) 
	ELSE 
		(CASE 	WHEN U.CMONCAN = 'S' THEN 
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
		ELSE 
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2))END) 
		END) 
	END ) AS NDEBES,
	
	(CASE WHEN indicador = 1  THEN	
		(CASE 	WHEN U.CMONCAN = 'S' THEN 
				(CASE WHEN I.NIMPORCAN &lt; 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END)
		ELSE 
				(CASE WHEN I.NIMPORCAN &lt; 0 THEN ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2)) ELSE 0.00 END) 
		END) 
	ELSE 
		(CASE 	WHEN U.CMONCAN = 'S' THEN 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
		ELSE 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN * I.NTIPCAM,2)) END) 
		END) 
	END) AS NHABERS,
	
	(CASE WHEN indicador = 1 THEN	
		(CASE 	WHEN U.CMONCAN = 'D' THEN 
				(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END)
		ELSE 
				(CASE WHEN I.NIMPORCAN &gt;= 0 THEN ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2)) ELSE 0.00 END) 
		END) 
	ELSE 
		(CASE WHEN U.CMONCAN = 'D' THEN 
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(I.NIMPORCAN) END)
		ELSE 
			(CASE WHEN I.NIMPORCAN &gt;= 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2)) END) 
		END) 	   
	END) AS NDEBED,
	
	(CASE WHEN indicador = 1 THEN	
		(CASE 	WHEN U.CMONCAN = 'D' THEN 
				(CASE WHEN I.NIMPORCAN &lt; 0 THEN ABS(I.NIMPORCAN) ELSE 0.00 END)
		ELSE 
				(CASE WHEN I.NIMPORCAN &lt; 0 THEN ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2)) ELSE 0.00 END) 
		END) 
	   ELSE 
		(CASE 	WHEN U.CMONCAN = 'D' THEN 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(I.NIMPORCAN)  END)
		ELSE 
			(CASE WHEN I.NIMPORCAN &lt; 0 THEN 0.00 ELSE ABS(ROUND(I.NIMPORCAN / I.NTIPCAM,2))  END)
		END) 	   
	END) AS NHABERD,
	   
	case when pl.nanacue = 2 then 1 else 0 end AS NCOMP, 
	I.CDOCCAN AS CCODDOC,
	LPAD(I.CSERCAN,20,'0') AS CSERIE , 
	LPAD(I.CNUMCAN,20,'0') AS CNUMERO,
	'' AS CNUMFIN,
	I.FFECHACAN AS FFECHADOC,
	I.CCODRUC,
	I.CCODENTI,
	CAST(NULL AS DATE) AS FFECHAVEN,
	varccodflu AS CCODFLU, ---------------- CODIGO DE FLUJO DEL FORMULARIO 
	I.CCODPAGO,  
	I.CCODCOS, 
	I.CCODCOS2,
	' ' AS CMREG,
	CAST(NULL AS DATE) AS FFEC_DC,
	''::VARCHAR(2) AS CDOC_DC,
	''::VARCHAR(20) AS CSER_DC,
	''::VARCHAR(20) AS CNUM_DC,
	U.CMONCAN AS CMONEDA,
	U.FFECHACAN,
	0 AS NRESP,
	' ' AS CCODPPS,
	0 AS NPERDENRE,
	0 AS NPORRE,
	CAST(NULL AS DATE) AS FFECRE,
	' ' AS CSERRE,
	' ' AS CNUMRE,
	0 AS NTCRE,
	0 AS NBASERES,
	0 AS NBASERED,
	0 AS NIMPRES,
	0 AS NIMPRED
FROM fin_cobranza_integra_fn I
INNER JOIN ( SELECT DISTINCT ON(FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN) 
				ROW_NUMBER () OVER (ORDER BY  FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN) AS NASIENTO,
				count(FFECHACAN)+1 NIDLIN, FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN
				from fin_cobranza_integra_fn
				GROUP BY FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN
			) U ON I.FFECHACAN=U.FFECHACAN AND I.CDOCCAN=U.CDOCCAN AND I.CSERCAN=U.CSERCAN AND I.CNUMCAN = U.CNUMCAN 
		   			AND I.CCUECAN=U.CCUECAN AND I.CMONCAN=U.CMONCAN AND I.NIMPORCAN=U.NIMPORCAN
inner join cf_plan pl on pl.cper = VARPER and I.CCUECAN = pl.ccodcue 

ORDER BY I.FFECHACAN,I.CDOCCAN, I.CSERCAN, I.CNUMCAN, I.CCUECAN, I.CMONCAN, I.NIMPORCAN ;

INSERT INTO RESULTADO (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,ncomp,
						ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
						cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,cmoneda,FFECHACAN,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
						NBASERES,NBASERED,NIMPRES,NIMPRED
						)
SELECT  VARPER as cper,    -- VARPER
VARMES as cmes ,   -- VARMES
VARORI AS ccodori,  -- VARORI
VARMAX + R.NASIENTO AS NASIENTO,
R.NIDLIN AS NIDLIN, ------ CAMBIAR EN EL SELECT CON UN INNER JOIN
R.NTIPCAM AS NTC,
VARPERC AS CCODCUE,
(CASE WHEN indicador = 1 
   THEN	(CASE WHEN R.NIMPPERC &lt; 0 THEN ABS(R.NIMPPERC) ELSE 0.00 END)
   ELSE (CASE WHEN R.NIMPPERC &lt; 0 THEN 0.00 ELSE ABS(R.NIMPPERC) END)
   END ) AS NDEBE,
(CASE WHEN indicador = 1 
   THEN (CASE WHEN R.NIMPPERC &gt;= 0 THEN ABS(R.NIMPPERC) ELSE 0.00 END)
   ELSE (CASE WHEN R.NIMPPERC &gt;= 0 THEN 0.00 ELSE ABS(R.NIMPPERC) END)
   END ) AS NHABER,
R.CGLOSA,
(CASE WHEN indicador = 1 
   THEN
(CASE 	WHEN R.CMONCAN = 'S' 
THEN 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN ABS(R.NIMPPERC) 
ELSE 0.00 END)
ELSE 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN ABS(ROUND(R.NIMPPERC*R.NTIPCAM,2)) 
ELSE 0.00 END) 
END) 
   ELSE 
(CASE 	WHEN R.CMONCAN = 'S' 
THEN 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN 0.00
ELSE ABS(R.NIMPPERC) END)
ELSE 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN 0.00
ELSE ABS(ROUND(R.NIMPPERC*R.NTIPCAM,2)) END) 
END)
   END ) AS NDEBES,
(CASE WHEN indicador = 1 
   THEN
(CASE 	WHEN R.CMONCAN = 'S' 
THEN 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN ABS(R.NIMPPERC) 
ELSE 0.00 END)
ELSE 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN ABS(ROUND(R.NIMPPERC*R.NTIPCAM,2)) 
ELSE 0.00 END) 
END) 
   ELSE 
(CASE 	WHEN R.CMONCAN = 'S' 
THEN 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN 0.00
ELSE ABS(R.NIMPPERC)  END)
ELSE 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN 0.00
ELSE ABS(ROUND(R.NIMPPERC*R.NTIPCAM,2)) END) 
END) 
   END) AS NHABERS,
(CASE WHEN indicador = 1 
   THEN
(CASE 	WHEN R.CMONCAN = 'D' 
THEN 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN ABS(R.NIMPPERC) 
ELSE 0.00 END)
ELSE 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN ABS(ROUND(R.NIMPPERC/R.NTIPCAM,2)) 
ELSE 0.00 END) 
END)
   ELSE 
(CASE 	WHEN R.CMONCAN = 'D' 
THEN 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN 0.00 
ELSE ABS(R.NIMPPERC) END)
ELSE 
(CASE WHEN R.NIMPPERC &lt; 0 
THEN 0.00
ELSE ABS(ROUND(R.NIMPPERC/R.NTIPCAM,2)) END) 
END)
   END) AS NDEBED,
(CASE WHEN indicador = 1 
   THEN
(CASE 	WHEN R.CMONCAN = 'D' 
THEN 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN ABS(R.NIMPPERC) 
ELSE 0.00 END)
ELSE 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN ABS(ROUND(R.NIMPPERC/R.NTIPCAM,2)) 
ELSE 0.00 END) 
END) 
   ELSE 
(CASE 	WHEN R.CMONCAN = 'D' 
THEN 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN 0.00 
ELSE ABS(R.NIMPPERC) END)
ELSE 
(CASE WHEN R.NIMPPERC &gt;= 0 
THEN 0.00 
ELSE ABS(ROUND(R.NIMPPERC/R.NTIPCAM,2)) END) 
END) 
   
   END ) AS NHABERD,
0 AS NCOMP,
R.CCODDOC,
R.CSERIE,
R.CNUMERO,
' ' AS CNUMFIN,
R.FFECHADOC,
R.CCODRUC,
R.CCODENTI,
R.FFECHAVEN,
'    ' AS CCODFLU,
' ' AS CCODPAGO,
' ' AS CCODCOS,
' ' AS CCODCOS2,
' ' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
'' AS CDOC_DC,
'' AS CSER_DC,
'' AS CNUM_DC,
R.CMONCAN AS CMONEDA,
R.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM 	(
select 
X.NASIENTO, --- HAY QUE SACAR EL TIPO DE CAMBIO SEGUN LA CUENTA ******* ESTO DEBE VENIR DESDE EL FOX
ROW_NUMBER () OVER (PARTITION BY I.FFECHACAN,I.CDOCCAN,I.CSERCAN,I.CNUMCAN,I.CCUECAN,I.CMONCAN,I.NIMPORCAN ORDER BY I.FFECHACAN)  + W.NIDLIN AS NIDLIN,
I.*,  LPAD(I.CSERIE,20,'0') AS CSERIEA, LPAD(I.CNUMERO,20,'0') AS CNUMEROA
from fin_cobranza_integra_fn I
INNER JOIN 
(SELECT *,ROW_NUMBER () OVER (ORDER BY  FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN) AS NASIENTO FROM
(SELECT DISTINCT 
FFECHACAN,CDOCCAN,CSERCAN,CNUMCAN,CCUECAN,CMONCAN,NIMPORCAN
from fin_cobranza_integra_fn) U
) X
ON I.FFECHACAN = X.FFECHACAN AND I.CDOCCAN = X.CDOCCAN AND I.CSERCAN = X.CSERCAN AND I.CNUMCAN = X.CNUMCAN 
AND I.CCUECAN = X.CCUECAN AND I.CMONCAN = X.CMONCAN AND I.NIMPORCAN = X.NIMPORCAN 
INNER JOIN (SELECT NASIENTO, MAX(NIDLIN) AS NIDLIN FROM RESULTADO GROUP BY NASIENTO) W
ON X.NASIENTO+VARMAX = W.NASIENTO
WHERE I.NIMPPERC &lt;&gt;0
) AS R
ORDER BY CPER, CMES, CCODORI, NASIENTO, NIDLIN ;



INSERT INTO RESULTADO (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes,cdestino,ndifauto,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,cmoneda,FFECHACAN,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,
CNUMRE,NTCRE,NBASERES,NBASERED,NIMPRES,NIMPRED)
SELECT  R.CPER,
R.CMES,
R.CCODORI,
R.NASIENTO AS NASIENTO,
D.NIDLIN,
0 AS NTC,
D.CTADIF AS CCODCUE,
0 AS NDEBE,
0 AS NHABER,
'AJUSTE POR DIFERENCIA DE CAMBIO' AS CGLOSA,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &lt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NDEBES,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &gt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NHABERS,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &lt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NDEBED,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &gt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NHABERD,
' ' AS cdes,
'001' AS cdestino,
1 AS NDIFAUTO,
0 AS NCOMP,
'' AS CCODDOC,
'' AS CSERIE,
'' AS CNUMERO,
'' AS CNUMFIN,
CAST(NULL AS DATE) AS FFECHADOC,
'' AS CCODRUC,
'' AS CCODENTI,
CAST(NULL AS DATE) AS FFECHAVEN,
'' AS CCODFLU,
'' AS CCODPAGO,
'' AS CCODCOS,
'' AS CCODCOS2,
'' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
'' AS CDOC_DC,
'' AS CSER_DC,
'' AS CNUM_DC,
R.CMONEDA,
R.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM RESULTADO R
INNER JOIN 
  (SELECT CPER,CMES,CCODORI,NASIENTO, SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, SUM(NDEBED-NHABERD) AS DIF1D, MAX(NIDLIN)+1  AS NIDLIN, 
      (CASE WHEN SUM(NDEBED-NHABERD) + SUM(NDEBES-NHABERS)&gt;0 THEN vardifg ELSE VARDIFP END) AS CTADIF -------------------------------------- VARDIFG -- VARDIFP
      FROM RESULTADO 
      GROUP BY CPER,CMES,CCODORI,NASIENTO
      HAVING SUM(NDEBES-NHABERS) &lt;&gt; 0 OR SUM(NDEBED-NHABERD) &lt;&gt; 0
  ) AS D
 ON R.CPER = D.CPER AND R.CMES = D.CMES AND R.CCODORI = D.CCODORI AND R.NASIENTO = D.NASIENTO AND R.NIDLIN = D.NIDLIN-1

UNION
---************* EL DESTINO 
SELECT  R.CPER,
R.CMES,
R.CCODORI,
R.NASIENTO AS NASIENTO,
D.NIDLIN + 1 AS NIDLIN,
0 AS NTC,
VARDIFPD AS CCODCUE,   ---- VARDIFPD   
0 AS NDEBE,
0 AS NHABER,
'AJUSTE POR DIFERENCIA DE CAMBIO' AS CGLOSA,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &lt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NDEBES,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &gt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NHABERS,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &lt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NDEBED,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &gt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NHABERD,
'S' AS cdes,
'001' AS cdestino,
0 AS NDIFAUTO,
0 AS NCOMP,
'' AS CCODDOC,
'' AS CSERIE,
'' AS CNUMERO,
'' AS CNUMFIN,
CAST(NULL AS DATE) AS FFECHADOC,
'' AS CCODRUC,
'' AS CCODENTI,
CAST(NULL AS DATE) AS FFECHAVEN,
'' AS CCODFLU,
'' AS CCODPAGO,
'' AS CCODCOS,
'' AS CCODCOS2,
'' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
'' AS CDOC_DC,
'' AS CSER_DC,
'' AS CNUM_DC,
R.CMONEDA,
R.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM RESULTADO R
INNER JOIN 
  (SELECT CPER,CMES,CCODORI,NASIENTO, SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, SUM(NDEBED-NHABERD) AS DIF1D, MAX(NIDLIN)+1  AS NIDLIN, 
      (CASE WHEN SUM(NDEBED-NHABERD) + SUM(NDEBES-NHABERS)&gt;0 THEN VARDIFG ELSE VARDIFP END) AS CTADIF --- VARDIFG -- VARDIFP
      FROM RESULTADO 
      GROUP BY CPER,CMES,CCODORI,NASIENTO
      HAVING SUM(NDEBE-NHABER) &lt;0 OR SUM(NDEBES-NHABERS) &lt; 0 OR SUM(NDEBED-NHABERD) &lt; 0
  ) AS D
 ON R.CPER = D.CPER AND R.CMES = D.CMES AND R.CCODORI = D.CCODORI AND R.NASIENTO = D.NASIENTO AND R.NIDLIN = D.NIDLIN-1

UNION
---*************** EL OTRO DESTINO 
SELECT  R.CPER,
R.CMES,
R.CCODORI,
R.NASIENTO AS NASIENTO,
D.NIDLIN + 2 AS NIDLIN,
0 AS NTC,
vardifph AS CCODCUE,  -------- VARDIFPH  
0 AS NDEBE,
0 AS NHABER,
'AJUSTE POR DIFERENCIA DE CAMBIO' AS CGLOSA,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &gt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NDEBES,
CASE WHEN R.CMONEDA = 'D' THEN (CASE WHEN D.DIF1S &lt; 0 THEN ABS(D.DIF1S) ELSE 0 END) ELSE 0 END AS NHABERS,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &gt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NDEBED,
CASE WHEN R.CMONEDA = 'S' THEN (CASE WHEN D.DIF1D &lt; 0 THEN ABS(D.DIF1D) ELSE 0 END) ELSE 0 END AS NHABERD,
'S' AS cdes,
'001' AS cdestino,
0 AS NDIFAUTO,
0 AS NCOMP,
'' AS CCODDOC,
'' AS CSERIE,
'' AS CNUMERO,
'' AS CNUMFIN,
CAST(NULL AS DATE) AS FFECHADOC,
'' AS CCODRUC,
'' AS CCODENTI,
CAST(NULL AS DATE) AS FFECHAVEN,
'' AS CCODFLU,
'' AS CCODPAGO,
'' AS CCODCOS,
'' AS CCODCOS2,
'' AS CMREG,
CAST(NULL AS DATE) AS FFEC_DC,
'' AS CDOC_DC,
'' AS CSER_DC,
'' AS CNUM_DC,
R.CMONEDA,
R.FFECHACAN,
0 AS NRESP,
' ' AS CCODPPS,
0 AS NPERDENRE,
0 AS NPORRE,
CAST(NULL AS DATE) AS FFECRE,
' ' AS CSERRE,
' ' AS CNUMRE,
0 AS NTCRE,
0 AS NBASERES,
0 AS NBASERED,
0 AS NIMPRES,
0 AS NIMPRED
FROM RESULTADO R
INNER JOIN 
  (SELECT CPER,CMES,CCODORI,NASIENTO, SUM(NDEBE-NHABER) AS  DIF1, SUM(NDEBES-NHABERS) AS DIF1S, SUM(NDEBED-NHABERD) AS DIF1D, MAX(NIDLIN)+1  AS NIDLIN, 
      (CASE WHEN SUM(NDEBED-NHABERD) + SUM(NDEBES-NHABERS)&gt;0 THEN VARDIFG ELSE VARDIFP END) AS CTADIF --- VARDIFG -- VARDIFP
      FROM RESULTADO 
      GROUP BY CPER,CMES,CCODORI,NASIENTO
      HAVING SUM(NDEBE-NHABER) &lt;0 OR SUM(NDEBES-NHABERS) &lt; 0 OR SUM(NDEBED-NHABERD) &lt; 0
  ) AS D
 ON R.CPER = D.CPER AND R.CMES = D.CMES AND R.CCODORI = D.CCODORI AND R.NASIENTO = D.NASIENTO AND R.NIDLIN = D.NIDLIN-1
 ORDER BY CPER,CMES,CCODORI,NASIENTO,NIDLIN;

-- insert into r3 select * from resultado;
----  ultimo insert 

insert into cf_diario (cper,cmes,ccodori,nasiento,ffecasi, cmoneda, ccodusu, tregistro, ccodsu)
SELECT DISTINCT ON (CPER,CMES,CCODORI,NASIENTO,FFECHACAN,CMONEDA)
CPER,CMES,CCODORI,NASIENTO,FFECHACAN,CMONEDA,'ADMIN',current_timestamp,varlreg FROM RESULTADO ORDER BY CPER,CMES,CCODORI,NASIENTO;


----otro insert 
INSERT INTO cf_diariol (cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes, cdestino,ndifauto,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED,CLEDMCESTA,CLEDMCPER,CLEDMCMES)
select cper,cmes,ccodori,nasiento,nidlin,ntc,ccodcue,ndebe,nhaber,cglosa,ndebes,nhabers,ndebed,nhaberd,cdes,cdestino,ndifauto,ncomp,
ccoddoc,cserie,cnumero,cnumfin,ffechadoc,ccodruc,ccodenti,ffechaven,ccodflu,ccodpago,ccodcos,ccodcos2,
cmreg,ffec_dc,cdoc_dc,cser_dc,cnum_dc,NRESP,CCODPPS,NPERDENRE,NPORRE,FFECRE,CSERRE,CNUMRE,NTCRE,
NBASERES,NBASERED,NIMPRES,NIMPRED,'1',cper,cmes
from resultado 
order by cper, cmes, ccodori, nasiento, nidlin ;


return 1;
END; 
$BODY$
LANGUAGE 'plpgsql' VOLATILE  </value>
  </data>
  <data name="txt_cobra03fm.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION fin_importar_cobranzafondo_integrador_principal()
  RETURNS void AS
$BODY$
	
DECLARE 
	RW RECORD;
	rwperproceso record; 
	rwemp record; 
	vardifp character(10);
	vardifpd character(10);
	vardifph character(10); 
	vardifg character(10);
	varmax integer;
	VCMAXASIENTO text = ''; 
	rw2 record;  
	rwanuladoc record;  
	nreturn integer=0;
	rwctualizasubdiario record;
	vcregper character(20); 
	vcregperc character(20); 
	varperc character(20); 
	vccodenti character(11);
	vflag_dp numeric(1,0); 
	
BEGIN

	--- Fecha: 03/04/2025 actualizacion desde el cobranzanpago		
	--varcentro2=0;
	-- Validaciones fin_cobranzafm
	vflag_dp := (select flag_dp from registro_dp where codigo_dp = 'DP008'); 
	vflag_dp := coalesce(vflag_dp,0); 

	Insert into cg_entitrib (ccodruc,crazsoc, ctipdoc,CNATJUR) 
	select DISTINCT ccodruc,crazsoc, case 
		when Length(ltrim(ccodruc))=8 then '1'
		when Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)in('10','15') then '6'
		when Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)='20' then '6'
		when Length(ltrim(ccodruc))&lt;=15  then '4'
		when Length(ltrim(ccodruc))=12  then '1'
			 else '0'
		 END ::CHAR(1) ctipdoc,
		case 
		when Length(ltrim(ccodruc))=8 then '1'
		when Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)in('10','15') then '1'
		when Length(ltrim(ccodruc))=11 AND  SUBSTRING(ltrim(ccodruc),1,2)='20' then '2'
		when Length(ltrim(ccodruc))&gt;11 and Length(ltrim(ccodruc))&lt;=15  then '3'
		when Length(ltrim(ccodruc))=12  then '1'
			 else '0'
		 END ::CHAR(1) AS CNATJUR   
	 FROM fin_cobranzafm
	 WHERE fin_cobranzafm.es_con_migracion=0 and ------fin_ventas.resultado_migracion not in(2)  and
		crazsoc NOT LIKE('%ANULAD%') AND    ccodruc not in (select ccodruc from cg_entitrib)  ; 


	for rwperproceso in select distinct cper as cperproceso, ntipocobpag from fin_cobranzafm order by ntipocobpag loop 	
		-- propiedades de empresa por periodos 
		for rwemp in select cper, cctaper, cctagan, cregper,cregperc,ccodenti
			     	 from cg_emppro  
			         where cper =rwperproceso.cperproceso loop		
		   
			    vcregper = rwemp.cregper; 
			    vcregperc = rwemp.cregperc;		    
			    vardifp = rwemp.cctaper ;		    
			    vardifpd = (select cdesdeb from cf_plan where cper = rwemp.cper and ccodcue = rwemp.cctaper);  
			    vardifph = (select cdeshab from cf_plan where cper = rwemp.cper and ccodcue = rwemp.cctaper);		    
			    vardifg = rwemp.cctagan ;	
			    vccodenti =	 rwemp.ccodenti;   							
			    if rwperproceso.ntipocobpag = 1 then -- Cobranzas 
					varperc = vcregper; 
			    else 
					varperc = vcregperc;  -- Pagos 
			    end if; 
		end loop; 

		update fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' CAMPO CCODCUE NO EXISTE EN PCGE') ,  resultado_migracion = 2 
		WHERE CCODCUE IN( SELECT A.CCODCUE  FROM fin_cobranzafm A left join cf_plan b on a.CCODCUE=b.ccodcue and b.cper=rwperproceso.cperproceso
							where coalesce(b.ccodcue ,'ERROR')='ERROR' and A.CCODCUE&lt;&gt;'');
		
		update fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' CAMPO CCODCUE ESTA VACIO ') ,  resultado_migracion = 2 
		WHERE CCODCUE IN(
		SELECT A.CCODCUE  FROM fin_cobranzafm A left join cf_plan b on a.CCODCUE=b.ccodcue and b.cper=rwperproceso.cperproceso
		where coalesce(b.ccodcue ,'ERROR')='ERROR' and A.CCODCUE='');
	
		update fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' CAMPO CCUECAN  NO EXISTE EN PCGE') ,  resultado_migracion = 2 
		WHERE CCUECAN IN(
		SELECT A.CCUECAN  FROM fin_cobranzafm A left join cf_plan b on a.CCUECAN=b.ccodcue and b.cper=rwperproceso.cperproceso
		where coalesce(b.ccodcue ,'ERROR')='ERROR' and A.CCUECAN&lt;&gt;'');

		update fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' CAMPO CCUECAN ESTA VACIO ') ,  resultado_migracion = 2 
		WHERE CCUECAN IN(
		SELECT A.CCUECAN  FROM fin_cobranzafm A left join cf_plan b on a.CCUECAN=b.ccodcue and b.cper=rwperproceso.cperproceso
		where coalesce(b.ccodcue ,'ERROR')='ERROR' and A.CCUECAN='') ;

		update fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' RUC NO EXISTE ') ,  resultado_migracion = 2 
		WHERE ccodruc IN(
		select C.ccodruc  from fin_cobranzafm c  left join cg_entitrib e on e.ccodruc=c.ccodruc
			where coalesce(e.ccodruc,'ERROR')='ERROR');
		
		/*update  fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' CENTRO DE COSTO NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_cobranzafm.cper=rwperproceso.cperproceso and   fin_cobranzafm.es_con_migracion=0 and  fin_cobranzafm.ccodcos&lt;&gt;' ' AND idcobranzapago not in(
		Select idcobranzapago From fin_cobranzafm inner join CG_COSTOS on
		fin_cobranzafm.ccodcos=CG_COSTOS.ccodcos  WHERE  fin_cobranzafm.cper=rwperproceso.cperproceso); */

		/*update  fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' CENTROS DE COSTO 2 NO EXISTE ') ,  resultado_migracion = 2 
		where  fin_cobranzafm.cper=rwperproceso.cperproceso and   fin_cobranzafm.es_con_migracion=0 and  fin_cobranzafm.ccodcos2&lt;&gt;' ' and idcobranzapago not in(
		Select idcobranzapago From fin_cobranzafm inner join CG_COSTOS2 on
		fin_cobranzafm.ccodcos2=CG_COSTOS2.ccodcos2  WHERE  fin_cobranzafm.cper=rwperproceso.cperproceso);*/ 

		update  fin_cobranzafm set ccodenti=vccodenti where trim(coalesce(ccodenti,''))='';

	/*	-- Cursor no existe provision 
		DROP TABLE IF EXISTS documentonoprovisionados;
		create temp table documentonoprovisionados as		
		select idcobranzapago, rc.ccodcue, rc.ccodruc, rc.ccoddoc, rc.cserie, rc.cnumero,dl.ccodcue as d_ccodcue,  dl.ccodruc as d_ccodruc, 
			dl.ccoddoc as d_ccoddoc, dl.cserie as d_cserie, dl.cnumero as d_cnumero
	        from fin_cobranzafm rc 
	        left join cf_diariol dl on rc.ccodcue = dl.ccodcue and 
	       							  rc.ccodruc = dl.ccodruc and 
	       							  rc.ccoddoc = dl.ccoddoc and 
	       							  rc.cserie = dl.cserie and 
	       							  rc.cnumero = dl.cnumero and 
	       							  dl.ncomp = 1 and rc.cper =rwperproceso.cperproceso
		where  dl.ccodcue is null; 
		*/
			
		/*update fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' Documento no Provisionado...'),  resultado_migracion = 2  
		where cper=rwperproceso.cperproceso and ntipocobpag = rwperproceso.ntipocobpag  and concat(ccoddoc,cserie,cnumero,ccodruc)  in ( select concat(ccoddoc,cserie,cnumero,ccodruc) from documentonoprovisionados );
		-- Fin - Cursor no existe provision */

		/*-- Validar doble provision 
		DROP TABLE IF EXISTS documentobobleprovision;
		create temp table documentobobleprovision as
		select rc.ccodcue, rc.ccodruc, rc.ccoddoc, rc.cserie, rc.cnumero, count(dl.ccodcue) contar
		from (select distinct ccodcue, ccodruc, ccoddoc, cserie, cnumero from regcobimp ) as rc
					inner join cf_diariol dl on rc.ccodcue = dl.ccodcue and 
											rc.ccodruc = dl.ccodruc and 
											rc.ccoddoc = dl.ccoddoc and 
											rc.cserie = dl.cserie and 
											rc.cnumero = dl.cnumero and 
											dl.ncomp = 1 and dl.cper =  rwperproceso.cperproceso
		group by  rc.ccodcue, rc.ccodruc, rc.ccoddoc, rc.cserie, rc.cnumero
		having count(dl.ccodcue) &gt; 1 ; 
		
		update fin_cobranzafm set obserror=CONCAT(ltrim(obserror),'-',' Documento con Doble provisión...'),  resultado_migracion = 1  
		where cper=rwperproceso.cperproceso and ntipocobpag = rwperproceso.ntipocobpag  and concat(ccoddoc,cserie,cnumero,ccodruc) 
			in ( select concat(ccoddoc,cserie,cnumero,ccodruc) from documentobobleprovision );
		-- Fin Validar doble provision */

		
		for rw in select distinct cper, cmes, ccodori, ccodsu, ccodflu
			  FROM fin_cobranzafm
			  where cper =  rwperproceso.cperproceso and ntipocobpag = rwperproceso.ntipocobpag and  trim(coalesce(obserror,'')) = ''  loop -- esten OK 

			  VCMAXASIENTO = 'SELECT NORIMES' || cast(rw.cmes as integer)::char(2) || ' AS NORIGEN FROM CF_ORIGENL WHERE CPER = ''' || rw.cper || ''' AND CCODORI = ''' || rw.ccodori ||'''' ;
			  for rw2 in EXECUTE VCMAXASIENTO	loop
				varmax  = coalesce(RW2.NORIGEN,0)+1; ---+ 1; -- RW2.NORIGEN + 1;
			  end loop;

		
			  -- Truncar tabla Cada vez carga data por cada subdiario 		
			 truncate table fin_cobranza_integra_fn; 

			 INSERT INTO fin_cobranza_integra_fn(idcobranzapago, ffechacan, cdoccan, csercan, cnumcan, ccuecan, 
							    cmoncan, nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, 
							    ffechadoc, ffechaven, ccodenti, ccodruc, crazsoc, nimportes, 
							    nimported, ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, 
							    nperdenre, cserre, cnumre, ffecre)
			 SELECT  idcobranzapago, ffechacan, cdoccan, csercan, cnumcan, ccuecan, 
				    	cmoncan, nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, 
				    	ffechadoc, ffechaven, ccodenti, ccodruc, crazsoc, nimportes, 
				    	nimported, ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, 
				    	nperdenre, cserre, cnumre, ffecre
			 FROM fin_cobranzafm			        
			 where fin_cobranzafm.cper=rw.cper and 
				 	fin_cobranzafm.cmes = rw.cmes and 
				ntipocobpag = rwperproceso.ntipocobpag and 
				ccodori = rw.ccodori and   ccodsu= rw.ccodsu and ccodflu= rw.ccodflu and
				trim(coalesce(obserror,'')) = ''
				and es_con_migracion in(0) 
				order by ccoddoc,cserie,cnumero,ccodruc asc; 			

			-- Integra las cobranzas 
			nreturn = (SELECT * FROM fin_importar_cobranzafondo_integrador(rw.cper,
											  rw.cmes,
											  rw.ccodori,
											  rw.ccodflu,
											  rw.ccodsu,											 
											  vardifp,
											  vardifpd,
											  vardifph,
											  vardifg,											  				
											  varmax,											  
											  rwperproceso.ntipocobpag,
											  varperc));
		

		update fin_cobranzafm set resultado_migracion = 1 where es_con_migracion = 0 and idcobranzapago in (select idcobranzapago from fin_cobranza_integra_fn); 

	
		INSERT INTO fin_cobranza_integra_fn(idcobranzapago, ffechacan, cdoccan, csercan, cnumcan, ccuecan, 
							    cmoncan, nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, 
							    ffechadoc, ffechaven, ccodenti, ccodruc, crazsoc, nimportes, 
							    nimported, ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, 
							    nperdenre, cserre, cnumre, ffecre)
			 SELECT  idcobranzapago, ffechacan, cdoccan, csercan, cnumcan, ccuecan, 
				    cmoncan, nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, 
				    ffechadoc, ffechaven, ccodenti, ccodruc, crazsoc, nimportes, 
				    nimported, ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, 
				    nperdenre, cserre, cnumre, ffecre
			 FROM fin_cobranzafm			        
			 where fin_cobranzafm.cper=rw.cper and 
				fin_cobranzafm.cmes = rw.cmes and 
				ntipocobpag = rwperproceso.ntipocobpag and 
				ccodori = rw.ccodori and  ccodsu= rw.ccodsu and ccodflu= rw.ccodflu and
				trim(coalesce(obserror,'')) = ''
				and es_con_migracion in(3) 
				order by ccoddoc,cserie,cnumero,ccodruc asc; 			
		end loop; 
		-- Actualizar los anulados a 4 
		update fin_cobranzafm set resultado_migracion = 4 where es_con_migracion = 3 and trim(coalesce(obserror,'')) = '' ;  
		-- anular Los registros 
			
		
		DROP TABLE IF EXISTS documentosAnula;
		create temp table documentosAnula as 
		select a.cper, a.cmes, a.ccodori, a.nasiento, a.ncomp,a.ccoddoc, a.cserie, a.cnumero, a.ccodruc
		from cf_diariol a
		inner join fin_cobranzafm b  on a.ccoddoc = b.ccoddoc  and a.cserie = b.cserie and a.cnumero = b.cnumero and a.ccodcue = b.ccodcue --on a.ccoddoc = b.cdoccan  and a.cserie = b.csercan and a.cnumero = b.cnumcan and a.ccodcue = b.ccuecan 
						and trim(coalesce(obserror,'')) = ''
						and es_con_migracion = 3 
		where a.cper = rwperproceso.cperproceso ; --and a.ncomp = 0;

		for rwanuladoc in select cper, cmes, ccodori, nasiento, ncomp,ccoddoc, cserie, cnumero, ccodruc from documentosAnula  loop 
			DELETE FROM cf_diariol
			where cper = rwanuladoc.cper and cmes = rwanuladoc.cmes and  ccodori = rwanuladoc.ccodori and nasiento = rwanuladoc.nasiento  ; 
			
			DELETE FROM cf_diario
			where cper = rwanuladoc.cper and cmes = rwanuladoc.cmes and  ccodori = rwanuladoc.ccodori and nasiento = rwanuladoc.nasiento  ; 
		end loop; 


		--raise exception 'ccod sub %', rw.cper; 
		-- Actualiza subdiartio y Flujos 
		for rwctualizasubdiario  in select distinct cper,cmes  from fin_cobranzafm  loop

			nreturn = (select * from func_regenerar_correlativo_subdiario(rwctualizasubdiario.cper, rwctualizasubdiario.cmes) as infograba1); 
			nreturn = (select * from func_regenerar_saldos_plan_flujo(rwctualizasubdiario.cper, rwctualizasubdiario.cmes) as infograba2); 			 

		end loop;
		
		-- Cancelacion de documentos 
		-- nreturn = (select * from fin_importar_cobranzafondo_integrador_cancelacion_impcobpag(rwperproceso.cperproceso) as infograba2);
		
	end loop; -- Periodo 

END; 
$BODY$
LANGUAGE 'plpgsql' VOLATILE</value>
  </data>
  <data name="txt_cobra02fm.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION public.fin_importar_cobranzafondo_integrador_cancelacion_impcobpag(vper character)
    RETURNS integer
AS $BODY$

DECLARE
	rw record; 
	vcta character(20); 
	vruc character(15);
	/*
		Autor: Kim martinez
		select fin_importar_cobranzapago_integrador_cancelacion_impcobpag('2023'::character(4)) as infograba; 
	*/
BEGIN
	raise notice 'Borrando'; 
	
	drop table if exists tempDocmentos;
	
	create temp table tempDocmentos as 
	----select ccoddoc, cserie, cnumero, ccodruc from fin_cobranza_integra_fn group by ccoddoc, cserie, cnumero, ccodruc; 

	select ccoddoc, cserie, cnumero, ccodruc from fin_cobranzafm group by ccoddoc, cserie, cnumero, ccodruc; 



	--update cf_diariol set cmesc = '' where cper = vper; 
	
	update cf_diariol 
	set cmesc = '' 
	from (select ccoddoc, cserie, cnumero, ccodruc from tempDocmentos) p
	where cf_diariol.ccoddoc = p.ccoddoc and cf_diariol.cserie = p.cserie and cf_diariol.cnumero = p.cnumero and cf_diariol.ccodruc = p.ccodruc and cf_diariol.cper = vper and cf_diariol.cmesc &lt;&gt; '';


	raise notice 'termino borrar'; 
	
	for rw in select dl.ccodcue, dl.ccodruc, dl.ccoddoc, dl.cserie, dl.cnumero, dl.cmreg, max(dl.cmes) cmesc, 
				sum(case when cmreg = 'S' then ndebes - nhabers else ndebed - nhaberd end) saldo
			from cf_diariol dl
			inner join cf_plan pl on dl.ccodcue = pl.ccodcue and dl.cper = pl.cper and pl.nanacue = 2 and pl.ntipcue in (1,2)
			inner join tempDocmentos doc on dl.ccoddoc = doc.ccoddoc and dl.cserie = doc.cserie and dl.cnumero = doc.cnumero and dl.ccodruc = doc.ccodruc
			where dl.cper = vper and dl.cmes between '00' and '13'
			group by  dl.ccodcue, dl.ccodruc, dl.ccoddoc, dl.cserie, dl.cnumero, dl.cmreg
			having sum(case when cmreg = 'S' then ndebes - nhabers else ndebed - nhaberd end) = 0			
		loop
		
		raise notice 'Actalizando registros  '; 		
		update cf_diariol 
		set cmesc = rw.cmesc 
		where     ccodcue = rw.ccodcue
			  and ccodruc = rw.ccodruc
			  and ccoddoc  = rw.ccoddoc
			  and cserie  = rw.cserie
			  and cnumero = rw.cnumero
			  and cper = vper ;		
			
	end loop;

	return 1;
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;</value>
  </data>
  <data name="txt_cobra01fm.Text" xml:space="preserve">
    <value>CREATE OR REPLACE FUNCTION public.fin_guardar_cobranzafondo_integrador(
	OUT resultado text,
	pjson text)
    RETURNS text
AS $BODY$
	
declare 
	a_json json;
begin

    
    -- 0. Truncar tabla
    truncate table fin_cobranzafm;
    a_json = pjson::json;
    
    -- 1. Importar datos
    INSERT INTO fin_cobranzafm(
        idcobranzapago, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodflu, 
	    ntipocobpag, ffechacan, cdoccan, csercan, cnumcan, ccuecan, cmoncan, 
	    nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, ffechadoc, 
	    ffechaven, ccodenti, ccodruc, crazsoc, nimportes, nimported, 
	    ccodcue, cglosa, ccodcos, ccodcos2, nporre, nimpperc, nperdenre, 
	    cserre, cnumre, ffecre, es_con_migracion
    )    
    select idcobranzapago, ccod_empresa, cper, cmes, ccodori, ccodsu, ccodflu, 
	    ntipocobpag, ffechacan, cdoccan, csercan, cnumcan, ccuecan, cmoncan, 
	    nimporcan, ntipcam, ccodpago, ccoddoc, cserie, cnumero, ffechadoc, 
	    ffechaven, ccodenti, ccodruc, crazsoc, nimportes, nimported, 
	    ccodcue, cglosa::varchar(80) as cglosa, ccodcos, ccodcos2, nporre, nimpperc, nperdenre, 
	    cserre, cnumre, ffecre, es_con_migracion
    from json_to_recordset(a_json)
    as t(
        idcobranzapago numeric(20,0),  
		ccod_empresa character(3),
		cper character(4),
		cmes character(2),
		ccodori character(3),
		ccodsu character(2),
		ccodflu character(4),
		ntipocobpag integer,  -- 1 = Cobranzas, 2 = pagos 
		ffechacan date,
		cdoccan character(2),
		csercan character(20),
		cnumcan character(20),
		ccuecan character(20),
		cmoncan character(1),
		nimporcan numeric(15,2),
		ntipcam numeric(10,6),
		ccodpago character(3),
		ccoddoc character(2),
		cserie character(20),
		cnumero character(20),
		ffechadoc date,
		ffechaven date,
		ccodenti character(11),
		ccodruc character(15),
		crazsoc character(150),
		nimportes numeric(15,2),
		nimported numeric(15,2),
		ccodcue character(20),
		cglosa Text,
		ccodcos character(9),
		ccodcos2 character(9),
		nporre numeric(5,2),
		nimpperc numeric(15,2),
		nperdenre numeric(1,0),
		cserre character(6),
		cnumre character(13),
		ffecre date,
		es_con_migracion numeric(1,0)
    );

    --2. llamar funcion de validar/generar asientos..., debe actualizar campo: resultado_migracion
        -- resultado_migracion se debe completar luego de validar y/o generar el asiento
        -- en vez de reemplazar el codigo en es_con_migracion, se debe agregar el estado en  "resultado_migracion"

	perform fin_importar_cobranzafondo_integrador_principal();
    

    --3. Informe de importacion    
    select json_agg(json_build_object(
        'idcobranzapago', fc.idcobranzapago, 'obserror', fc.obserror, 'es_con_migracion', fc.es_con_migracion, 'resultado_migracion', fc.resultado_migracion
    ))::text
    from fin_cobranzafm fc
    into resultado;
    
end;
$BODY$
LANGUAGE 'plpgsql'
  
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMtQAQDLUAEOy1ABRstQAZHLUAHPy1AB9ctQ
        Af/LUAH/y1AB/8tQAf/MUQH1zFEB0MxRAZbMUQFKy1ABD8xRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMtQAQDLUAEMy1ABVMtQAbbLUAHvy1AB/stQ
        Af/LUAH/zVIB/85UAv/PVgL/0FgC/9BYAv/QWAP/0FgD/9BYA/DRWQO50loDWdJbAw3SWwMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMtQAQDLUAEAy1ABL8tQAanLUAH2y1AB/8tQ
        Af/MUQH/zlQC/9BYAv/SWgP/0lsD/9JbA//SWwP/0lsD/9JbA//SWwP/0lsD/9NaAv/UWgL31FkCrddY
        ATL/KAAA4FAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLUAEAy1ABAstQAVDLUAHYy1AB/8tQ
        Af/LUAH/zlQC/9FYA//SWwP/0lsD/9JbA//SWwP/0lsD/9JbA//SWwP/1FoD/9VcA//OYgj/w2oM/7dx
        D/+5bg7/wWgK3MhiB1TyPwAC2lQBAAAAAAAAAAAAAAAAAAAAAAAAAAAAy1ABAMtQAQHLUAFdy1AB6ctQ
        Af/LUAH/zFEB/89WAv/SWwP/0lsD/9JbA//SWwP/0lsD/9JbA//SWwP/1V0D/9hjBv/GdhL/mJUh/2mu
        L/9NuzX/Q782/0K9N/9OtTL/X6gs6ku0MV0A91YCMMM7AAAAAAAAAAAAAAAAAMtQAQDLUAEAy1ABS8tQ
        AejLUAH/y1AB/8xRAv/QWAP/0lsD/9JbA//SWwP/0lsD/9JbA//SWwP/1F0D/9tjBf/Vcg7/opck/166
        Nf83yTv/Lso7/y/JO/8wyDv/MMc8/y/HO/8wxjz/MMQ66TDDO1MwxT4AMMI5AAAAAAAAAAAAy1ABAMtQ
        ASjLUAHTy1AB/8tQAf/MUQH/0FgD/9JbA//SWwP/0lsD/9JbA//SWwP/0lsD/9ZfBP/gaAf/13QP/46d
        K/9OvDn/Msg7/zDJOv8wyTr/Mcg7/zHHOv8xxjv/McY6/zHFO/8wxDr/MMM62DDCOS4wwjkAAAAAAMtQ
        AQDLUAEHy1ABnctQAf/LUAH/y1EB/9BXAv/SWwP/0lsD/9JbA//SWwP/0lsD/9JbA//XYQX/4msJ/+Nu
        DP+fkiX/VrQ4/zO8Of8wvzr/MMM6/zDGOv8xyDv/Mcc6/zHGO/8xxjr/McU7/zDEOv8wwzr/MMI5pTHB
        OwoxwTsAy1ABAMtQAUXLUAHwy1AB/8tQAf/PVQP/0lsD/9JbA//SWwP/0lsD/9JbA//SWwP/12AF/+Jr
        Cv/mbA3/yHwZ/2utNP8/uzn/ML86/zHAOv8xwDr/MMI6/zDFO/8xxzv/McY7/zHGOv8xxTv/MMQ6/zDD
        Ov8wwjrzMcE7TTHBOwDLUAEIy1ABpctQAf/LUAH/zFIB/9FaA//SWwP/0lsD/9JbA//SWwP/0lsD/9Vd
        BP/haQr/5WwP/+VrEP+ZlSX/Urk3/zW/Of8xwTr/MMI6/zDDOv8wxDv/McU6/zHGO/8xxjv/McY6/zHF
        O/8wxDr/MMM6/zDCOv8xwTqsMb84CstQATbLUAHly1AB/8tQAf/PVwL/0lsD/9JbA//SWwP/0lsD/9Jb
        A//SWwP/3WUK/+VrEP/maw7/3HAQ/HWpL+pGvjnnMsI67zDDOvwwxDv/McU7/zHFO/8xxjv/Mcc7/zHH
        O/8xxjr/McU7/zDEOv8wwzr/MMI6/zHAOukxwDk7y1ABdstQAf3LUAH/zFIC/9FaA//SWwP/0lsD/9Jb
        A//SWwP/0lsC/9dfBf/kag3/5WsN/+VqDf/ibA/Wh54pOjzDOigwwzo3MMQ6XDHFO5sxxjvfMcc7/jHI
        O/8wyTr/Mck6/zHJO/8xxTv/MMQ6/zDDOv8wwjr/McA6/jHAOYLLUAGwy1AB/8tQAf/OVQL/0lsD/9Jb
        Av/SWwL/01wB/9NcAP/TXAD/3WUH/+VrDf/lag3/5moN/+ZpDsPmaA4P5mgOAAAAAAAxxjsAMcY7AzHH
        OygxyDuNMMk67THKOv8xyzv/Mcs7/zHIO/8wxDr/MMM6/zDCOv8xwDr/McA6vstQAdbLUAH/y1AB/9FY
        Af/TXAD/01wA/9NcAP/TXAD/01wA/9VdAf/iaAv/5moO/+ZpDv/maBD/5mgSxeZoEhDmaBIAAAAAAAAA
        AAAAAAAAMMo5AC/JOQQxyjtRMcs73DHMO/8xzTv/Mcw7/zDGOv8wwzr/MMI6/zHAOv8xvzrly1AB68tQ
        Af/MUQH/0loA/9NcAP/TXAD/01wA/9NcAP/TXAH/2GAF/+VpD//maRH/5mgS/+ZoE//mZxPa5mcTHOZn
        EwAAAAAAAAAAAAAAAAAAAAAAMcs6ADHRPAAxzDtEMc073zHOPP8xzjv/Mck7/zDDOv8wwjr/McA6/zG/
        OvvLUAH5y1AB/81TAf/TWwD/01wB/9NcAf/TXAL/010D/9NdA//bYgn/5mkS/+ZoE//maBP/5mcT/+Zm
        FPPmZhRE5mYUAAAAAAAAAAAAAAAAAAAAAAAAAAAAMc06ADHTPQAxzjxeMc879DHPO/8xzTz/MMQ6/zDC
        Ov8xwDr/Mb86/8tQAfTLUAH/zlQB/9NcAv/TXQP/010D/9NdA//TXQP/010D/91jC//maBP/5mcS/+Zn
        Ev/mZhT/5mYV/+dlFpPoYhwD52QYAAAAAAAAAAAAAAAAAAAAAAAAAAAAMc86ADHPOgky0DymMtA8/zLP
        PP8xxjr/MME6/zHAOv8xvzr/y1AB5stQAf/OVQL/010D/9NdA//TXQP/010D/9NdAv/TXQH/3WMK/+Zn
        Ev/mZxP/5mYU/+dlFf/nZBf/52QX5edjFzjnYxcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMtA7ADLQ
        O0Qy0TvyMtE7/zHIOv8wwTr/McA6/zG/OvbLUAHLy1AB/85VAv/TXQL/010C/9NeAf/TXgD/014A/9Ne
        AP/dYgn/5mYU/+ZmFf/nZRb/52QY/+dkF//nYxb/6GMWt+hiGBjoYhgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAy0TsAMtE7DzLRPMMy0Tz/Mck7/zDBOv8xwDr/Mb862stQAZ3LUAH/zVQB/9NeAP/TXgD/014A/9Ne
        AP/TXgD/014A/9thCf/nZRX/52UX/+dkF//nZBb/6GMW/+hjF//oYhf+6GAWp+hdEx3oXhMA62IdAAAA
        AAAAAAAAAAAAADLRQQAv1DkAMdI8kTHSPP8xyjv/MME6/zHAOv8xwDquy1ABXctQAffNUwH/010A/9Ne
        Af/TXgH/014C/9NeAv/TXgL/2GAI/+ZkFv/nZBb/52MV/+hjFv/oYhf/6GEY/+hfFv/oXRP+6VsOxelX
        ClDpVAoM6VUMAAAAAAAAAAAAAAAAADLRPAAw0zxuMdI8/zHJO/8wwTr/McA6+zHAOW3LUAEgy1AB08xR
        Af/SXAP/018D/9NfA//TXwL/018C/9NfAv/VYAT/5GMT/+hjFv/oYxf/6GEY/+hgF//pXhT/6VwR/+la
        Df/pVwv/6VQJ8+lRB7npTQV06EoESelHATvpQwE+8TkAVpOFHa01zzv/MMg7/zDBOv8xwDrcMcA5KstQ
        AQDLUAGFy1AB/9BaAv/TXwL/018C/9NfAv/TXwL/018C/9NfAv/gYQ7/6GIX/+hhF//oXxX/6V4S/+lb
        EP/pWA7/6VYM/+lTCf/pUQb/6U4E/+hLBP/pRwL36UQB8OhBAfLrOwD7rG0U/zPPO/8wxjv/MME6/zHB
        OpMxvjUDy1ABAMtQASrLUAHezlYC/9NfAv/TXwL/018C/9RfAf/UYAH/1GAB/9lgCP/nYBb/6V8U/+lc
        Ev/pWhD/6VcO/+lUC//pUgj/6U8F/+lNA//pSQL/6UYC/+lDAf/oQAD/6DwA/+s2AP+Zexr/MM88/zDD
        Ov8wwjrlMcE7NTHBOwDLUAEAy1ABAMtQAXfMUgH8010B/9RgAf/UYAL/1GAC/9RgA//UYAT/1WAF/+Fe
        Dv/pWxH/6VkP/+lWDP/pVAj/6VEG/+lOBP/pSwL/6UgC/+lEAv/oQQH/6D4A/+g6AP/oNgD/5jQA/3aX
        Jf8uzDz/MMM6/TDCOYEywD0CMcE7AAAAAADLUAEAy1ABE8tQAbDQWAL/1GAE/9RgBf/UYAX/1GAE/9Rh
        A//UYQL/12AE/+ZZC//pVQr/6VIH/+lPBf/pTQP/6UoD/+lGAv/pQwH/6EAA/+g8AP/oOQD/6DUA/+kv
        AP/RQwf/TLgz/y/HO/8wwzu4MMI5FjDCOQAAAAAAAAAAAAAAAADLUAEAyk8BKM1TAsfTXgP/1GEC/9Rh
        Av/UYQH/1GEB/9RhAf/UYQH/2lwD/+dSBf/pTgX/6UsD/+lIAv/pRQH/6EIB/+g+AP/oOwD/6DcA/+gz
        AP/nLwD/6SkA/5l0Gf8zyTv/MMQ60DDDOy8wwzsAAAAAAAAAAAAAAAAAAAAAAMtQAQDLUQEAy08BL89Y
        AcfUYAH/1GEB/9RhAf/UYQH/1GEB/9RhAf/UYQH/21oB/+dMAf/pRgH/6UMB/+hAAP/oPQD/6DkA/+g1
        AP/oMQD/5y0A/+onAP/JRAr/TbUy/y/HPNAxxDo4MsQ8ADDDOwAAAAAAAAAAAAAAAAAAAAAAAAAAAMNC
        AADSXAEAzVQBJ9JeAa/UYQH71GEB/9RiAf/UYgH/1GIB/9RiAv/UYgP/2lkC/+RHAf/oPgD/6DsA/+g3
        AP/oMwD/6C8A/+grAP/qJQD/2DMF/2qaKP0vyTu5McQ7LzDFOgAyxDwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADWZQAA018BEdRiAHTUYgLe1GID/9RiA//UYgT/1GIE/9RiA//UYwL/110B/99M
        AP/mOwD/6DEA/+gsAP/oKQD/6SQA/9czBf98hyHmMsg7gi7HOxcwxjsAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUYgQA1GIEAdRiBCnUYgSE1GID0tRjAvfUYwH/1WMA/9Vj
        AP/VYwD/1WMA/9hbAP/eSwH/4zoC/+YrAfraLgTcj3UckzLKOjQQ3kYDJM8/AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1GIEANRiBQLUYwAe1WMAWtVj
        AJnVYwDG1WMA4tVjAO7VYwHu1WQD59VkBM7WYASm204DacFNCike40MESL81AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AB//4AAH/4AAAf8AAAD+AAAAfgAAAHwAAAA4AAAAGAAAABAAAAAAAA
        AAAAAAAAAADgAAAA+AAAAP4AAAD/AAAAfwAAAH+AAAA/gAAAH8AAAAfAAAAAAAAAAACAAAABgAAAAcAA
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>